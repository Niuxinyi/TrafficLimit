{"version":3,"sources":["../src/org/locationtech/jts/util/NumberUtil.js","../src/java/lang/IllegalArgumentException.js","../src/java/lang/Double.js","../src/java/lang/Comparable.js","../src/java/lang/Cloneable.js","../src/java/util/Comparator.js","../src/java/io/Serializable.js","../src/java/lang/RuntimeException.js","../src/org/locationtech/jts/util/AssertionFailedException.js","../src/org/locationtech/jts/util/Assert.js","../src/org/locationtech/jts/geom/Coordinate.js","../src/java/util/Iterator.js","../src/java/util/Collection.js","../src/java/util/IndexOutOfBoundsException.js","../src/java/util/List.js","../src/java/util/NoSuchElementException.js","../src/java/util/OperationNotSupported.js","../src/java/util/ArrayList.js","../src/org/locationtech/jts/geom/CoordinateList.js","../src/org/locationtech/jts/geom/Envelope.js","../src/java/lang/Exception.js","../src/org/locationtech/jts/algorithm/NotRepresentableException.js","../src/org/locationtech/jts/geom/Location.js","../src/org/locationtech/jts/math/MathUtil.js","../src/java/lang/StringBuffer.js","../src/java/lang/Integer.js","../src/java/lang/Character.js","../src/org/locationtech/jts/math/DD.js","../src/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","../src/org/locationtech/jts/geom/CoordinateSequence.js","../src/java/lang/System.js","../src/org/locationtech/jts/algorithm/HCoordinate.js","../src/org/locationtech/jts/geom/CoordinateSequenceFactory.js","../src/org/locationtech/jts/geom/GeometryComponentFilter.js","../src/org/locationtech/jts/geom/Geometry.js","../src/org/locationtech/jts/geom/CoordinateFilter.js","../src/org/locationtech/jts/algorithm/BoundaryNodeRule.js","../src/org/locationtech/jts/geom/CoordinateArrays.js","../src/java/util/Map.js","../src/java/util/SortedMap.js","../src/java/util/Set.js","../src/java/util/HashSet.js","../src/java/util/TreeMap.js","../src/org/locationtech/jts/geom/Lineal.js","../src/java/util/SortedSet.js","../src/java/util/TreeSet.js","../src/java/util/Arrays.js","../src/org/locationtech/jts/geom/Dimension.js","../src/org/locationtech/jts/geom/GeometryFilter.js","../src/org/locationtech/jts/geom/CoordinateSequenceFilter.js","../src/org/locationtech/jts/geom/GeometryCollection.js","../src/org/locationtech/jts/geom/MultiLineString.js","../src/org/locationtech/jts/operation/BoundaryOp.js","../src/java/io/PrintStream.js","../src/java/io/StringReader.js","../src/java/text/DecimalFormat.js","../src/java/io/ByteArrayOutputStream.js","../src/java/io/IOException.js","../src/java/io/LineNumberReader.js","../src/org/locationtech/jts/util/StringUtil.js","../src/org/locationtech/jts/geom/CoordinateSequences.js","../src/org/locationtech/jts/geom/LineString.js","../src/org/locationtech/jts/geom/Puntal.js","../src/org/locationtech/jts/geom/Point.js","../src/org/locationtech/jts/geom/Polygonal.js","../src/org/locationtech/jts/geom/Polygon.js","../src/org/locationtech/jts/geom/MultiPoint.js","../src/org/locationtech/jts/geom/LinearRing.js","../src/org/locationtech/jts/geom/MultiPolygon.js","../src/org/locationtech/jts/geom/util/GeometryEditor.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","../src/Map.js","../src/java/util/HashMap.js","../src/org/locationtech/jts/geom/PrecisionModel.js","../src/org/locationtech/jts/geom/GeometryFactory.js","../src/org/locationtech/jts/io/WKTParser.js","../src/org/locationtech/jts/io/WKTWriter.js","../src/org/locationtech/jts/algorithm/LineIntersector.js","../src/org/locationtech/jts/algorithm/RobustLineIntersector.js","../src/org/locationtech/jts/algorithm/RobustDeterminant.js","../src/org/locationtech/jts/algorithm/RayCrossingCounter.js","../src/org/locationtech/jts/algorithm/CGAlgorithms.js","../src/org/locationtech/jts/geom/LineSegment.js","../src/org/locationtech/jts/geom/IntersectionMatrix.js","../src/org/locationtech/jts/algorithm/Centroid.js","../src/java/util/EmptyStackException.js","../src/java/util/Stack.js","../src/org/locationtech/jts/util/UniqueCoordinateArrayFilter.js","../src/org/locationtech/jts/algorithm/ConvexHull.js","../src/org/locationtech/jts/geom/util/GeometryTransformer.js","../src/org/locationtech/jts/operation/overlay/snap/LineStringSnapper.js","../src/org/locationtech/jts/operation/overlay/snap/GeometrySnapper.js","../src/org/locationtech/jts/precision/CommonBits.js","../src/org/locationtech/jts/precision/CommonBitsRemover.js","../src/org/locationtech/jts/geom/GeometryCollectionIterator.js","../src/org/locationtech/jts/algorithm/PointLocator.js","../src/org/locationtech/jts/noding/Octant.js","../src/org/locationtech/jts/noding/SegmentString.js","../src/org/locationtech/jts/noding/BasicSegmentString.js","../src/org/locationtech/jts/index/strtree/Boundable.js","../src/org/locationtech/jts/index/strtree/ItemBoundable.js","../src/org/locationtech/jts/util/PriorityQueue.js","../src/org/locationtech/jts/index/ItemVisitor.js","../src/org/locationtech/jts/index/SpatialIndex.js","../src/org/locationtech/jts/index/strtree/AbstractNode.js","../src/org/locationtech/jts/index/strtree/BoundablePair.js","../src/org/locationtech/jts/index/strtree/AbstractSTRtree.js","../src/org/locationtech/jts/index/strtree/ItemDistance.js","../src/org/locationtech/jts/index/strtree/STRtree.js","../src/org/locationtech/jts/noding/SegmentPointComparator.js","../src/org/locationtech/jts/noding/SegmentNode.js","../src/org/locationtech/jts/noding/SegmentNodeList.js","../src/org/locationtech/jts/noding/NodableSegmentString.js","../src/org/locationtech/jts/noding/NodedSegmentString.js","../src/org/locationtech/jts/index/chain/MonotoneChainOverlapAction.js","../src/org/locationtech/jts/index/chain/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/Quadrant.js","../src/org/locationtech/jts/index/chain/MonotoneChainBuilder.js","../src/org/locationtech/jts/noding/Noder.js","../src/org/locationtech/jts/noding/SinglePassNoder.js","../src/org/locationtech/jts/noding/MCIndexNoder.js","../src/org/locationtech/jts/geom/TopologyException.js","../src/org/locationtech/jts/noding/SegmentIntersector.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinder.js","../src/org/locationtech/jts/noding/FastNodingValidator.js","../src/org/locationtech/jts/geomgraph/EdgeNodingValidator.js","../src/org/locationtech/jts/geom/util/GeometryCollectionMapper.js","../src/org/locationtech/jts/geomgraph/Position.js","../src/org/locationtech/jts/geomgraph/TopologyLocation.js","../src/org/locationtech/jts/geomgraph/Label.js","../src/org/locationtech/jts/geomgraph/EdgeRing.js","../src/org/locationtech/jts/operation/overlay/MinimalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/MaximalEdgeRing.js","../src/org/locationtech/jts/geomgraph/GraphComponent.js","../src/org/locationtech/jts/geomgraph/Node.js","../src/org/locationtech/jts/geomgraph/NodeMap.js","../src/org/locationtech/jts/geomgraph/EdgeEnd.js","../src/org/locationtech/jts/geomgraph/DirectedEdge.js","../src/org/locationtech/jts/geomgraph/NodeFactory.js","../src/org/locationtech/jts/geomgraph/PlanarGraph.js","../src/org/locationtech/jts/operation/overlay/PolygonBuilder.js","../src/org/locationtech/jts/operation/overlay/LineBuilder.js","../src/org/locationtech/jts/operation/overlay/PointBuilder.js","../src/org/locationtech/jts/algorithm/locate/PointOnGeometryLocator.js","../src/org/locationtech/jts/algorithm/locate/SimplePointInAreaLocator.js","../src/org/locationtech/jts/geomgraph/EdgeEndStar.js","../src/org/locationtech/jts/geomgraph/DirectedEdgeStar.js","../src/org/locationtech/jts/operation/overlay/OverlayNodeFactory.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/index/SweepLineEvent.js","../src/org/locationtech/jts/geomgraph/index/EdgeSetIntersector.js","../src/org/locationtech/jts/geomgraph/index/SegmentIntersector.js","../src/org/locationtech/jts/geomgraph/index/SimpleMCSweepLineIntersector.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeLeafNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeBranchNode.js","../src/org/locationtech/jts/index/intervalrtree/SortedPackedIntervalRTree.js","../src/org/locationtech/jts/geom/util/LinearComponentExtracter.js","../src/org/locationtech/jts/index/ArrayListVisitor.js","../src/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.js","../src/org/locationtech/jts/geomgraph/EdgeIntersection.js","../src/org/locationtech/jts/geomgraph/EdgeIntersectionList.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainIndexer.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainEdge.js","../src/org/locationtech/jts/geomgraph/Depth.js","../src/org/locationtech/jts/geomgraph/Edge.js","../src/org/locationtech/jts/geomgraph/GeometryGraph.js","../src/org/locationtech/jts/operation/GeometryGraphOperation.js","../src/org/locationtech/jts/noding/OrientedCoordinateArray.js","../src/org/locationtech/jts/geomgraph/EdgeList.js","../src/org/locationtech/jts/operation/overlay/OverlayOp.js","../src/org/locationtech/jts/operation/overlay/snap/SnapOverlayOp.js","../src/org/locationtech/jts/operation/overlay/snap/SnapIfNeededOverlayOp.js","../src/org/locationtech/jts/algorithm/InteriorPointArea.js","../src/org/locationtech/jts/algorithm/InteriorPointLine.js","../src/org/locationtech/jts/algorithm/InteriorPointPoint.js","../src/org/locationtech/jts/index/chain/MonotoneChainSelectAction.js","../src/org/locationtech/jts/index/bintree/NodeBase.js","../src/org/locationtech/jts/index/bintree/Interval.js","../src/org/locationtech/jts/index/quadtree/DoubleBits.js","../src/org/locationtech/jts/index/bintree/Key.js","../src/org/locationtech/jts/index/bintree/Node.js","../src/org/locationtech/jts/index/quadtree/IntervalSize.js","../src/org/locationtech/jts/index/bintree/Root.js","../src/org/locationtech/jts/index/bintree/Bintree.js","../src/org/locationtech/jts/algorithm/PointInRing.js","../src/org/locationtech/jts/algorithm/MCPointInRing.js","../src/org/locationtech/jts/algorithm/Angle.js","../src/org/locationtech/jts/geom/Triangle.js","../src/org/locationtech/jts/algorithm/MinimumBoundingCircle.js","../src/org/locationtech/jts/algorithm/MinimumDiameter.js","../src/org/locationtech/jts/densify/Densifier.js","../src/org/locationtech/jts/edgegraph/HalfEdge.js","../src/org/locationtech/jts/edgegraph/MarkHalfEdge.js","../src/org/locationtech/jts/edgegraph/EdgeGraph.js","../src/org/locationtech/jts/dissolve/DissolveHalfEdge.js","../src/org/locationtech/jts/dissolve/DissolveEdgeGraph.js","../src/org/locationtech/jts/dissolve/LineDissolver.js","../src/org/locationtech/jts/index/quadtree/NodeBase.js","../src/org/locationtech/jts/index/quadtree/Key.js","../src/org/locationtech/jts/index/quadtree/Node.js","../src/org/locationtech/jts/index/quadtree/Root.js","../src/org/locationtech/jts/index/quadtree/Quadtree.js","../src/org/locationtech/jts/io/GeoJSONParser.js","../src/org/locationtech/jts/io/GeoJSONReader.js","../src/org/locationtech/jts/io/GeoJSONWriter.js","../src/org/locationtech/jts/io/WKTReader.js","../src/org/locationtech/jts/io/OL3Parser.js","../src/org/locationtech/jts/noding/ScaledNoder.js","../src/org/locationtech/jts/operation/IsSimpleOp.js","../src/org/locationtech/jts/operation/buffer/BufferParameters.js","../src/org/locationtech/jts/operation/buffer/RightmostEdgeFinder.js","../src/java/util/LinkedList.js","../src/org/locationtech/jts/operation/buffer/BufferSubgraph.js","../src/org/locationtech/jts/operation/buffer/BufferInputLineSimplifier.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentString.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentGenerator.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveBuilder.js","../src/org/locationtech/jts/operation/buffer/SubgraphDepthLocater.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveSetBuilder.js","../src/org/locationtech/jts/noding/IntersectionAdder.js","../src/org/locationtech/jts/operation/buffer/BufferBuilder.js","../src/org/locationtech/jts/noding/NodingValidator.js","../src/org/locationtech/jts/noding/snapround/HotPixel.js","../src/org/locationtech/jts/noding/snapround/MCIndexPointSnapper.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinderAdder.js","../src/org/locationtech/jts/noding/snapround/MCIndexSnapRounder.js","../src/org/locationtech/jts/operation/buffer/BufferOp.js","../src/org/locationtech/jts/geom/util/PolygonExtracter.js","../src/org/locationtech/jts/operation/distance/GeometryLocation.js","../src/org/locationtech/jts/geom/util/PointExtracter.js","../src/org/locationtech/jts/operation/distance/ConnectedElementLocationFilter.js","../src/org/locationtech/jts/operation/distance/DistanceOp.js","../src/org/locationtech/jts/operation/linemerge/EdgeString.js","../src/org/locationtech/jts/planargraph/GraphComponent.js","../src/org/locationtech/jts/planargraph/DirectedEdge.js","../src/org/locationtech/jts/operation/linemerge/LineMergeDirectedEdge.js","../src/org/locationtech/jts/planargraph/Edge.js","../src/org/locationtech/jts/planargraph/DirectedEdgeStar.js","../src/org/locationtech/jts/planargraph/Node.js","../src/org/locationtech/jts/operation/linemerge/LineMergeEdge.js","../src/org/locationtech/jts/planargraph/NodeMap.js","../src/org/locationtech/jts/planargraph/PlanarGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMergeGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMerger.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeDirectedEdge.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeEdge.js","../src/org/locationtech/jts/operation/valid/ConnectedInteriorTester.js","../src/org/locationtech/jts/operation/relate/EdgeEndBuilder.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundle.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundleStar.js","../src/org/locationtech/jts/operation/relate/RelateNode.js","../src/org/locationtech/jts/operation/relate/RelateNodeFactory.js","../src/org/locationtech/jts/operation/relate/RelateNodeGraph.js","../src/org/locationtech/jts/operation/valid/ConsistentAreaTester.js","../src/org/locationtech/jts/operation/valid/IndexedNestedRingTester.js","../src/org/locationtech/jts/operation/valid/TopologyValidationError.js","../src/org/locationtech/jts/operation/valid/IsValidOp.js","../src/org/locationtech/jts/operation/polygonize/EdgeRing.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeGraph.js","../src/org/locationtech/jts/operation/polygonize/Polygonizer.js","../src/org/locationtech/jts/operation/relate/RelateComputer.js","../src/org/locationtech/jts/operation/predicate/RectangleContains.js","../src/org/locationtech/jts/algorithm/RectangleLineIntersector.js","../src/org/locationtech/jts/geom/util/ShortCircuitedGeometryVisitor.js","../src/org/locationtech/jts/operation/predicate/RectangleIntersects.js","../src/org/locationtech/jts/operation/relate/RelateOp.js","../src/org/locationtech/jts/geom/util/GeometryCombiner.js","../src/org/locationtech/jts/operation/union/PointGeometryUnion.js","../src/org/locationtech/jts/geom/util/GeometryExtracter.js","../src/org/locationtech/jts/operation/union/CascadedPolygonUnion.js","../src/org/locationtech/jts/operation/union/UnaryUnionOp.js","../src/org/locationtech/jts/precision/PrecisionReducerCoordinateOperation.js","../src/org/locationtech/jts/precision/GeometryPrecisionReducer.js","../src/org/locationtech/jts/simplify/DouglasPeuckerLineSimplifier.js","../src/org/locationtech/jts/simplify/DouglasPeuckerSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLineSegment.js","../src/org/locationtech/jts/simplify/TaggedLineString.js","../src/org/locationtech/jts/simplify/LineSegmentIndex.js","../src/org/locationtech/jts/simplify/TaggedLineStringSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLinesSimplifier.js","../src/org/locationtech/jts/simplify/TopologyPreservingSimplifier.js","../src/org/locationtech/jts/triangulate/SplitSegment.js","../src/org/locationtech/jts/triangulate/ConstraintSplitPointFinder.js","../src/org/locationtech/jts/triangulate/NonEncroachingSplitPointFinder.js","../src/org/locationtech/jts/triangulate/quadedge/TrianglePredicate.js","../src/org/locationtech/jts/triangulate/quadedge/Vertex.js","../src/org/locationtech/jts/triangulate/ConstraintVertex.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdge.js","../src/org/locationtech/jts/triangulate/IncrementalDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LastFoundQuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LocateFailureException.js","../src/org/locationtech/jts/triangulate/quadedge/TriangleVisitor.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeSubdivision.js","../src/org/locationtech/jts/triangulate/Segment.js","../src/org/locationtech/jts/index/kdtree/KdNodeVisitor.js","../src/org/locationtech/jts/index/kdtree/KdNode.js","../src/org/locationtech/jts/index/kdtree/KdTree.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/DelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/VoronoiDiagramBuilder.js","../src/org/locationtech/jts/operation/union/UnionOp.js","../src/Array.js","../src/Number.js","../src/Math.js","../src/extend.js","../src/inherits.js","../src/hasInterface.js","../src/java/util/Collections.js","../src/org/locationtech/jts/monkey.js","../src/jsts.js"],"names":["NumberUtil","IllegalArgumentException","Double","Comparable","Clonable","Comparator","Serializable","RuntimeException","message","name","stack","Error","call","this","AssertionFailedException","arguments","length","Assert","Coordinate","x","y","z","c","NULL_ORDINATE","DimensionalComparator","dimensionsToTest","Iterator","Collection","IndexOutOfBoundsException","List","NoSuchElementException","OperationNotSupported","ArrayList","array_","addAll","CoordinateList","apply","coord","ensureCapacity","add","allowRepeated","Envelope","minx","maxx","miny","maxy","init","p","env","p1","p2","x1","x2","y1","y2","Exception","NotRepresentableException","Location","MathUtil","StringBuffer","str","Integer","value","Character","DD","hi","lo","dd","parse","CGAlgorithmsDD","CoordinateSequence","System","HCoordinate","w","_x","_y","_w","q1","q2","px","py","pw","qx","qy","qw","CoordinateSequenceFactory","GeometryComponentFilter","Geometry","envelope","factory","SRID","userData","getSRID","CoordinateFilter","BoundaryNodeRule","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","CoordinateArrays","ForwardComparator","BidirectionalComparator","Map","SortedMap","Set","HashSet","colorOf","BLACK","color","parentOf","parent","setColor","leftOf","left","rightOf","right","TreeMap","root_","size_","Lineal","SortedSet","TreeSet","Arrays","Dimension","GeometryFilter","CoordinateSequenceFilter","GeometryCollection","geometries","hasNullElements","MultiLineString","lineStrings","BoundaryOp","geom","geomFact","bnRule","endpointMap","MOD2_BOUNDARY_RULE","getFactory","Counter","count","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","CoordinateSequences","LineString","points","Puntal","Point","coordinates","Polygonal","Polygon","shell","holes","createLinearRing","isEmpty","hasNonEmptyElements","MultiPoint","LinearRing","GeometryFactory","getCoordinateSequenceFactory","create","hasInterface","validateConstruction","MultiPolygon","polygons","GeometryEditor","isUserDataCopied","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","dimension","Array","Number","isInteger","size","fill","i","coordSeq","getDimension","getCoordinateCopy","CoordinateArraySequenceFactory","is","a","b","createCollection","proto","objectOnly","constructor","_keys","_values","_itp","sharedSize","prototype","forEach","set","sharedDelete","key","has","splice","sharedGet","undefined","list","Object","TypeError","indexOf","mapHas","sharedSet","push","sharedClear","sharedKeys","sharedIterator","sharedValues","mapEntries","itp","array","array2","done","v","k","sharedForEach","callback","context","it","entries","r","next","HashMap","map_","MapImpl","PrecisionModel","modelType","scale","FLOATING","Type","FIXED","setScale","pm","nameToTypeMap","put","precisionModel","coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","WKTParser","geometryFactory","WKTWriter","parser","LineIntersector","result","inputLines","map","intPt","intLineIndex","_isProper","pa","pb","RobustLineIntersector","RobustDeterminant","RayCrossingCounter","crossingCount","isPointOnSegment","CGAlgorithms","LineSegment","p0","ls","x0","y0","IntersectionMatrix","matrix","setAll","FALSE","elements","other","INTERIOR","BOUNDARY","EXTERIOR","Centroid","areaBasePt","triangleCent3","areasum2","cg3","lineCentSum","totalLength","ptCount","ptCentSum","EmptyStackException","Stack","UniqueCoordinateArrayFilter","treeSet","ConvexHull","geomFactory","inputPts","geometry","extractCoordinates","pts","filterCoordinates","RadialComparator","origin","GeometryTransformer","inputGeom","pruneEmptyGeometry","preserveGeometryCollectionType","preserveCollections","preserveType","LineStringSnapper","snapTolerance","srcPts","seg","allowSnappingToSourceVertices","_isClosed","srcLine","getCoordinates","isClosed","GeometrySnapper","srcGeom","SnapTransformer","snapPts","isSelfSnap","CommonBits","isFirst","commonMantissaBitsCount","commonBits","commonSignExp","CommonBitsRemover","commonCoord","ccFilter","CommonCoordinateFilter","commonBitsX","commonBitsY","Translater","trans","GeometryCollectionIterator","atStart","max","index","subcollectionIterator","getNumGeometries","PointLocator","boundaryRule","OGC_SFS_BOUNDARY_RULE","isIn","numBoundaries","Octant","SegmentString","BasicSegmentString","data","Boundable","ItemBoundable","bounds","item","PriorityQueue","_size","items","ItemVisitor","SpatialIndex","AbstractNode","childBoundables","level","BoundablePair","boundable1","boundable2","_distance","itemDistance","distance","AbstractSTRtree","root","built","itemBoundables","nodeCapacity","DEFAULT_NODE_CAPACITY","isTrue","IntersectsOp","ItemDistance","STRtree","STRtreeNode","SegmentPointComparator","SegmentNode","segString","segmentIndex","segmentOctant","_isInterior","equals2D","getCoordinate","SegmentNodeList","nodeMap","edge","NodeVertexIterator","nodeList","nodeIt","currNode","nextNode","currSegIndex","getEdge","iterator","readNextNode","NodableSegmentString","NodedSegmentString","MonotoneChainOverlapAction","tempEnv1","tempEnv2","overlapSeg1","overlapSeg2","MonotoneChain","start","end","id","Quadrant","MonotoneChainBuilder","Noder","SinglePassNoder","segInt","setSegmentIntersector","MCIndexNoder","monoChains","idCounter","nodedSegStrings","nOverlaps","si","SegmentOverlapAction","TopologyException","pt","msg","msgWithCoord","SegmentIntersector","InteriorIntersectionFinder","findAllIntersections","isCheckEndSegmentsOnly","li","interiorIntersection","intSegments","intersections","intersectionCount","keepIntersections","FastNodingValidator","segStrings","_isValid","EdgeNodingValidator","nv","edges","toSegmentStrings","GeometryCollectionMapper","mapOp","Position","TopologyLocation","location","on","ON","gl","LEFT","RIGHT","Label","elt","onLoc","lbl","geomIndex","NONE","setLocation","leftLoc","rightLoc","setLocations","EdgeRing","startDe","maxNodeDegree","label","ring","_isHole","computePoints","computeRing","MinimalEdgeRing","MaximalEdgeRing","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","Node","NodeMap","nodeFact","EdgeEnd","node","dx","dy","quadrant","DirectedEdge","_isForward","sym","nextMin","edgeRing","minEdgeRing","depth","isForward","n","getNumPoints","computeDirectedLabel","NodeFactory","PlanarGraph","nodes","edgeEndList","PolygonBuilder","shellList","LineBuilder","op","ptLocator","lineEdgesList","resultLineList","PointBuilder","resultPointList","PointOnGeometryLocator","SimplePointInAreaLocator","EdgeEndStar","edgeMap","edgeList","ptInAreaLocation","DirectedEdgeStar","resultAreaEdgeList","SCANNING_FOR_INCOMING","LINKING_TO_OUTGOING","OverlayNodeFactory","mce","chainIndex","SweepLineEvent","xValue","eventType","insertEvent","deleteEventIndex","obj","DELETE","INSERT","EdgeSetIntersector","_hasIntersection","hasProper","hasProperInterior","properIntersectionPoint","includeProper","recordIsolated","isSelfIntersection","numIntersections","numTests","bdyNodes","_isDone","isDoneWhenProperInt","SimpleMCSweepLineIntersector","events","IntervalRTreeNode","min","POSITIVE_INFINITY","NEGATIVE_INFINITY","NodeComparator","IntervalRTreeLeafNode","IntervalRTreeBranchNode","node1","node2","n1","n2","buildExtent","SortedPackedIntervalRTree","leaves","LinearComponentExtracter","lines","isForcedToLineString","ArrayListVisitor","IndexedPointInAreaLocator","g","IntervalIndexedGeometry","SegmentVisitor","counter","EdgeIntersection","dist","EdgeIntersectionList","MonotoneChainIndexer","MonotoneChainEdge","e","startIndex","env1","env2","mcb","getChainStartIndices","Depth","j","NULL_VALUE","Edge","eiList","_isIsolated","depthDelta","GeometryGraph","parentGeom","lineEdgeMap","boundaryNodeRule","useBoundaryDeterminationRule","argIndex","boundaryNodes","_hasTooFewPoints","invalidPoint","areaPtLocator","GeometryGraphOperation","resultPrecisionModel","arg","g0","setComputationPrecision","getPrecisionModel","g1","compareTo","OrientedCoordinateArray","_orientation","orientation","EdgeList","ocaMap","OverlayOp","resultGeom","graph","resultPolyList","SnapOverlayOp","cbr","g2","computeSnapTolerance","SnapIfNeededOverlayOp","InteriorPointArea","interiorPoint","maxWidth","SafeBisectorFinder","poly","centreY","hiY","MAX_VALUE","loY","getEnvelopeInternal","getMaxY","getMinY","avg","InteriorPointLine","centroid","minDistance","getCentroid","addInterior","addEndpoints","InteriorPointPoint","MonotoneChainSelectAction","selectedSegment","NodeBase","subnode","Interval","interval","DoubleBits","CVTFWD","NumW","Qty","Sign","Expo","Mant","Bin","Inf","ExW","isFinite","d","Math","pow","abs","Key","computeKey","centre","getMin","getMax","IntervalSize","Root","Bintree","minExtent","PointInRing","MCPointInRing","tree","crossings","buildIndex","MCSelecter","mcp","Angle","Triangle","MinimumBoundingCircle","input","extremalPts","radius","MinimumDiameter","isConvex","convexHullPts","minBaseSeg","minWidthPt","minPtIndex","minWidth","Densifier","distanceTolerance","DensifyTransformer","HalfEdge","_orig","_sym","_next","orig","MarkHalfEdge","_isMarked","EdgeGraph","vertexMap","DissolveHalfEdge","_isStart","DissolveEdgeGraph","LineDissolver","nodeEdgeStack","ringStartEdge","itemEnv","centrex","centrey","getMinX","getMaxX","Quadtree","GeoJSONParser","GeoJSONReader","GeoJSONWriter","WKTReader","p2c","OL3Parser","olReference","ol","ScaledNoder","noder","scaleFactor","offsetX","offsetY","isScaled","isIntegerPrecision","IsSimpleOp","isClosedEndpointsInInterior","nonSimpleLocation","isInBoundary","EndpointInfo","degree","BufferParameters","quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","endCapStyle","CAP_ROUND","joinStyle","JOIN_ROUND","mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","setQuadrantSegments","setEndCapStyle","setJoinStyle","setMitreLimit","RightmostEdgeFinder","minIndex","minCoord","minDe","orientedDe","LinkedList","BufferSubgraph","finder","dirEdgeList","rightMostCoord","BufferInputLineSimplifier","inputLine","distanceTol","isDeleted","angleOrientation","COUNTERCLOCKWISE","OffsetSegmentString","ptList","minimimVertexDistance","OffsetSegmentGenerator","maxCurveSegmentError","filletAngleQuantum","closingSegLengthFactor","segList","bufParams","s0","s1","s2","seg0","seg1","offset0","offset1","side","_hasNarrowConcaveAngle","PI","getQuadrantSegments","getJoinStyle","MAX_CLOSING_SEG_LEN_FACTOR","OffsetCurveBuilder","SubgraphDepthLocater","subgraphs","cga","DepthSegment","upwardSeg","leftDepth","OffsetCurveSetBuilder","curveBuilder","curveList","IntersectionAdder","hasInterior","numInteriorIntersections","numProperIntersections","BufferBuilder","workingPrecisionModel","workingNoder","NodingValidator","HotPixel","originalPt","ptScaled","p0Scaled","p1Scaled","corner","safeEnv","initCorners","MCIndexPointSnapper","HotPixelSnapAction","hotPixel","parentEdge","hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","interiorIntersections","MCIndexSnapRounder","pointSnapper","setPrecisionModel","getScale","BufferOp","argGeom","resultGeometry","saveException","PolygonExtracter","comps","GeometryLocation","component","segIndex","INSIDE_AREA","PointExtracter","ConnectedElementLocationFilter","locations","DistanceOp","terminateDistance","minDistanceLocation","EdgeString","directedEdges","from","to","edgeDirection","angle","directionPt","atan2","LineMergeDirectedEdge","dirEdge","de0","de1","setDirectedEdges","outEdges","sorted","deStar","LineMergeEdge","line","dirEdges","LineMergeGraph","LineMerger","mergedLineStrings","edgeStrings","PolygonizeDirectedEdge","PolygonizeEdge","ConnectedInteriorTester","geomGraph","disconnectedRingcoord","EdgeEndBuilder","EdgeEndBundle","edgeEnds","getDirectedCoordinate","getLabel","insert","EdgeEndBundleStar","RelateNode","RelateNodeFactory","RelateNodeGraph","ConsistentAreaTester","nodeGraph","IndexedNestedRingTester","rings","totalEnv","nestedPt","TopologyValidationError","errorType","copy","IsValidOp","parentGeometry","isSelfTouchingRingFormingHoleValid","validErr","deList","lowestEdge","ringPts","_isProcessed","_isIncludedSet","_isIncluded","EnvelopeComparator","PolygonizeGraph","Polygonizer","lineStringAdder","LineStringAdder","dangles","cutEdges","invalidRingLines","holeList","polyList","isCheckingRingsValid","extractOnlyPolygonal","RelateComputer","im","isolatedEdges","RectangleContains","rectEnv","rectangle","RectangleLineIntersector","diagUp0","diagUp1","diagDown0","diagDown1","ShortCircuitedGeometryVisitor","RectangleIntersects","EnvelopeIntersectsVisitor","_intersects","GeometryContainsPointVisitor","rectSeq","_containsPoint","getExteriorRing","getCoordinateSequence","RectangleIntersectsSegmentVisitor","rectIntersector","hasIntersection","RelateOp","_relate","GeometryCombiner","skipEmpty","inputGeoms","geoms","extractFactory","PointGeometryUnion","pointGeom","otherGeom","GeometryExtracter","sortIndex","CascadedPolygonUnion","inputPolys","polys","UnaryUnionOp","extract","PrecisionReducerCoordinateOperation","targetPM","removeCollapsed","GeometryPrecisionReducer","changePrecisionModel","isPointwise","DouglasPeuckerLineSimplifier","usePt","DouglasPeuckerSimplifier","isEnsureValidTopology","DPTransformer","TaggedLineSegment","TaggedLineString","parentLine","segs","resultSegs","minimumSize","LineSegmentIndex","LineSegmentVisitor","querySeg","TaggedLineStringSimplifier","inputIndex","outputIndex","linePts","TaggedLinesSimplifier","TopologyPreservingSimplifier","lineSimplifier","linestringMap","LineStringTransformer","LineStringMapBuilderFilter","tps","SplitSegment","segLen","splitPt","minimumLen","getLength","ConstraintSplitPointFinder","NonEncroachingSplitPointFinder","TrianglePredicate","Vertex","_p","_z","ConstraintVertex","_isOnConstraint","constraint","QuadEdge","_rot","vertex","IncrementalDelaunayTriangulator","subdiv","isUsingTolerance","getTolerance","QuadEdgeLocator","LastFoundQuadEdgeLocator","lastEdge","LocateFailureException","msgWithSpatial","TriangleVisitor","QuadEdgeSubdivision","visitedKey","quadEdges","startingEdge","tolerance","edgeCoincidenceTolerance","frameVertex","frameEnv","locator","triEdges","EDGE_COINCIDENCE_TOL_FACTOR","createFrame","initSubdiv","TriangleCircumcentreVisitor","TriangleEdgesListVisitor","triList","TriangleVertexListVisitor","TriangleCoordinatesVisitor","coordList","triCoords","Segment","z1","z2","KdNodeVisitor","KdNode","KdTree","numberOfNodes","BestMatchVisitor","matchNode","matchDist","ConformingDelaunayTriangulator","initialVertices","segVertices","segments","incDel","convexHull","splitFinder","kdt","vertexFactory","computeAreaEnv","DelaunayTriangulationBuilder","siteCoords","ConformingDelaunayTriangulationBuilder","constraintLines","constraintVertexMap","VoronoiDiagramBuilder","clipEnv","diagramEnv","UnionOp","defineProperty","arrayLike","relativeStart","parseInt","relativeEnd","val","floor","parseFloat","isNaN","trunc","ceil","extend","target","source","hasOwnProperty","equalsWithTolerance","doubleToLongBits","longBitsToDouble","isInfinite","inherits","shouldNeverReachHere","assertion","equals","expectedValue","actualValue","ordinateIndex","X","Y","Z","o","CloneNotSupportedException","dz","sqrt","hashCode","Cloneable","f","o1","o2","c1","c2","compX","compare","compY","compZ","serialVersionUID","NaN","hasNext","remove","toArray","get","interfaces_","clear","element","oldElement","Iterator_","len","found","arrayList","arrayList_","position_","coll","isChanged","clone","coordArrayType","last","direction","prev","inc","getWidth","getHeight","otherEnvelope","isNull","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","h","transX","transY","expandBy","deltaX","deltaY","setToNull","q","minq","maxq","minp","maxp","toLocationSymbol","locationValue","log10","ln","log","LOG_10","v1","v2","v3","v4","clamp","wrap","average","append","setCharAt","substr","toString","intValue","isWhitespace","toUpperCase","insertDecimalPoint","magnitude","mag","TEN","divide","gt","lt","ONE","multiply","decimalPointPos","buf","numDigits","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","negate","isZero","le","selfDivide","yhi","ylo","hc","tc","hy","ty","C","U","u","SPLIT","zhi","zlo","createNaN","exp","s","selfMultiply","sqr","reciprocal","fhi","flo","plus5","ge","isNegative","ax","axdd","diffSq","d2","H","S","T","t","hx","tx","ex","toStandardNotation","toSciNotation","specialStr","getSpecialNumberString","sigDigits","extractSignificantDigits","num","charAt","stringOfChar","numZeroes","zeroes","SCI_NOT_ZERO","digits","expStr","SCI_NOT_EXPONENT_CHAR","IllegalStateException","trailingDigits","substring","digitsWithDecimal","isPositive","strlen","signCh","numBeforeDec","ch","isDigit","NumberFormatException","val2","numDecPlaces","xAbs","xLog10","xMag","xApprox","TWO_PI","PI_2","E","EPS","orientationIndex","orientationIndexFilter","dx1","dy1","dx2","dy2","selfSubtract","signum","signOfDet2x2","det","intersection","denom1","denom2","denom","numx1","numx2","numx","fracP","doubleValue","numy1","numy2","numy","fracQ","pc","detsum","detleft","detright","errbound","DP_SAFE_EPSILON","M","arraycopy","src","srcPos","dest","destPos","getProperty","getX","getY","xInt","yInt","getSortIndex","SORTINDEX_GEOMETRYCOLLECTION","equalsTopo","equalsExact","geometryChangedFilter","norm","compareToSameClass","comp","toGeometry","normalize","computeEnvelopeInternal","aElement","bElement","comparison","SORTINDEX_MULTIPOINT","SORTINDEX_MULTILINESTRING","SORTINDEX_MULTIPOLYGON","SORTINDEX_POINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_POLYGON","geometryChangedAction","boundaryCount","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","isRing","ptNotInList","testPts","testPt","scroll","firstCoordinate","newCoordinates","coord1","coord2","coordinateComparator","toCoordinateArray","hasRepeatedPoints","removeRepeatedPoints","reverse","mid","tmp","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","atLeastNCoordinatesOrNothing","coordinate","increasingDirection","minCoordinate","npts","extractPts","iPts","forwardComp","isEqualRev","dir1","dir2","i1","i2","comparePt","values","entrySet","contains","javascript","util","hashSet","hashSet_","RED","cmp","oldValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","l","treeSet_","sort","comparator","slice","concat","asList","toDimensionSymbol","dimensionValue","SYM_FALSE","TRUE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","A","SYM_A","toDimensionValue","dimensionSymbol","seq","childCoordinates","area","getArea","isEquivalentClass","otherCollection","getBoundaryDimension","sum","numPoints","revGeoms","createGeometryCollection","theseElements","otherElements","gc","thisGeom","getGeometryN","holeComp","filter","isDone","isGeometryChanged","geometryChanged","checkNotGeometryCollection","nLines","revLines","createMultiLineString","getBoundary","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createPoint","createMultiPointFromCoords","boundaryLineString","boundaryMultiLineString","closedEndpointOnBoundary","getStartPoint","createMultiPoint","getEndPoint","addEndpoint","getCoordinateN","entry","getValue","valence","getKey","bop","chars","String","getStackTrace","os","ps","printStackTrace","stackTrace","stringReader","lineNumberReader","readLine","NEWLINE","split","separator","separatorlen","tokenList","tmpString","pos","token","res","SIMPLE_ORDINATE_FORMAT","format","spaces","copyCoord","minDim","dim","setOrdinate","getOrdinate","isEqual","cs1","cs2","cs1Size","cs2Size","fact","newseq","swap","cs","ensureValidRing","createClosedRing","expandEnvelope","isSimple","otherLineString","equal","getPointN","computeLength","revLine","createLineString","point","shellCoordinates","signedArea","getNumInteriorRing","prevX","prevY","xChanged","yChanged","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","isCCW","otherShell","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","rev","MINIMUM_VALID_SIZE","createMultiPolygon","allRings","polygon","allRingsArray","operation","editInternal","setUserData","getUserData","editGeometryCollection","editPolygon","edit","getClass","getName","collection","collectionForType","newPolygon","createPolygon","hole","coords","editCoordinates","cloneCoordinates","strBuf","instance","instanceObject","MapPolyfill","MapInterface","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","FLOATING_SINGLE","description","floatSingleVal","round","makePrecise","maxSigDigits","mostPrecise","pm1","pm2","maximumPreciseValue","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","isGeometryCollectionOrDerived","toGeometryArray","geom0","isCollection","toPolygonArray","toLineStringArray","toPointArray","editor","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","regExes","wkt","type","replace","matches","typeStr","exec","search","emptyTypeStr","toLowerCase","extractGeometry","getGeometryType","wktType","multipoint","join","linestring","linearring","multilinestring","multipolygon","trim","components","trimParens","parenComma","doubleParenComma","wktArray","read","write","intIndex","computeIntLineIndex","catBuf","isEndPoint","isCollinear","p3","p4","computeIntersect","dist0","getEdgeDistance","dist1","isInteriorIntersection","inputLineIndex","NO_INTERSECTION","computeEdgeDistance","COLLINEAR_INTERSECTION","toLineString","getTopologySummary","ptIndex","pdx","pdy","nonRobustComputeEdgeDistance","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","POINT_INTERSECTION","env0","computeIntersection","n3","n4","normPt","smallestInAbsValue","nearestEndpoint","intersectionWithNormalization","isInSegmentEnvelopes","x3","x4","xabs","intPtDD","out","println","normalizeToEnvCentre","safeHCoordinateIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","collinear","computeCollinearIntersection","nearestPt","minDist","distancePointLine","sign","xIntSign","getLocation","locatePointInRing","countSegment","isOnSegment","distanceLineLine","B","D","noIntersection","r_num","s_num","isPointInRing","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","isOnLine","lineIntersector","CLOCKWISE","STRAIGHT","orient0","orient1","getIntersection","projectionFactor","pf0","pf1","newp0","project","newp1","midPoint","closestPt","close00","closestPoint","close01","close10","close11","factor","comp0","temp","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","offsetx","offsety","setCoordinates","inputPt","segFrac","bits0","java","lang","hash0","bits1","hash1","isDisjoint","hasPointInCommon","dimensionSymbols","row","col","column","minimumDimensionSymbols","setAtLeast","minimumDimensionValue","dimensionOfGeometryA","dimensionOfGeometryB","isTouches","ai","bi","requiredDimensionSymbols","actualDimensionValue","requiredDimensionSymbol","actualDimensionSymbols","m","basePt","lineLen","segmentLen","midx","midy","addPoint","isPositiveArea","addTriangle","addLineSegments","cent","setBasePoint","centroid3","area2","addShell","addHole","pop","peek","empty","octPts","computeOctPts","closeRing","cleanRing","linearRing","original","cleanedRing","previousDistinctCoordinate","currentCoordinate","nextCoordinate","isBetween","cleanedRingCoordinates","c3","polyPts","computeOctRing","reducedSet","reducedPts","padArray3","reduce","sortedPts","preSort","cHS","grahamScan","cH","lineOrPolygon","pad","polarCompare","dxp","dyp","dxq","dyq","orient","oq","transformCoordinates","isAllValidLinearRings","transformLinearRing","buildGeometry","transGeomList","transformGeom","transformLineString","transformPoint","transformPolygon","transform","transformMultiPoint","transformMultiLineString","transformMultiPolygon","transformGeometryCollection","seqSize","srcCoords","srcPt","snapVert","findSnapForVertex","snapVertices","snapSegments","newPts","distinctPtCount","snapPt","findSegmentIndexToSnap","snapIndex","snapGeom","extractTargetCoordinates","snapTrans","cleanResult","snappedGeom","buffer","minSegLen","computeMinimumSegmentLength","snapTol","ptSet","snap","snapper0","snapTo","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","getType","fixedSnapTol","minDimension","SNAP_PRECISION_FACTOR","snapToSelf","snapper","setAllowSnappingToSourceVertices","snapLine","numBits","signExpBits","numSignExp","numCommonMostSigMantissaBits","zeroLowerBits","bits","numStr","Long","toBinaryString","padStr","bitStr","getBit","mask","nBits","invMask","zeroed","num1","num2","invCoord","getCommonCoordinate","getCommon","xp","yp","isAtomic","UnsupportedOperationException","shellLoc","locateInPolygonRing","holeLoc","ptCoord","locate","loc","updateLocationInfo","locateInternal","ml","mpoly","geomi","computeLocation","octant","adx","ady","minItem","reorder","child","childBoundable","computeBounds","Collections","alen","priQ","isComp1","isComposite","isComp2","expand","nd","bndComposite","bndOther","children","getChildBoundables","bp","getDistance","isLeaves","getBounds","build","childToRemove","getItem","valuesTree","itemsTree","valuesTreeForNode","valuesTreeForChild","boundables","boundablesAtLevel","top","getLevel","boundable","searchBounds","getIntersectsOp","query","visitor","visitItem","createNode","createHigherLevels","removeItem","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","lastNode","getNodeCapacity","addChildBoundable","compareDoubles","item1","item2","verticalSlices","createParentBoundablesFromVerticalSlice","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","yComparator","minLeafCount","xComparator","createParentBoundablesFromVerticalSlices","itemDist","getRoot","nearestNeighbour","initBndPair","maxDistance","distanceLowerBound","minPair","bndPair","poll","currentDistance","expandToQueue","getBoundable","bnd","centreX","aBounds","bBounds","relativeSign","xSign","ySign","compareValue","compareSign0","compareSign1","print","maxSegmentIndex","eiPrev","ei","addEdgeCoordinates","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","isInterior","addCollapsedNodes","newEdge","createSplitEdge","collapsedVertexIndex","numVerticesBetween","isCollapsed","findCollapseIndex","maxSegIndex","ipt","getData","eiNew","getSegmentOctant","splitEdges","edgePts","split0","pt0","splitn","splitnPts","ptn","safeOctant","addIntersectionNode","addIntersection","normalizedSegmentIndex","nextSegIndex","nextPt","getIntersectionNum","getNodedSubstrings","resultEdgelist","ss","getNodeList","addSplitEdges","mc1","start1","mc2","start2","getLineSegment","overlap","start0","end0","mcs","select","computeSelect","mc","mco","computeOverlapsInternal","end1","p00","p01","p10","p11","mid0","mid1","isNorthern","quad","NE","NW","isOpposite","quad1","quad2","diff","commonHalfPlane","isInHalfPlane","halfPlane","SE","SW","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","mcList","segStr","segChains","setId","getEnvelope","inputSegStrings","intersectChains","overlapAction","queryChain","overlapChains","testChain","getId","computeOverlaps","ss1","getContext","ss2","processIntersections","e0","segIndex0","e1","segIndex1","isEndSegPresent","isEndSegment","createAllIntersectionsFinder","setFindAllIntersections","createAnyIntersectionFinder","createIntersectionCounter","setKeepIntersections","checkInteriorIntersections","getIntersections","execute","computeNodes","getErrorMessage","getInteriorIntersection","intSegs","getIntersectionSegments","computeIntersections","isValid","checkValid","validator","mapped","mapper","opposite","position","locValue","newLoc","posIndex","locIndex","setAllLocations","setAllLocationsIfNull","isLine","merge","flip","isArea","isAnyNull","isEqualOnSide","allPositionsEqual","toLineLabel","lineLabel","getGeometryCount","de","isFirstEdge","getEdgeRing","mergeLabel","addPoints","setEdgeRing","getNext","getNode","getEdges","getOutgoingDegree","setInResult","getLinearRing","containsPoint","computeMaxNodeDegree","deLabel","holeLR","er","setMinEdgeRing","getNextMin","minEdgeRings","getMinEdgeRing","minEr","linkMinimalDirectedEdges","isVisited","isInResult","isCovered","computeIM","label2","eltIndex","nLoc","setLabel","onLocation","computeMergedLocation","thisLoc","setNode","addNode","className","lastDotPos","lastIndexOf","compareDirection","depthVal","isInteriorAreaEdge","getDepthDelta","isExteriorIfArea0","isExteriorIfArea1","printReverse","setVisited","directionFactor","oppositePos","delta","oppositeDepth","setDepth","depthFactor","currLocation","nextLocation","find","nodeit","linkResultDirectedEdges","linkAllDirectedEdges","ep0","ep1","eCoord","matchInSameDirection","getEdgeEnds","ee","edgesToAdd","de2","setSym","edgeRings","freeHoleList","isHole","toPolygon","getShell","findEdgeRingContaining","setShell","maxEdgeRings","getMaxNodeDegree","linkDirectedEdgesForMinimalEdgeRings","buildMinimalRings","findShell","placePolygonHoles","computePolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","getNodes","buildMaximalEdgeRings","buildMinimalEdgeRings","sortShellsAndHoles","placeFreeHoles","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","targetIndex","getArgGeometry","findCoveredLineEdges","collectLines","buildLines","isLineEdge","isResultOfOp","setVisitedEdge","isCoveredSet","isCoveredByA","setCovered","edgesList","isIsolated","labelIsolatedLine","getSym","INTERSECTION","isCoveredByLA","isIncidentEdgeInResult","getDegree","filterCoveredNodeToPoint","extractNonCoveredResultNodes","containsPointInPolygon","iNextCW","startLoc","currLoc","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","startLabel","eSearch","getGeometry","computeLabel","propagateSideLabels","hasDimensionalCollapseEdge","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","setNext","insertEdgeEnd","deLast","quad0","getQuadrant","getDy","nodeLabel","prevOut","firstIn","edgeIndex","findIndex","startDepth","getDepth","targetLastDepth","nextDepth","computeDepths","lastDepth","endIndex","currDepth","nextDe","setEdgeDepths","setNextMin","computeLabelling","eLabel","eLoc","computeIntersectsForChain","pe","ev","isAdjacentSegments","isIntersection","isBoundaryPointInternal","bdyNodes0","bdyNodes1","setIsolated","isTrivialIntersection","isProper","addIntersections","isBoundaryPoint","isDelete","getInsertEvent","setDeleteEventIndex","prepareEvents","isInsert","processOverlaps","getDeleteEventIndex","edges0","edges1","addEdges","testAllSegments","edgeSet","getMonotoneChainEdge","getStartIndexes","ev0","mc0","getObject","ev1","isSameLabel","addEdge","queryMin","queryMax","mid2","buildLevel","buildTree","buildRoot","getLines","forceToLineString","rcc","addLine","getItems","chainIndex0","chainIndex1","depthValue","minDepth","newValue","depthAtLocation","newe","isEqualForward","isEqualReverse","iRev","updateIM","setAtLeastIfValid","determineBoundary","computeRingSelfNodes","computeSelfNodes","isDoneIfProperInt","setIsDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","edgelist","setBoundaryNodes","getBoundaryNodes","insertPoint","addPolygonRing","insertEdge","insertBoundaryPoint","isBoundaryNode","lr","cwLeft","cwRight","eiIt","addSelfIntersectionNode","addPolygon","addLineString","addCollection","findEdge","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","edgeColl","matchEdge","existingEdge","findEqualEdge","existingLabel","labelToMerge","isPointwiseEqual","opcode","createEmptyResult","mergeSymLabels","newEdges","getCollapsedEdge","overlayOpCode","computeOverlay","insertUniqueEdge","copyPoints","computeEdgeIntersections","baseSplitEdges","computeSplitEdges","insertUniqueEdges","computeLabelsFromDepths","replaceCollapsedEdges","labelIncompleteNodes","findResultAreaEdges","cancelDuplicateResultEdges","polyBuilder","getPolygons","lineBuilder","pointBuilder","computeGeometry","getNodeIterator","graphNode","newNode","getDelta","toLine","updateNodeLabelling","nodeCount","ni","labelIncompleteNode","updateLabelling","overlayOp","geom1","gov","geomOv","getResultGeometry","isGeometryCollection","MapOp","symDifference","SYMDIFFERENCE","resultDimension","dim0","dim1","UNION","DIFFERENCE","difference","loc0","loc1","remGeom","removeCommonBits","addCommonBits","prepGeom","prepareResult","union","isSuccess","savedException","width","bisector","horizontalBisector","widestIntersection","widestGeometry","bisectY","getBisectorY","process","updateInterval","hasChildren","hasItems","addAllItems","subSize","resultItems","isSearchMatch","addAllItemsFromOverlapping","itemInterval","isPrunable","maxSubDepth","sqd","nodeSize","getSubnodeIndex","subnodeIndex","overlaps","exponent","powerOf2","computeLevel","computeInterval","searchInterval","childNode","createSubnode","getSubnode","subInt","getInterval","createExpanded","addInterval","expandInt","largerNode","isZeroWidth","maxAbs","scaledInterval","MIN_BINARY_EXPONENT","insertContained","isZeroArea","collectStats","insertInterval","ensureExtent","foundItems","del","mcEnv","rayEnv","mcSelecter","testMonotoneChain","testLineSegment","toDegrees","radians","PI_TIMES_2","isAcute","dx0","dy0","dotprod","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","a1","a2","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","PI_OVER_2","PI_OVER_4","interpolateZ","longestSideLength","circumcentre","area3D","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","ccx","ccy","perpendicularBisector","l1","l2","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","compute","hullPts","lowestPoint","Q","pointWitMinAngleWithX","R","pointWithMinAngleWithSegment","computeCirclePoints","computeCentre","centrePoint","minSin","minAngPt","minAng","ang","computeMinimumDiameter","convexGeom","computeConvexRingMinDiameter","currMaxIndex","findMaxPerpDistance","computeWidthConvex","getConvexHull","maxPerpDistance","distancePerpendicular","nextPerpDistance","maxIndex","nextIndex","minPara","maxPara","minPerp","maxPerp","paraC","computeC","perpC","maxPerpLine","computeSegmentForLine","minPerpLine","maxParaLine","minParaLine","lineIntersection","getMinimumDiameter","getDiameter","getMinimumRectangle","densifyPoints","precModel","densifiedSegCount","densifiedSegLen","segFract","pointAlong","densify","densifier","setDistanceTolerance","roughGeom","createValidArea","roughAreaGeom","oNext","insertAfter","ecmp","ePrev","save","quadrant2","compareAngularDirection","isMarked","setMarkBoth","setMark","markBoth","mark","eAdj","eAdjDest","createEdge","isValidEdge","eSame","isStart","computeResult","eNode","prevNode","stackEdges","eStartRing","eNext","eStart","updateRingStartEdge","buildRing","getVertexEdges","buildLine","lineString","doneStart","setStart","dissolve","getResult","visitItems","visit","computeQuadLevel","quadSize","dMax","sqEnv","insertNode","addEnv","expandEnv","isZeroX","isZeroY","insertEnv","posEnv","delX","delY","geometryTypes","json","JSON","feature","bbox","featureCollection","features","sub","geoJson","shellGeoJson","holeGeoJson","reducePrecision","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","getLinearRings","multiPoint","getPoints","multiLineString","getLineStrings","multiPolygon","getGeometries","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection","geometryCollection","rescale","nodedSegmentStrings","roundPts","roundPtsNoDup","splitSS","intSegStrings","mp","isSimpleLinearGeometry","endPoints","getEdgeIterator","getMaximumSegmentIndex","eiInfo","hasProperIntersection","getProperIntersectionPoint","hasNonEndpointIntersection","hasClosedEndpointIntersection","getEdgeIntersectionList","isSimpleMultiPoint","isSimplePolygonal","isSimpleGeometryCollection","computeSimple","quadSegs","JOIN_BEVEL","JOIN_MITRE","isSingleSided","bufferDistanceError","alpha","cos","CAP_FLAT","CAP_SQUARE","getRightmostSideOfSegment","checkForRightmostCoordinate","pPrev","pNext","usePrev","star","getRightmostEdge","findRightmostEdgeAtNode","findRightmostEdgeAtVertex","rightmostSide","getRightmostSide","addLast","removeFirst","shift","startEdge","copySymDepths","outsideDepth","clearVisitedEdges","addReachable","nodesVisited","nodeQueue","startNode","computeNodeDepth","adjNode","edgeEnv","nodeStack","symNode","i0","isConcave","isShallow","isShallowSampled","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isDeletable","isAngleToSimplify","NUM_PTS_TO_CHECK","deleteShallowConcavities","collapseLine","simplify","simp","INIT","KEEP","COORDINATE_ARRAY_TYPE","bufPt","isRedundant","addPt","lastPt","ptDist","startPt","last2Pt","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","offsetL","offsetR","getEndCapStyle","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","isMitreWithinLimit","mitreRatio","getMitreLimit","addLimitedMitreJoin","startAngle","endAngle","OFFSET_SEGMENT_SEPARATION_FACTOR","addMitreJoin","addBevelJoin","addFilletCorner","addPts","ang0","angDiff","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelDelta","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","pointAlongOffset","bevelEndRight","offset","sideSign","totalAngle","nSegs","initAngle","currAngleInc","currAngle","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","setMinimumVertexDistance","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","numInt","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","distTol","simplifyTolerance","addSegments","simp2","initSideSegments","addFirstSegment","addNextSegment","simp1","addLastSegment","addLineEndCap","createCircle","createSquare","computeSingleSidedBufferCurve","computeLineBufferCurve","lineCoord","bufDistance","getSimplifyFactor","getLineCurve","copyCoordinates","computeRingBufferCurve","stabbingRayLeftPt","stabbedSegments","bsg","findStabbedSegments","getDirectedEdges","isHorizontal","ds","minX","maxX","orientIndex","compare0","curve","addCurve","offsetSide","shellCoord","isErodedCompletely","holeCoord","triangleCoord","bufferDistance","tri","distToCentre","getBufferParameters","cwLeftLoc","cwRightLoc","getRingCurve","ringCoord","isTriangleErodedCompletely","envMinDimension","mergeDelta","existingDelta","newDelta","setDepthDelta","subgraphList","processedGraphs","subgraph","getRightmostCoordinate","locater","computeDepth","findResultEdges","reverseOrder","emptyGeom","curveSetBuilder","bufferSegStrList","getCurves","createEmptyResultGeometry","computeNodedEdges","createSubgraphs","buildSubgraphs","getNoder","oldLabel","lLoc","rLoc","convertSegStrings","checkEndPtVertexIntersections","ss0","pts0","hasInteriorIntersection","checkCollapses","checkCollapse","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","intersectsScaled","copyScaled","pScaled","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsLeft","intersectsBottom","pixelEnv","getSafeEnvelope","hotPixelSnapAction","isNodeAdded","addSnappedNode","inputSegmentStrings","resultSegStrings","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","getInteriorIntersections","edge0","getIndex","snapRound","fixedPM","bufBuilder","setWorkingPrecisionModel","setNoder","precDigits","MAX_PRECISION_DIGITS","bufferReducedPrecision","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","bufferFixedPrecision","bufferOriginalPrecision","argPM","bufferOp","gBuf","geomBuf","bufOp","params","maxPrecisionDigits","envMax","expandByDistance","bufEnvMax","bufEnvPrecisionDigits","minUnitLog10","CAP_BUTT","singletonList","getLocations","locPtPoly","computeContainmentDistance","polyGeomIndex","locationsIndex","insideLocs","locs","ptLoc","locGeom","computeMinDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistanceLinesPoints","computeMinDistancePoints","nearestPts","computeFacetDistance","coord0","segClosestPoint","line0","line1","closestPoints","points0","points1","pt1","distOp","isWithinDistance","nearestPoints","forwardDirectedEdges","reverseDirectedEdges","coordinateList","directedEdge","getEdgeDirection","getLine","getComponentWithVisitedState","visitedState","visited","setMarked","marked","toEdges","getToNode","getOutEdges","setEdge","getFromNode","addOutEdge","fromNode","sortEdges","modi","getEdgesBetween","node0","commonEdges","retainAll","nodesFound","nodeIterator","getDirEdge","startCoordinate","endCoordinate","endNode","directedEdge0","directedEdge1","findNode","buildEdgeStringsStartingAt","buildEdgeStringsForNonDegree2Nodes","buildEdgeStringStartingWith","edgeIterator","buildEdgeStringsForObviousStartNodes","buildEdgeStringsForIsolatedLoops","edgeString","current","buildEdgeStringsForUnprocessedNodes","findDifferentPoint","findEdgeInSameDirection","findEdgeEnd","intDe","visitLinkedDirectedEdges","visitInteriorRing","setInteriorEdgesInResult","buildEdgeRings","visitShellInteriors","hasUnvisitedShellEdge","eiCurr","eiNext","computeEdgeEnds","createEdgeEndForPrev","createEdgeEndForNext","foundInterior","computeLabelSide","computeLabelOn","computeLabelSides","esb","eb","computeIntersectionNodes","copyNodesAndLabels","eeBuilder","eeList","insertEdgeEnds","edgeIt","setLabelBoundary","isAreaLabelsConsistent","eeb","intersector","isNodeEdgeAreaLabelsConsistent","innerRing","innerRingPts","results","searchRing","searchRingPts","innerRingPt","findPtNotNode","isInside","errMsg","locStr","getMessage","ERROR","REPEATED_POINT","HOLE_OUTSIDE_SHELL","NESTED_HOLES","DISCONNECTED_INTERIOR","SELF_INTERSECTION","RING_SELF_INTERSECTION","NESTED_SHELLS","DUPLICATE_RINGS","TOO_FEW_POINTS","INVALID_COORDINATE","RING_NOT_CLOSED","checkInvalidCoordinates","nestedTester","innerHole","isNonNested","getNestedPoint","cat","isValidArea","isNodeConsistentArea","hasDuplicateRings","getInvalidPoint","shellPts","holePts","shellPt","insideHole","holePt","insideShell","checkNoSelfIntersectingRing","cit","isInteriorsConnected","nodeSet","pir","outside","hasTooFewPoints","checkClosedRing","checkTooFewPoints","checkNoSelfIntersectingRings","checkClosedRings","checkConsistentArea","checkHolesInShell","checkHolesNotNested","checkConnectedInteriors","checkShellsNotNested","polyShell","insidePolyShell","badNestedPt","checkShellInsideHole","checkShellNotNested","testCoords","searchEdge","isValidOp","getRing","startDE","setRing","isInRing","hasShell","holeER","isIncluded","adjRing","isOuterHole","getOuterHole","adjShell","isIncludedSet","setIncluded","isProcessed","findDirEdgesInRing","minShellEnv","tryShellRing","tryShellEnv","obj0","obj1","r0","r1","computeDepthParity","iNode","computeNextCWEdges","endPt","nStart","nEnd","findLabeledEdgeRings","cutLines","maximalRings","convertMaximalToMinimalEdgeRings","edgeRingList","findEdgeRing","ringEdges","intNodes","findIntersectionNodes","computeNextCCWEdges","nodesToRemove","findNodesOfDegree","dangleLines","deleteAllEdges","nodeOutEdges","toNode","getDegreeNonDeleted","edgeRingStarts","currLabel","prevDE","outDE","firstOutDE","prevInDE","inDE","polygonize","validEdgeRingList","invalidRingList","getLineString","deleteDangles","deleteCutEdges","getEdgeRings","findValidRings","findShellsAndHoles","assignHolesToShells","includeAll","findDisjointShells","extractPolygons","computeHole","findOuterShells","outerHoleER","setProcessed","getPolygon","assignHoleToShell","isMoreToScan","updateIncluded","dimA","dimB","hasProperInteriorIntersection","thisIndex","labelIsolatedEdge","computeDisjointIM","labelIsolatedNodes","computeProperIntersectionIM","ee0","ee1","labelNodeEdges","labelIsolatedEdges","labelIsolatedNode","updateIMFromEdges","ga","gb","isPointContainedInBoundary","isLineStringContainedInBoundary","isContainedInBoundary","isLineSegmentContainedInBoundary","rc","segEnv","isSegUpwards","applyTo","ecpVisitor","riVisitor","rp","elementEnv","rectPt","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","isRectangle","relate","isCovers","isIntersects","touches","within","coveredBy","relOp","getIntersectionMatrix","intersectionPattern","relateWithCheck","isOverlaps","disjoint","crosses","isCrosses","isContains","elems","elemGeom","extractElements","combine","combiner","createList","obj2","exteriorCoords","ptComp","unioner","geomTree","unionTree","disjointGeoms","intersectingGeoms","elem","g0Env","g1Env","combo","unionActual","commonEnv","unionUsingEnvelopeIntersection","STRTREE_NODE_CAPACITY","itemTree","unionAll","binaryUnion","unionSafe","unionOptimized","restrictToPolygons","reduceToGeometries","common","disjointPolys","g0Int","extractByEnvelope","g1Int","overallUnion","gColl","unionPoints","ptGeom","unionNoOpt","unionLines","lineGeom","unionPolygons","unionLA","unionWithNull","reducedCoords","noRepeatedCoordList","noRepeatedCoords","minLength","collapsedCoords","geomToBuffer","changePM","bufGeom","finalGeom","geomEdit","newFactory","createFactory","finalRemoveCollapsed","reduceGeom","newPM","geomEditor","createEditor","inputFactory","reducePW","reducePointwise","fixPolygonalTopology","reducer","setPointwise","simplifySection","tss","rawGeom","rawAreaGeom","removeDegenerateRings","simpResult","resultSegsSize","getSegments","itemsFound","newSeg","sectionIndex","candidateSeg","hasBadOutputIntersection","hasBadInputIntersection","getSegment","addToResult","isValidToSimplify","getResultSize","getMinimumSize","worstCaseSize","furthestPtIndex","findFurthestPoint","hasBadIntersection","flatten","querySegs","maxDist","midPt","getParentCoordinates","isInLineSection","getParent","taggedLines","tlss","taggedLine","createCoordinateSequence","getResultCoordinates","minSize","minFrac","pointAlongReverse","actualLen","getConstrainedLength","minLen","encroachPt","lineSeg","midPtLen","splitSeg","projPt","projectedSplitPoint","nonEncroachDiam","maxSplitLen","setMinimumLength","splitAt","getSplitPoint","triArea","isInCircleDDNormalized","bdx","bdy","cdx","cdy","abdet","bcdet","cadet","alift","blift","clift","isInCircle","checkRobustInCircle","nonRobustInCircle","isInCircleNonRobust","isInCircleDD","isInCircleDDSlow","isInCircleCC","circumCentre","toPoint","isInCircleDDFast","aTerm","triAreaDDFast","bTerm","cTerm","pTerm","cc","ccRadius","pRadiusDiff","isInCircleNormalized","triAreaDDSlow","isInCircleRobust","t1","t2","cab","cbc","hcc","nre","err","getZ","xm","ym","zm","sa","crossProduct","BEHIND","magn","BEYOND","ORIGIN","DESTINATION","BETWEEN","circleCenter","edgeLength","el","ptLen","pz","isOnConstraint","qe","equalsOriented","invRot","rot","setOrig","makeEdge","q0","q3","base","setDest","oPrev","lNext","beta","t3","t4","connect","isVertexOfEdge","isOnEdge","delete","lPrev","vertices","insertSite","isLive","locateFromEdge","includeFrame","visitTriangles","getTriangleVertices","cellPts","startQE","cellPoly","ea","ec","leftTri","getTriangleEdges","rightTri","vLeftTriOther","isFrameVertex","vRightTriOther","triVisitor","edgeStack","visitedEdges","fetchTriangleToVisit","getTriangles","vd","curr","edgeCount","isFrame","isFrameEdge","getPrimaryEdges","visitedVertices","qd","priQE","getPrimary","eSym","eRot","eRotSym","iter","maxIter","toLineSegment","dPrev","cells","getVertexUniqueEdges","getVoronoiCellPolygon","vorCells","getVoronoiCellPolygons","triPtsList","getTriangleCoordinates","tris","triPt","locEdge","triEdge","ccVertex","_left","_right","findBestMatchNode","increment","insertExact","queryEnv","queryNode","currentNode","odd","discriminant","searchLeft","searchRight","getLeft","getRight","queryEnvelope","leafNode","isOddLevel","isLessThan","isInTolerance","setLeft","setRight","toCoordinates","kdnodes","includeRepeated","getCount","update","addConstraintVertices","splits","enforceGabriel","MAX_SPLIT_ITER","getPointArray","hull","computeConvexHull","insertSites","getStart","getEnd","segRadius","closestNonGabriel","testRadius","testDist","segsToInsert","newSegments","segsToRemove","findNonGabrielPoint","findSplitPoint","splitVertex","createVertex","getStartX","getStartY","getStartZ","getEndX","getEndY","getEndZ","removeAll","setOnConstraint","vertexEnv","computeVertexEnvelope","allPointsEnv","computeBoundingBox","setLocator","kdnode","isRepeated","snappedV","siteEnv","toVertices","triangulator","extractUniqueCoordinates","unique","coordsCopy","verts","containsKey","createVertices","createConstraintSegments","sites","createSiteVertices","cdt","setConstraints","formInitialDelaunay","enforceConstraints","getSubdivision","constraintSegs","getVoronoiDiagram","clipGeometryCollection","clipPoly","clipped","isEquals","args","_len","_key","centPt","interiorPt","getInteriorPoint","writer","toText","envDist","version"],"mappings":"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","file":"dist/jsts.min.js","sourcesContent":["import extend from '../../../../extend';\r\nexport default function NumberUtil() {}\r\nextend(NumberUtil.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NumberUtil;\r\n\t}\r\n});\r\nNumberUtil.equalsWithTolerance = function (x1, x2, tolerance) {\r\n\treturn Math.abs(x1 - x2) <= tolerance;\r\n};\r\n","export default function IllegalArgumentException () {}\r\n","export default function Double () {}\r\nDouble.isNaN = n => Number.isNaN(n)\r\nDouble.doubleToLongBits = n => n\r\nDouble.longBitsToDouble = n => n\r\nDouble.isInfinite = n => !Number.isFinite(n)\r\nDouble.MAX_VALUE = Number.MAX_VALUE\r\n","export default function Comparable () {}\r\n","export default function Clonable () {}\r\n","export default function Comparator () {}\r\n","export default function Serializable () {}\r\n","export default function RuntimeException (message) {\r\n  this.name = 'RuntimeException'\r\n  this.message = message\r\n  this.stack = (new Error()).stack\r\n  Error.call(this, message)\r\n}\r\n\r\nRuntimeException.prototype = Object.create(Error.prototype)\r\nRuntimeException.prototype.constructor = Error\r\n","import extend from '../../../../extend';\r\nimport RuntimeException from '../../../../java/lang/RuntimeException';\r\nimport inherits from '../../../../inherits';\r\nexport default function AssertionFailedException() {\r\n\tif (arguments.length === 0) {\r\n\t\tRuntimeException.call(this);\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet message = arguments[0];\r\n\t\tRuntimeException.call(this, message);\r\n\t}\r\n}\r\ninherits(AssertionFailedException, RuntimeException);\r\nextend(AssertionFailedException.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn AssertionFailedException;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport AssertionFailedException from './AssertionFailedException';\r\nexport default function Assert() {}\r\nextend(Assert.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Assert;\r\n\t}\r\n});\r\nAssert.shouldNeverReachHere = function () {\r\n\tif (arguments.length === 0) {\r\n\t\tAssert.shouldNeverReachHere(null);\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet message = arguments[0];\r\n\t\tthrow new AssertionFailedException(\"Should never reach here\" + (message !== null ? \": \" + message : \"\"));\r\n\t}\r\n};\r\nAssert.isTrue = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet assertion = arguments[0];\r\n\t\tAssert.isTrue(assertion, null);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet assertion = arguments[0], message = arguments[1];\r\n\t\tif (!assertion) {\r\n\t\t\tif (message === null) {\r\n\t\t\t\tthrow new AssertionFailedException();\r\n\t\t\t} else {\r\n\t\t\t\tthrow new AssertionFailedException(message);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nAssert.equals = function () {\r\n\tif (arguments.length === 2) {\r\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1];\r\n\t\tAssert.equals(expectedValue, actualValue, null);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2];\r\n\t\tif (!actualValue.equals(expectedValue)) {\r\n\t\t\tthrow new AssertionFailedException(\"Expected \" + expectedValue + \" but encountered \" + actualValue + (message !== null ? \": \" + message : \"\"));\r\n\t\t}\r\n\t}\r\n};\r\n","import NumberUtil from '../util/NumberUtil';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nimport Cloneable from '../../../../java/lang/Cloneable';\r\nimport Comparator from '../../../../java/util/Comparator';\r\nimport Serializable from '../../../../java/io/Serializable';\r\nimport Assert from '../util/Assert';\r\nexport default function Coordinate() {\r\n\tthis.x = null;\r\n\tthis.y = null;\r\n\tthis.z = null;\r\n\tif (arguments.length === 0) {\r\n\t\tCoordinate.call(this, 0.0, 0.0);\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet c = arguments[0];\r\n\t\tCoordinate.call(this, c.x, c.y, c.z);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet x = arguments[0], y = arguments[1];\r\n\t\tCoordinate.call(this, x, y, Coordinate.NULL_ORDINATE);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet x = arguments[0], y = arguments[1], z = arguments[2];\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t}\r\n}\r\nextend(Coordinate.prototype, {\r\n\tsetOrdinate: function (ordinateIndex, value) {\r\n\t\tswitch (ordinateIndex) {\r\n\t\t\tcase Coordinate.X:\r\n\t\t\t\tthis.x = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase Coordinate.Y:\r\n\t\t\t\tthis.y = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase Coordinate.Z:\r\n\t\t\t\tthis.z = value;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\r\n\t\t}\r\n\t},\r\n\tequals2D: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet other = arguments[0];\r\n\t\t\tif (this.x !== other.x) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.y !== other.y) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet c = arguments[0], tolerance = arguments[1];\r\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\tgetOrdinate: function (ordinateIndex) {\r\n\t\tswitch (ordinateIndex) {\r\n\t\t\tcase Coordinate.X:\r\n\t\t\t\treturn this.x;\r\n\t\t\tcase Coordinate.Y:\r\n\t\t\t\treturn this.y;\r\n\t\t\tcase Coordinate.Z:\r\n\t\t\t\treturn this.z;\r\n\t\t}\r\n\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\r\n\t},\r\n\tequals3D: function (other) {\r\n\t\treturn this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z));\r\n\t},\r\n\tequals: function (other) {\r\n\t\tif (!(other instanceof Coordinate)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this.equals2D(other);\r\n\t},\r\n\tequalInZ: function (c, tolerance) {\r\n\t\treturn NumberUtil.equalsWithTolerance(this.z, c.z, tolerance);\r\n\t},\r\n\tcompareTo: function (o) {\r\n\t\tvar other = o;\r\n\t\tif (this.x < other.x) return -1;\r\n\t\tif (this.x > other.x) return 1;\r\n\t\tif (this.y < other.y) return -1;\r\n\t\tif (this.y > other.y) return 1;\r\n\t\treturn 0;\r\n\t},\r\n\tclone: function () {\r\n\t\ttry {\r\n\t\t\tvar coord = null;\r\n\t\t\treturn coord;\r\n\t\t} catch (e) {\r\n\t\t\tif (e instanceof CloneNotSupportedException) {\r\n\t\t\t\tAssert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");\r\n\t\t\t\treturn null;\r\n\t\t\t} else throw e;\r\n\t\t} finally {}\r\n\t},\r\n\tcopy: function () {\r\n\t\treturn new Coordinate(this);\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\r\n\t},\r\n\tdistance3D: function (c) {\r\n\t\tvar dx = this.x - c.x;\r\n\t\tvar dy = this.y - c.y;\r\n\t\tvar dz = this.z - c.z;\r\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\r\n\t},\r\n\tdistance: function (c) {\r\n\t\tvar dx = this.x - c.x;\r\n\t\tvar dy = this.y - c.y;\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t},\r\n\thashCode: function () {\r\n\t\tvar result = 17;\r\n\t\tresult = 37 * result + Coordinate.hashCode(this.x);\r\n\t\tresult = 37 * result + Coordinate.hashCode(this.y);\r\n\t\treturn result;\r\n\t},\r\n\tsetCoordinate: function (other) {\r\n\t\tthis.x = other.x;\r\n\t\tthis.y = other.y;\r\n\t\tthis.z = other.z;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable, Cloneable, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Coordinate;\r\n\t}\r\n});\r\nCoordinate.hashCode = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet x = arguments[0];\r\n\t\tvar f = Double.doubleToLongBits(x);\r\n\t\treturn Math.trunc(f ^ f >>> 32);\r\n\t}\r\n};\r\nfunction DimensionalComparator() {\r\n\tthis.dimensionsToTest = 2;\r\n\tif (arguments.length === 0) {\r\n\t\tDimensionalComparator.call(this, 2);\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet dimensionsToTest = arguments[0];\r\n\t\tif (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");\r\n\t\tthis.dimensionsToTest = dimensionsToTest;\r\n\t}\r\n}\r\nextend(DimensionalComparator.prototype, {\r\n\tcompare: function (o1, o2) {\r\n\t\tvar c1 = o1;\r\n\t\tvar c2 = o2;\r\n\t\tvar compX = DimensionalComparator.compare(c1.x, c2.x);\r\n\t\tif (compX !== 0) return compX;\r\n\t\tvar compY = DimensionalComparator.compare(c1.y, c2.y);\r\n\t\tif (compY !== 0) return compY;\r\n\t\tif (this.dimensionsToTest <= 2) return 0;\r\n\t\tvar compZ = DimensionalComparator.compare(c1.z, c2.z);\r\n\t\treturn compZ;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DimensionalComparator;\r\n\t}\r\n});\r\nDimensionalComparator.compare = function (a, b) {\r\n\tif (a < b) return -1;\r\n\tif (a > b) return 1;\r\n\tif (Double.isNaN(a)) {\r\n\t\tif (Double.isNaN(b)) return 0;\r\n\t\treturn -1;\r\n\t}\r\n\tif (Double.isNaN(b)) return 1;\r\n\treturn 0;\r\n};\r\nCoordinate.DimensionalComparator = DimensionalComparator;\r\nCoordinate.serialVersionUID = 6683108902428366910;\r\nCoordinate.NULL_ORDINATE = Double.NaN;\r\nCoordinate.X = 0;\r\nCoordinate.Y = 1;\r\nCoordinate.Z = 2;\r\n","/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\r\n * @constructor\r\n * @private\r\n */\r\nexport default function Iterator() {};\r\n\r\n/**\r\n * Returns true if the iteration has more elements.\r\n * @return {boolean}\r\n */\r\nIterator.prototype.hasNext = function() {};\r\n\r\n/**\r\n * Returns the next element in the iteration.\r\n * @return {Object}\r\n */\r\nIterator.prototype.next = function() {};\r\n\r\n/**\r\n * Removes from the underlying collection the last element returned by the\r\n * iterator (optional operation).\r\n */\r\nIterator.prototype.remove = function() {};\r\n","import Iterator from './Iterator'\r\n\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\r\n *\r\n * @constructor\r\n * @private\r\n */\r\nexport default function Collection() {};\r\n\r\n/**\r\n * Ensures that this collection contains the specified element (optional\r\n * operation).\r\n * @param {Object} e\r\n * @return {boolean}\r\n */\r\nCollection.prototype.add = function() {};\r\n\r\n\r\n/**\r\n * Appends all of the elements in the specified collection to the end of this\r\n * list, in the order that they are returned by the specified collection's\r\n * iterator (optional operation).\r\n * @param {javascript.util.Collection} c\r\n * @return {boolean}\r\n */\r\nCollection.prototype.addAll = function() {};\r\n\r\n\r\n/**\r\n * Returns true if this collection contains no elements.\r\n * @return {boolean}\r\n */\r\nCollection.prototype.isEmpty = function() {};\r\n\r\n\r\n/**\r\n * Returns an iterator over the elements in this collection.\r\n * @return {javascript.util.Iterator}\r\n */\r\nCollection.prototype.iterator = function() {};\r\n\r\n\r\n/**\r\n * Returns an iterator over the elements in this collection.\r\n * @return {number}\r\n */\r\nCollection.prototype.size = function() {};\r\n\r\n\r\n/**\r\n * Returns an array containing all of the elements in this collection.\r\n * @return {Array}\r\n */\r\nCollection.prototype.toArray = function() {};\r\n\r\n\r\n/**\r\n * Removes a single instance of the specified element from this collection if it\r\n * is present. (optional)\r\n * @param {Object} e\r\n * @return {boolean}\r\n */\r\nCollection.prototype.remove = function() {};\r\n","/**\r\n * @param {string=} message Optional message\r\n * @extends {Error}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function IndexOutOfBoundsException(message) {\r\n  this.message = message || '';\r\n};\r\nIndexOutOfBoundsException.prototype = new Error();\r\n\r\n/**\r\n * @type {string}\r\n */\r\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\r\n","import Collection from './Collection'\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\r\n *\r\n * @extends {javascript.util.Collection}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function List() { };\r\nList.prototype = Object.create(Collection.prototype);\r\nList.prototype.constructor = List\r\n\r\n/**\r\n * Returns the element at the specified position in this list.\r\n * @param {number} index\r\n * @return {Object}\r\n */\r\nList.prototype.get = function() { };\r\n\r\n\r\n/**\r\n * Replaces the element at the specified position in this list with the\r\n * specified element (optional operation).\r\n * @param {number} index\r\n * @param {Object} e\r\n * @return {Object}\r\n */\r\nList.prototype.set = function() { };\r\n\r\n\r\n/**\r\n * Returns true if this collection contains no elements.\r\n * @return {boolean}\r\n */\r\nList.prototype.isEmpty = function() { };\r\n","/**\r\n * @param {string=} message Optional message\r\n * @extends {Error}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function NoSuchElementException(message) {\r\n  this.message = message || '';\r\n};\r\nNoSuchElementException.prototype = new Error();\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nNoSuchElementException.prototype.name = 'NoSuchElementException';\r\n","/**\r\n * @param {string=} message Optional message\r\n * @extends {Error}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function OperationNotSupported(message) {\r\n  this.message = message || '';\r\n};\r\nOperationNotSupported.prototype = new Error();\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nOperationNotSupported.prototype.name = 'OperationNotSupported';\r\n","import Collection from './Collection'\r\nimport IndexOutOfBoundsException from './IndexOutOfBoundsException'\r\nimport Iterator from './Iterator'\r\nimport List from './List'\r\nimport NoSuchElementException from './NoSuchElementException'\r\nimport OperationNotSupported from './OperationNotSupported'\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\r\n *\r\n * @extends List\r\n * @private\r\n */\r\nexport default function ArrayList () {\r\n  /**\r\n   * @type {Array}\r\n   * @private\r\n  */\r\n  this.array_ = [];\r\n\r\n  if (arguments[0] instanceof Collection) {\r\n    this.addAll(arguments[0]);\r\n  }\r\n};\r\nArrayList.prototype = Object.create(List.prototype)\r\nArrayList.prototype.constructor = ArrayList;\r\n\r\nArrayList.prototype.ensureCapacity = function () {}\r\nArrayList.prototype.interfaces_ = function () { return [List, Collection] }\r\n\r\n/**\r\n * @override\r\n */\r\nArrayList.prototype.add = function(e) {\r\n  if (arguments.length === 1) {\r\n    this.array_.push(e)\r\n  } else {\r\n    this.array_.splice(arguments[0], arguments[1])\r\n  }\r\n  return true\r\n};\r\n\r\nArrayList.prototype.clear = function() {\r\n  this.array_ = []\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nArrayList.prototype.addAll = function(c) {\r\n  for (var i = c.iterator(); i.hasNext();) {\r\n    this.add(i.next());\r\n  }\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nArrayList.prototype.set = function(index, element) {\r\n  var oldElement = this.array_[index];\r\n  this.array_[index] = element;\r\n  return oldElement;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nArrayList.prototype.iterator = function() {\r\n  return new Iterator_(this);\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nArrayList.prototype.get = function(index) {\r\n  if (index < 0 || index >= this.size()) {\r\n    throw new IndexOutOfBoundsException();\r\n  }\r\n\r\n  return this.array_[index];\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nArrayList.prototype.isEmpty = function() {\r\n  return this.array_.length === 0;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nArrayList.prototype.size = function() {\r\n  return this.array_.length;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nArrayList.prototype.toArray = function() {\r\n  var array = [];\r\n\r\n  for (var i = 0, len = this.array_.length; i < len; i++) {\r\n    array.push(this.array_[i]);\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nArrayList.prototype.remove = function(o) {\r\n  var found = false;\r\n\r\n  for (var i = 0, len = this.array_.length; i < len; i++) {\r\n    if (this.array_[i] === o) {\r\n      this.array_.splice(i, 1);\r\n      found = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return found;\r\n};\r\n\r\n\r\n\r\n/**\r\n * @extends {Iterator}\r\n * @param {ArrayList} arrayList\r\n * @constructor\r\n * @private\r\n */\r\nvar Iterator_ = function(arrayList) {\r\n  /**\r\n   * @type {ArrayList}\r\n   * @private\r\n  */\r\n  this.arrayList_ = arrayList;\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n  */\r\n  this.position_ = 0;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nIterator_.prototype.next = function() {\r\n  if (this.position_ === this.arrayList_.size()) {\r\n    throw new NoSuchElementException();\r\n  }\r\n  return this.arrayList_.get(this.position_++);\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nIterator_.prototype.hasNext = function() {\r\n  if (this.position_ < this.arrayList_.size()) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * TODO: should be in ListIterator\r\n * @override\r\n */\r\nIterator_.prototype.set = function(element) {\r\n  return this.arrayList_.set(this.position_ - 1, element);\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nIterator_.prototype.remove = function() {\r\n  this.arrayList_.remove(this.arrayList_.get(this.position_));\r\n};\r\n","import Coordinate from './Coordinate';\r\nimport extend from '../../../../extend';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport inherits from '../../../../inherits';\r\nexport default function CoordinateList() {\r\n\tArrayList.apply(this);\r\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\r\n\t\tlet coord = arguments[0];\r\n\t\tthis.ensureCapacity(coord.length);\r\n\t\tthis.add(coord, true);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet coord = arguments[0], allowRepeated = arguments[1];\r\n\t\tthis.ensureCapacity(coord.length);\r\n\t\tthis.add(coord, allowRepeated);\r\n\t}\r\n}\r\ninherits(CoordinateList, ArrayList);\r\nextend(CoordinateList.prototype, {\r\n\tgetCoordinate: function (i) {\r\n\t\treturn this.get(i);\r\n\t},\r\n\taddAll: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet coll = arguments[0], allowRepeated = arguments[1];\r\n\t\t\tvar isChanged = false;\r\n\t\t\tfor (var i = coll.iterator(); i.hasNext(); ) {\r\n\t\t\t\tthis.add(i.next(), allowRepeated);\r\n\t\t\t\tisChanged = true;\r\n\t\t\t}\r\n\t\t\treturn isChanged;\r\n\t\t} else return ArrayList.prototype.addAll.apply(this, arguments);\r\n\t},\r\n\tclone: function () {\r\n\t\tvar clone = ArrayList.prototype.clone.call(this);\r\n\t\tfor (var i = 0; i < this.size(); i++) {\r\n\t\t\tclone.add(i, this.get(i).copy());\r\n\t\t}\r\n\t\treturn clone;\r\n\t},\r\n\ttoCoordinateArray: function () {\r\n\t\treturn this.toArray(CoordinateList.coordArrayType);\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet coord = arguments[0];\r\n\t\t\tArrayList.prototype.add.call(this, coord);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tif (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\r\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\r\n\t\t\t\tthis.add(coord, allowRepeated, true);\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (arguments[0] instanceof Coordinate && typeof arguments[1] === \"boolean\") {\r\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\r\n\t\t\t\tif (!allowRepeated) {\r\n\t\t\t\t\tif (this.size() >= 1) {\r\n\t\t\t\t\t\tvar last = this.get(this.size() - 1);\r\n\t\t\t\t\t\tif (last.equals2D(coord)) return null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tArrayList.prototype.add.call(this, coord);\r\n\t\t\t} else if (arguments[0] instanceof Object && typeof arguments[1] === \"boolean\") {\r\n\t\t\t\tlet obj = arguments[0], allowRepeated = arguments[1];\r\n\t\t\t\tthis.add(obj, allowRepeated);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tif (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\")) {\r\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2];\r\n\t\t\t\tif (direction) {\r\n\t\t\t\t\tfor (var i = 0; i < coord.length; i++) {\r\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var i = coord.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\r\n\t\t\t\tlet i = arguments[0], coord = arguments[1], allowRepeated = arguments[2];\r\n\t\t\t\tif (!allowRepeated) {\r\n\t\t\t\t\tvar size = this.size();\r\n\t\t\t\t\tif (size > 0) {\r\n\t\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t\tvar prev = this.get(i - 1);\r\n\t\t\t\t\t\t\tif (prev.equals2D(coord)) return null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (i < size) {\r\n\t\t\t\t\t\t\tvar next = this.get(i);\r\n\t\t\t\t\t\t\tif (next.equals2D(coord)) return null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tArrayList.prototype.add.call(this, i, coord);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 4) {\r\n\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3];\r\n\t\t\tvar inc = 1;\r\n\t\t\tif (start > end) inc = -1;\r\n\t\t\tfor (var i = start; i !== end; i += inc) {\r\n\t\t\t\tthis.add(coord[i], allowRepeated);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\tcloseRing: function () {\r\n\t\tif (this.size() > 0) this.add(new Coordinate(this.get(0)), false);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateList;\r\n\t}\r\n});\r\nCoordinateList.coordArrayType = new Array(0).fill(null);\r\n","import Coordinate from './Coordinate';\r\nimport extend from '../../../../extend';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nimport Serializable from '../../../../java/io/Serializable';\r\nexport default function Envelope() {\r\n\tthis.minx = null;\r\n\tthis.maxx = null;\r\n\tthis.miny = null;\r\n\tthis.maxy = null;\r\n\tif (arguments.length === 0) {\r\n\t\tthis.init();\r\n\t} else if (arguments.length === 1) {\r\n\t\tif (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet p = arguments[0];\r\n\t\t\tthis.init(p.x, p.x, p.y, p.y);\r\n\t\t} else if (arguments[0] instanceof Envelope) {\r\n\t\t\tlet env = arguments[0];\r\n\t\t\tthis.init(env);\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet p1 = arguments[0], p2 = arguments[1];\r\n\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\r\n\t\tthis.init(x1, x2, y1, y2);\r\n\t}\r\n}\r\nextend(Envelope.prototype, {\r\n\tgetArea: function () {\r\n\t\treturn this.getWidth() * this.getHeight();\r\n\t},\r\n\tequals: function (other) {\r\n\t\tif (!(other instanceof Envelope)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar otherEnvelope = other;\r\n\t\tif (this.isNull()) {\r\n\t\t\treturn otherEnvelope.isNull();\r\n\t\t}\r\n\t\treturn this.maxx === otherEnvelope.getMaxX() && this.maxy === otherEnvelope.getMaxY() && this.minx === otherEnvelope.getMinX() && this.miny === otherEnvelope.getMinY();\r\n\t},\r\n\tintersection: function (env) {\r\n\t\tif (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope();\r\n\t\tvar intMinX = this.minx > env.minx ? this.minx : env.minx;\r\n\t\tvar intMinY = this.miny > env.miny ? this.miny : env.miny;\r\n\t\tvar intMaxX = this.maxx < env.maxx ? this.maxx : env.maxx;\r\n\t\tvar intMaxY = this.maxy < env.maxy ? this.maxy : env.maxy;\r\n\t\treturn new Envelope(intMinX, intMaxX, intMinY, intMaxY);\r\n\t},\r\n\tisNull: function () {\r\n\t\treturn this.maxx < this.minx;\r\n\t},\r\n\tgetMaxX: function () {\r\n\t\treturn this.maxx;\r\n\t},\r\n\tcovers: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Coordinate) {\r\n\t\t\t\tlet p = arguments[0];\r\n\t\t\t\treturn this.covers(p.x, p.y);\r\n\t\t\t} else if (arguments[0] instanceof Envelope) {\r\n\t\t\t\tlet other = arguments[0];\r\n\t\t\t\tif (this.isNull() || other.isNull()) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn other.getMinX() >= this.minx && other.getMaxX() <= this.maxx && other.getMinY() >= this.miny && other.getMaxY() <= this.maxy;\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet x = arguments[0], y = arguments[1];\r\n\t\t\tif (this.isNull()) return false;\r\n\t\t\treturn x >= this.minx && x <= this.maxx && y >= this.miny && y <= this.maxy;\r\n\t\t}\r\n\t},\r\n\tintersects: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Envelope) {\r\n\t\t\t\tlet other = arguments[0];\r\n\t\t\t\tif (this.isNull() || other.isNull()) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn !(other.minx > this.maxx || other.maxx < this.minx || other.miny > this.maxy || other.maxy < this.miny);\r\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\t\tlet p = arguments[0];\r\n\t\t\t\treturn this.intersects(p.x, p.y);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet x = arguments[0], y = arguments[1];\r\n\t\t\tif (this.isNull()) return false;\r\n\t\t\treturn !(x > this.maxx || x < this.minx || y > this.maxy || y < this.miny);\r\n\t\t}\r\n\t},\r\n\tgetMinY: function () {\r\n\t\treturn this.miny;\r\n\t},\r\n\tgetMinX: function () {\r\n\t\treturn this.minx;\r\n\t},\r\n\texpandToInclude: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Coordinate) {\r\n\t\t\t\tlet p = arguments[0];\r\n\t\t\t\tthis.expandToInclude(p.x, p.y);\r\n\t\t\t} else if (arguments[0] instanceof Envelope) {\r\n\t\t\t\tlet other = arguments[0];\r\n\t\t\t\tif (other.isNull()) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.isNull()) {\r\n\t\t\t\t\tthis.minx = other.getMinX();\r\n\t\t\t\t\tthis.maxx = other.getMaxX();\r\n\t\t\t\t\tthis.miny = other.getMinY();\r\n\t\t\t\t\tthis.maxy = other.getMaxY();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (other.minx < this.minx) {\r\n\t\t\t\t\t\tthis.minx = other.minx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (other.maxx > this.maxx) {\r\n\t\t\t\t\t\tthis.maxx = other.maxx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (other.miny < this.miny) {\r\n\t\t\t\t\t\tthis.miny = other.miny;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (other.maxy > this.maxy) {\r\n\t\t\t\t\t\tthis.maxy = other.maxy;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet x = arguments[0], y = arguments[1];\r\n\t\t\tif (this.isNull()) {\r\n\t\t\t\tthis.minx = x;\r\n\t\t\t\tthis.maxx = x;\r\n\t\t\t\tthis.miny = y;\r\n\t\t\t\tthis.maxy = y;\r\n\t\t\t} else {\r\n\t\t\t\tif (x < this.minx) {\r\n\t\t\t\t\tthis.minx = x;\r\n\t\t\t\t}\r\n\t\t\t\tif (x > this.maxx) {\r\n\t\t\t\t\tthis.maxx = x;\r\n\t\t\t\t}\r\n\t\t\t\tif (y < this.miny) {\r\n\t\t\t\t\tthis.miny = y;\r\n\t\t\t\t}\r\n\t\t\t\tif (y > this.maxy) {\r\n\t\t\t\t\tthis.maxy = y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tminExtent: function () {\r\n\t\tif (this.isNull()) return 0.0;\r\n\t\tvar w = this.getWidth();\r\n\t\tvar h = this.getHeight();\r\n\t\tif (w < h) return w;\r\n\t\treturn h;\r\n\t},\r\n\tgetWidth: function () {\r\n\t\tif (this.isNull()) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.maxx - this.minx;\r\n\t},\r\n\tcompareTo: function (o) {\r\n\t\tvar env = o;\r\n\t\tif (this.isNull()) {\r\n\t\t\tif (env.isNull()) return 0;\r\n\t\t\treturn -1;\r\n\t\t} else {\r\n\t\t\tif (env.isNull()) return 1;\r\n\t\t}\r\n\t\tif (this.minx < env.minx) return -1;\r\n\t\tif (this.minx > env.minx) return 1;\r\n\t\tif (this.miny < env.miny) return -1;\r\n\t\tif (this.miny > env.miny) return 1;\r\n\t\tif (this.maxx < env.maxx) return -1;\r\n\t\tif (this.maxx > env.maxx) return 1;\r\n\t\tif (this.maxy < env.maxy) return -1;\r\n\t\tif (this.maxy > env.maxy) return 1;\r\n\t\treturn 0;\r\n\t},\r\n\ttranslate: function (transX, transY) {\r\n\t\tif (this.isNull()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tthis.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn \"Env[\" + this.minx + \" : \" + this.maxx + \", \" + this.miny + \" : \" + this.maxy + \"]\";\r\n\t},\r\n\tsetToNull: function () {\r\n\t\tthis.minx = 0;\r\n\t\tthis.maxx = -1;\r\n\t\tthis.miny = 0;\r\n\t\tthis.maxy = -1;\r\n\t},\r\n\tgetHeight: function () {\r\n\t\tif (this.isNull()) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.maxy - this.miny;\r\n\t},\r\n\tmaxExtent: function () {\r\n\t\tif (this.isNull()) return 0.0;\r\n\t\tvar w = this.getWidth();\r\n\t\tvar h = this.getHeight();\r\n\t\tif (w > h) return w;\r\n\t\treturn h;\r\n\t},\r\n\texpandBy: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet distance = arguments[0];\r\n\t\t\tthis.expandBy(distance, distance);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet deltaX = arguments[0], deltaY = arguments[1];\r\n\t\t\tif (this.isNull()) return null;\r\n\t\t\tthis.minx -= deltaX;\r\n\t\t\tthis.maxx += deltaX;\r\n\t\t\tthis.miny -= deltaY;\r\n\t\t\tthis.maxy += deltaY;\r\n\t\t\tif (this.minx > this.maxx || this.miny > this.maxy) this.setToNull();\r\n\t\t}\r\n\t},\r\n\tcontains: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Envelope) {\r\n\t\t\t\tlet other = arguments[0];\r\n\t\t\t\treturn this.covers(other);\r\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\t\tlet p = arguments[0];\r\n\t\t\t\treturn this.covers(p);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet x = arguments[0], y = arguments[1];\r\n\t\t\treturn this.covers(x, y);\r\n\t\t}\r\n\t},\r\n\tcentre: function () {\r\n\t\tif (this.isNull()) return null;\r\n\t\treturn new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0);\r\n\t},\r\n\tinit: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tthis.setToNull();\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Coordinate) {\r\n\t\t\t\tlet p = arguments[0];\r\n\t\t\t\tthis.init(p.x, p.x, p.y, p.y);\r\n\t\t\t} else if (arguments[0] instanceof Envelope) {\r\n\t\t\t\tlet env = arguments[0];\r\n\t\t\t\tthis.minx = env.minx;\r\n\t\t\t\tthis.maxx = env.maxx;\r\n\t\t\t\tthis.miny = env.miny;\r\n\t\t\t\tthis.maxy = env.maxy;\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\r\n\t\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\r\n\t\t} else if (arguments.length === 4) {\r\n\t\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\r\n\t\t\tif (x1 < x2) {\r\n\t\t\t\tthis.minx = x1;\r\n\t\t\t\tthis.maxx = x2;\r\n\t\t\t} else {\r\n\t\t\t\tthis.minx = x2;\r\n\t\t\t\tthis.maxx = x1;\r\n\t\t\t}\r\n\t\t\tif (y1 < y2) {\r\n\t\t\t\tthis.miny = y1;\r\n\t\t\t\tthis.maxy = y2;\r\n\t\t\t} else {\r\n\t\t\t\tthis.miny = y2;\r\n\t\t\t\tthis.maxy = y1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetMaxY: function () {\r\n\t\treturn this.maxy;\r\n\t},\r\n\tdistance: function (env) {\r\n\t\tif (this.intersects(env)) return 0;\r\n\t\tvar dx = 0.0;\r\n\t\tif (this.maxx < env.minx) dx = env.minx - this.maxx; else if (this.minx > env.maxx) dx = this.minx - env.maxx;\r\n\t\tvar dy = 0.0;\r\n\t\tif (this.maxy < env.miny) dy = env.miny - this.maxy; else if (this.miny > env.maxy) dy = this.miny - env.maxy;\r\n\t\tif (dx === 0.0) return dy;\r\n\t\tif (dy === 0.0) return dx;\r\n\t\treturn Math.sqrt(dx * dx + dy * dy);\r\n\t},\r\n\thashCode: function () {\r\n\t\tvar result = 17;\r\n\t\tresult = 37 * result + Coordinate.hashCode(this.minx);\r\n\t\tresult = 37 * result + Coordinate.hashCode(this.maxx);\r\n\t\tresult = 37 * result + Coordinate.hashCode(this.miny);\r\n\t\tresult = 37 * result + Coordinate.hashCode(this.maxy);\r\n\t\treturn result;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Envelope;\r\n\t}\r\n});\r\nEnvelope.intersects = function () {\r\n\tif (arguments.length === 3) {\r\n\t\tlet p1 = arguments[0], p2 = arguments[1], q = arguments[2];\r\n\t\tif (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\r\n\t\tvar minq = Math.min(q1.x, q2.x);\r\n\t\tvar maxq = Math.max(q1.x, q2.x);\r\n\t\tvar minp = Math.min(p1.x, p2.x);\r\n\t\tvar maxp = Math.max(p1.x, p2.x);\r\n\t\tif (minp > maxq) return false;\r\n\t\tif (maxp < minq) return false;\r\n\t\tminq = Math.min(q1.y, q2.y);\r\n\t\tmaxq = Math.max(q1.y, q2.y);\r\n\t\tminp = Math.min(p1.y, p2.y);\r\n\t\tmaxp = Math.max(p1.y, p2.y);\r\n\t\tif (minp > maxq) return false;\r\n\t\tif (maxp < minq) return false;\r\n\t\treturn true;\r\n\t}\r\n};\r\nEnvelope.serialVersionUID = 5873921885273102420;\r\n","export default function Exception () {}\r\n","import extend from '../../../../extend';\r\nimport Exception from '../../../../java/lang/Exception';\r\nimport inherits from '../../../../inherits';\r\nexport default function NotRepresentableException() {\r\n\tException.call(this, \"Projective point not representable on the Cartesian plane.\");\r\n}\r\ninherits(NotRepresentableException, Exception);\r\nextend(NotRepresentableException.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NotRepresentableException;\r\n\t}\r\n});\r\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nexport default function Location() {}\r\nextend(Location.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Location;\r\n\t}\r\n});\r\nLocation.toLocationSymbol = function (locationValue) {\r\n\tswitch (locationValue) {\r\n\t\tcase Location.EXTERIOR:\r\n\t\t\treturn 'e';\r\n\t\tcase Location.BOUNDARY:\r\n\t\t\treturn 'b';\r\n\t\tcase Location.INTERIOR:\r\n\t\t\treturn 'i';\r\n\t\tcase Location.NONE:\r\n\t\t\treturn '-';\r\n\t}\r\n\tthrow new IllegalArgumentException(\"Unknown location value: \" + locationValue);\r\n};\r\nLocation.INTERIOR = 0;\r\nLocation.BOUNDARY = 1;\r\nLocation.EXTERIOR = 2;\r\nLocation.NONE = -1;\r\n","import Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nexport default function MathUtil() {}\r\nextend(MathUtil.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MathUtil;\r\n\t}\r\n});\r\nMathUtil.log10 = function (x) {\r\n\tvar ln = Math.log(x);\r\n\tif (Double.isInfinite(ln)) return ln;\r\n\tif (Double.isNaN(ln)) return ln;\r\n\treturn ln / MathUtil.LOG_10;\r\n};\r\nMathUtil.min = function (v1, v2, v3, v4) {\r\n\tvar min = v1;\r\n\tif (v2 < min) min = v2;\r\n\tif (v3 < min) min = v3;\r\n\tif (v4 < min) min = v4;\r\n\treturn min;\r\n};\r\nMathUtil.clamp = function () {\r\n\tif (typeof arguments[2] === \"number\" && (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\")) {\r\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\r\n\t\tif (x < min) return min;\r\n\t\tif (x > max) return max;\r\n\t\treturn x;\r\n\t} else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\r\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\r\n\t\tif (x < min) return min;\r\n\t\tif (x > max) return max;\r\n\t\treturn x;\r\n\t}\r\n};\r\nMathUtil.wrap = function (index, max) {\r\n\tif (index < 0) {\r\n\t\treturn max - -index % max;\r\n\t}\r\n\treturn index % max;\r\n};\r\nMathUtil.max = function () {\r\n\tif (arguments.length === 3) {\r\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2];\r\n\t\tvar max = v1;\r\n\t\tif (v2 > max) max = v2;\r\n\t\tif (v3 > max) max = v3;\r\n\t\treturn max;\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3];\r\n\t\tvar max = v1;\r\n\t\tif (v2 > max) max = v2;\r\n\t\tif (v3 > max) max = v3;\r\n\t\tif (v4 > max) max = v4;\r\n\t\treturn max;\r\n\t}\r\n};\r\nMathUtil.average = function (x1, x2) {\r\n\treturn (x1 + x2) / 2.0;\r\n};\r\nMathUtil.LOG_10 = Math.log(10);\r\n","export default function StringBuffer (str) {\r\n  this.str = str\r\n}\r\n\r\nStringBuffer.prototype.append = function (e) {\r\n  this.str += e\r\n}\r\n\r\nStringBuffer.prototype.setCharAt = function (i, c) {\r\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\r\n}\r\n\r\nStringBuffer.prototype.toString = function (e) {\r\n  return this.str\r\n}\r\n","export default function Integer (value) {\r\n  this.value = value\r\n}\r\n\r\nInteger.prototype.intValue = function () {\r\n  return this.value\r\n}\r\nInteger.prototype.compareTo = function (o) {\r\n  if (this.value < o) return -1\r\n  if (this.value > o) return 1\r\n  return 0\r\n}\r\n\r\nInteger.isNaN = n => Number.isNaN(n)\r\n","export default function Character () {}\r\nCharacter.isWhitespace = c => ((c <= 32 && c >= 0) || c == 127)\r\nCharacter.toUpperCase = c => c.toUpperCase()\r\n","import StringBuffer from '../../../../java/lang/StringBuffer';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport Integer from '../../../../java/lang/Integer';\r\nimport Character from '../../../../java/lang/Character';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nimport Cloneable from '../../../../java/lang/Cloneable';\r\nimport Serializable from '../../../../java/io/Serializable';\r\nexport default function DD() {\r\n\tthis.hi = 0.0;\r\n\tthis.lo = 0.0;\r\n\tif (arguments.length === 0) {\r\n\t\tthis.init(0.0);\r\n\t} else if (arguments.length === 1) {\r\n\t\tif (typeof arguments[0] === \"number\") {\r\n\t\t\tlet x = arguments[0];\r\n\t\t\tthis.init(x);\r\n\t\t} else if (arguments[0] instanceof DD) {\r\n\t\t\tlet dd = arguments[0];\r\n\t\t\tthis.init(dd);\r\n\t\t} else if (typeof arguments[0] === \"string\") {\r\n\t\t\tlet str = arguments[0];\r\n\t\t\tDD.call(this, DD.parse(str));\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet hi = arguments[0], lo = arguments[1];\r\n\t\tthis.init(hi, lo);\r\n\t}\r\n}\r\nextend(DD.prototype, {\r\n\tle: function (y) {\r\n\t\treturn this.hi < y.hi || this.hi === y.hi && this.lo <= y.lo;\r\n\t},\r\n\textractSignificantDigits: function (insertDecimalPoint, magnitude) {\r\n\t\tvar y = this.abs();\r\n\t\tvar mag = DD.magnitude(y.hi);\r\n\t\tvar scale = DD.TEN.pow(mag);\r\n\t\ty = y.divide(scale);\r\n\t\tif (y.gt(DD.TEN)) {\r\n\t\t\ty = y.divide(DD.TEN);\r\n\t\t\tmag += 1;\r\n\t\t} else if (y.lt(DD.ONE)) {\r\n\t\t\ty = y.multiply(DD.TEN);\r\n\t\t\tmag -= 1;\r\n\t\t}\r\n\t\tvar decimalPointPos = mag + 1;\r\n\t\tvar buf = new StringBuffer();\r\n\t\tvar numDigits = DD.MAX_PRINT_DIGITS - 1;\r\n\t\tfor (var i = 0; i <= numDigits; i++) {\r\n\t\t\tif (insertDecimalPoint && i === decimalPointPos) {\r\n\t\t\t\tbuf.append('.');\r\n\t\t\t}\r\n\t\t\tvar digit = Math.trunc(y.hi);\r\n\t\t\tif (digit < 0 || digit > 9) {}\r\n\t\t\tif (digit < 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tvar rebiasBy10 = false;\r\n\t\t\tvar digitChar = 0;\r\n\t\t\tif (digit > 9) {\r\n\t\t\t\trebiasBy10 = true;\r\n\t\t\t\tdigitChar = '9';\r\n\t\t\t} else {\r\n\t\t\t\tdigitChar = '0' + digit;\r\n\t\t\t}\r\n\t\t\tbuf.append(digitChar);\r\n\t\t\ty = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\r\n\t\t\tif (rebiasBy10) y.selfAdd(DD.TEN);\r\n\t\t\tvar continueExtractingDigits = true;\r\n\t\t\tvar remMag = DD.magnitude(y.hi);\r\n\t\t\tif (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false;\r\n\t\t\tif (!continueExtractingDigits) break;\r\n\t\t}\r\n\t\tmagnitude[0] = mag;\r\n\t\treturn buf.toString();\r\n\t},\r\n\tsqr: function () {\r\n\t\treturn this.multiply(this);\r\n\t},\r\n\tdoubleValue: function () {\r\n\t\treturn this.hi + this.lo;\r\n\t},\r\n\tsubtract: function () {\r\n\t\tif (arguments[0] instanceof DD) {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\treturn this.add(y.negate());\r\n\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\treturn this.add(-y);\r\n\t\t}\r\n\t},\r\n\tequals: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\treturn this.hi === y.hi && this.lo === y.lo;\r\n\t\t}\r\n\t},\r\n\tisZero: function () {\r\n\t\treturn this.hi === 0.0 && this.lo === 0.0;\r\n\t},\r\n\tselfSubtract: function () {\r\n\t\tif (arguments[0] instanceof DD) {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\tif (this.isNaN()) return this;\r\n\t\t\treturn this.selfAdd(-y.hi, -y.lo);\r\n\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\tif (this.isNaN()) return this;\r\n\t\t\treturn this.selfAdd(-y, 0.0);\r\n\t\t}\r\n\t},\r\n\tgetSpecialNumberString: function () {\r\n\t\tif (this.isZero()) return \"0.0\";\r\n\t\tif (this.isNaN()) return \"NaN \";\r\n\t\treturn null;\r\n\t},\r\n\tmin: function (x) {\r\n\t\tif (this.le(x)) {\r\n\t\t\treturn this;\r\n\t\t} else {\r\n\t\t\treturn x;\r\n\t\t}\r\n\t},\r\n\tselfDivide: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof DD) {\r\n\t\t\t\tlet y = arguments[0];\r\n\t\t\t\treturn this.selfDivide(y.hi, y.lo);\r\n\t\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\t\tlet y = arguments[0];\r\n\t\t\t\treturn this.selfDivide(y, 0.0);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\r\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\r\n\t\t\tC = this.hi / yhi;\r\n\t\t\tc = DD.SPLIT * C;\r\n\t\t\thc = c - C;\r\n\t\t\tu = DD.SPLIT * yhi;\r\n\t\t\thc = c - hc;\r\n\t\t\ttc = C - hc;\r\n\t\t\thy = u - yhi;\r\n\t\t\tU = C * yhi;\r\n\t\t\thy = u - hy;\r\n\t\t\tty = yhi - hy;\r\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\r\n\t\t\tc = (this.hi - U - u + this.lo - C * ylo) / yhi;\r\n\t\t\tu = C + c;\r\n\t\t\tthis.hi = u;\r\n\t\t\tthis.lo = C - u + c;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\tdump: function () {\r\n\t\treturn \"DD<\" + this.hi + \", \" + this.lo + \">\";\r\n\t},\r\n\tdivide: function () {\r\n\t\tif (arguments[0] instanceof DD) {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\r\n\t\t\tC = this.hi / y.hi;\r\n\t\t\tc = DD.SPLIT * C;\r\n\t\t\thc = c - C;\r\n\t\t\tu = DD.SPLIT * y.hi;\r\n\t\t\thc = c - hc;\r\n\t\t\ttc = C - hc;\r\n\t\t\thy = u - y.hi;\r\n\t\t\tU = C * y.hi;\r\n\t\t\thy = u - hy;\r\n\t\t\tty = y.hi - hy;\r\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\r\n\t\t\tc = (this.hi - U - u + this.lo - C * y.lo) / y.hi;\r\n\t\t\tu = C + c;\r\n\t\t\tvar zhi = u;\r\n\t\t\tvar zlo = C - u + c;\r\n\t\t\treturn new DD(zhi, zlo);\r\n\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\r\n\t\t\treturn DD.copy(this).selfDivide(y, 0.0);\r\n\t\t}\r\n\t},\r\n\tge: function (y) {\r\n\t\treturn this.hi > y.hi || this.hi === y.hi && this.lo >= y.lo;\r\n\t},\r\n\tpow: function (exp) {\r\n\t\tif (exp === 0.0) return DD.valueOf(1.0);\r\n\t\tvar r = new DD(this);\r\n\t\tvar s = DD.valueOf(1.0);\r\n\t\tvar n = Math.abs(exp);\r\n\t\tif (n > 1) {\r\n\t\t\twhile (n > 0) {\r\n\t\t\t\tif (n % 2 === 1) {\r\n\t\t\t\t\ts.selfMultiply(r);\r\n\t\t\t\t}\r\n\t\t\t\tn /= 2;\r\n\t\t\t\tif (n > 0) r = r.sqr();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ts = r;\r\n\t\t}\r\n\t\tif (exp < 0) return s.reciprocal();\r\n\t\treturn s;\r\n\t},\r\n\tceil: function () {\r\n\t\tif (this.isNaN()) return DD.NaN;\r\n\t\tvar fhi = Math.ceil(this.hi);\r\n\t\tvar flo = 0.0;\r\n\t\tif (fhi === this.hi) {\r\n\t\t\tflo = Math.ceil(this.lo);\r\n\t\t}\r\n\t\treturn new DD(fhi, flo);\r\n\t},\r\n\tcompareTo: function (o) {\r\n\t\tvar other = o;\r\n\t\tif (this.hi < other.hi) return -1;\r\n\t\tif (this.hi > other.hi) return 1;\r\n\t\tif (this.lo < other.lo) return -1;\r\n\t\tif (this.lo > other.lo) return 1;\r\n\t\treturn 0;\r\n\t},\r\n\trint: function () {\r\n\t\tif (this.isNaN()) return this;\r\n\t\tvar plus5 = this.add(0.5);\r\n\t\treturn plus5.floor();\r\n\t},\r\n\tsetValue: function () {\r\n\t\tif (arguments[0] instanceof DD) {\r\n\t\t\tlet value = arguments[0];\r\n\t\t\tthis.init(value);\r\n\t\t\treturn this;\r\n\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\tlet value = arguments[0];\r\n\t\t\tthis.init(value);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\tmax: function (x) {\r\n\t\tif (this.ge(x)) {\r\n\t\t\treturn this;\r\n\t\t} else {\r\n\t\t\treturn x;\r\n\t\t}\r\n\t},\r\n\tsqrt: function () {\r\n\t\tif (this.isZero()) return DD.valueOf(0.0);\r\n\t\tif (this.isNegative()) {\r\n\t\t\treturn DD.NaN;\r\n\t\t}\r\n\t\tvar x = 1.0 / Math.sqrt(this.hi);\r\n\t\tvar ax = this.hi * x;\r\n\t\tvar axdd = DD.valueOf(ax);\r\n\t\tvar diffSq = this.subtract(axdd.sqr());\r\n\t\tvar d2 = diffSq.hi * (x * 0.5);\r\n\t\treturn axdd.add(d2);\r\n\t},\r\n\tselfAdd: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof DD) {\r\n\t\t\t\tlet y = arguments[0];\r\n\t\t\t\treturn this.selfAdd(y.hi, y.lo);\r\n\t\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\t\tlet y = arguments[0];\r\n\t\t\t\tvar H = null, h = null, S = null, s = null, e = null, f = null;\r\n\t\t\t\tS = this.hi + y;\r\n\t\t\t\te = S - this.hi;\r\n\t\t\t\ts = S - e;\r\n\t\t\t\ts = y - e + (this.hi - s);\r\n\t\t\t\tf = s + this.lo;\r\n\t\t\t\tH = S + f;\r\n\t\t\t\th = f + (S - H);\r\n\t\t\t\tthis.hi = H + h;\r\n\t\t\t\tthis.lo = h + (H - this.hi);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\r\n\t\t\tvar H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null;\r\n\t\t\tS = this.hi + yhi;\r\n\t\t\tT = this.lo + ylo;\r\n\t\t\te = S - this.hi;\r\n\t\t\tf = T - this.lo;\r\n\t\t\ts = S - e;\r\n\t\t\tt = T - f;\r\n\t\t\ts = yhi - e + (this.hi - s);\r\n\t\t\tt = ylo - f + (this.lo - t);\r\n\t\t\te = s + T;\r\n\t\t\tH = S + e;\r\n\t\t\th = e + (S - H);\r\n\t\t\te = t + h;\r\n\t\t\tvar zhi = H + e;\r\n\t\t\tvar zlo = e + (H - zhi);\r\n\t\t\tthis.hi = zhi;\r\n\t\t\tthis.lo = zlo;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\tselfMultiply: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof DD) {\r\n\t\t\t\tlet y = arguments[0];\r\n\t\t\t\treturn this.selfMultiply(y.hi, y.lo);\r\n\t\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\t\tlet y = arguments[0];\r\n\t\t\t\treturn this.selfMultiply(y, 0.0);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\r\n\t\t\tvar hx = null, tx = null, hy = null, ty = null, C = null, c = null;\r\n\t\t\tC = DD.SPLIT * this.hi;\r\n\t\t\thx = C - this.hi;\r\n\t\t\tc = DD.SPLIT * yhi;\r\n\t\t\thx = C - hx;\r\n\t\t\ttx = this.hi - hx;\r\n\t\t\thy = c - yhi;\r\n\t\t\tC = this.hi * yhi;\r\n\t\t\thy = c - hy;\r\n\t\t\tty = yhi - hy;\r\n\t\t\tc = hx * hy - C + hx * ty + tx * hy + tx * ty + (this.hi * ylo + this.lo * yhi);\r\n\t\t\tvar zhi = C + c;\r\n\t\t\thx = C - zhi;\r\n\t\t\tvar zlo = c + hx;\r\n\t\t\tthis.hi = zhi;\r\n\t\t\tthis.lo = zlo;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\tselfSqr: function () {\r\n\t\treturn this.selfMultiply(this);\r\n\t},\r\n\tfloor: function () {\r\n\t\tif (this.isNaN()) return DD.NaN;\r\n\t\tvar fhi = Math.floor(this.hi);\r\n\t\tvar flo = 0.0;\r\n\t\tif (fhi === this.hi) {\r\n\t\t\tflo = Math.floor(this.lo);\r\n\t\t}\r\n\t\treturn new DD(fhi, flo);\r\n\t},\r\n\tnegate: function () {\r\n\t\tif (this.isNaN()) return this;\r\n\t\treturn new DD(-this.hi, -this.lo);\r\n\t},\r\n\tclone: function () {\r\n\t\ttry {\r\n\t\t\treturn null;\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex instanceof CloneNotSupportedException) {\r\n\t\t\t\treturn null;\r\n\t\t\t} else throw ex;\r\n\t\t} finally {}\r\n\t},\r\n\tmultiply: function () {\r\n\t\tif (arguments[0] instanceof DD) {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\tif (y.isNaN()) return DD.createNaN();\r\n\t\t\treturn DD.copy(this).selfMultiply(y);\r\n\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\r\n\t\t\treturn DD.copy(this).selfMultiply(y, 0.0);\r\n\t\t}\r\n\t},\r\n\tisNaN: function () {\r\n\t\treturn Double.isNaN(this.hi);\r\n\t},\r\n\tintValue: function () {\r\n\t\treturn Math.trunc(this.hi);\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar mag = DD.magnitude(this.hi);\r\n\t\tif (mag >= -3 && mag <= 20) return this.toStandardNotation();\r\n\t\treturn this.toSciNotation();\r\n\t},\r\n\ttoStandardNotation: function () {\r\n\t\tvar specialStr = this.getSpecialNumberString();\r\n\t\tif (specialStr !== null) return specialStr;\r\n\t\tvar magnitude = new Array(1).fill(null);\r\n\t\tvar sigDigits = this.extractSignificantDigits(true, magnitude);\r\n\t\tvar decimalPointPos = magnitude[0] + 1;\r\n\t\tvar num = sigDigits;\r\n\t\tif (sigDigits.charAt(0) === '.') {\r\n\t\t\tnum = \"0\" + sigDigits;\r\n\t\t} else if (decimalPointPos < 0) {\r\n\t\t\tnum = \"0.\" + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\r\n\t\t} else if (sigDigits.indexOf('.') === -1) {\r\n\t\t\tvar numZeroes = decimalPointPos - sigDigits.length;\r\n\t\t\tvar zeroes = DD.stringOfChar('0', numZeroes);\r\n\t\t\tnum = sigDigits + zeroes + \".0\";\r\n\t\t}\r\n\t\tif (this.isNegative()) return \"-\" + num;\r\n\t\treturn num;\r\n\t},\r\n\treciprocal: function () {\r\n\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\r\n\t\tC = 1.0 / this.hi;\r\n\t\tc = DD.SPLIT * C;\r\n\t\thc = c - C;\r\n\t\tu = DD.SPLIT * this.hi;\r\n\t\thc = c - hc;\r\n\t\ttc = C - hc;\r\n\t\thy = u - this.hi;\r\n\t\tU = C * this.hi;\r\n\t\thy = u - hy;\r\n\t\tty = this.hi - hy;\r\n\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\r\n\t\tc = (1.0 - U - u - C * this.lo) / this.hi;\r\n\t\tvar zhi = C + c;\r\n\t\tvar zlo = C - zhi + c;\r\n\t\treturn new DD(zhi, zlo);\r\n\t},\r\n\ttoSciNotation: function () {\r\n\t\tif (this.isZero()) return DD.SCI_NOT_ZERO;\r\n\t\tvar specialStr = this.getSpecialNumberString();\r\n\t\tif (specialStr !== null) return specialStr;\r\n\t\tvar magnitude = new Array(1).fill(null);\r\n\t\tvar digits = this.extractSignificantDigits(false, magnitude);\r\n\t\tvar expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\r\n\t\tif (digits.charAt(0) === '0') {\r\n\t\t\tthrow new IllegalStateException(\"Found leading zero: \" + digits);\r\n\t\t}\r\n\t\tvar trailingDigits = \"\";\r\n\t\tif (digits.length > 1) trailingDigits = digits.substring(1);\r\n\t\tvar digitsWithDecimal = digits.charAt(0) + \".\" + trailingDigits;\r\n\t\tif (this.isNegative()) return \"-\" + digitsWithDecimal + expStr;\r\n\t\treturn digitsWithDecimal + expStr;\r\n\t},\r\n\tabs: function () {\r\n\t\tif (this.isNaN()) return DD.NaN;\r\n\t\tif (this.isNegative()) return this.negate();\r\n\t\treturn new DD(this);\r\n\t},\r\n\tisPositive: function () {\r\n\t\treturn this.hi > 0.0 || this.hi === 0.0 && this.lo > 0.0;\r\n\t},\r\n\tlt: function (y) {\r\n\t\treturn this.hi < y.hi || this.hi === y.hi && this.lo < y.lo;\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments[0] instanceof DD) {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\treturn DD.copy(this).selfAdd(y);\r\n\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\tlet y = arguments[0];\r\n\t\t\treturn DD.copy(this).selfAdd(y);\r\n\t\t}\r\n\t},\r\n\tinit: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (typeof arguments[0] === \"number\") {\r\n\t\t\t\tlet x = arguments[0];\r\n\t\t\t\tthis.hi = x;\r\n\t\t\t\tthis.lo = 0.0;\r\n\t\t\t} else if (arguments[0] instanceof DD) {\r\n\t\t\t\tlet dd = arguments[0];\r\n\t\t\t\tthis.hi = dd.hi;\r\n\t\t\t\tthis.lo = dd.lo;\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet hi = arguments[0], lo = arguments[1];\r\n\t\t\tthis.hi = hi;\r\n\t\t\tthis.lo = lo;\r\n\t\t}\r\n\t},\r\n\tgt: function (y) {\r\n\t\treturn this.hi > y.hi || this.hi === y.hi && this.lo > y.lo;\r\n\t},\r\n\tisNegative: function () {\r\n\t\treturn this.hi < 0.0 || this.hi === 0.0 && this.lo < 0.0;\r\n\t},\r\n\ttrunc: function () {\r\n\t\tif (this.isNaN()) return DD.NaN;\r\n\t\tif (this.isPositive()) return this.floor(); else return this.ceil();\r\n\t},\r\n\tsignum: function () {\r\n\t\tif (this.hi > 0) return 1;\r\n\t\tif (this.hi < 0) return -1;\r\n\t\tif (this.lo > 0) return 1;\r\n\t\tif (this.lo < 0) return -1;\r\n\t\treturn 0;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Serializable, Comparable, Cloneable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DD;\r\n\t}\r\n});\r\nDD.sqr = function (x) {\r\n\treturn DD.valueOf(x).selfMultiply(x);\r\n};\r\nDD.valueOf = function () {\r\n\tif (typeof arguments[0] === \"string\") {\r\n\t\tlet str = arguments[0];\r\n\t\treturn DD.parse(str);\r\n\t} else if (typeof arguments[0] === \"number\") {\r\n\t\tlet x = arguments[0];\r\n\t\treturn new DD(x);\r\n\t}\r\n};\r\nDD.sqrt = function (x) {\r\n\treturn DD.valueOf(x).sqrt();\r\n};\r\nDD.parse = function (str) {\r\n\tvar i = 0;\r\n\tvar strlen = str.length;\r\n\twhile (Character.isWhitespace(str.charAt(i))) i++;\r\n\tvar isNegative = false;\r\n\tif (i < strlen) {\r\n\t\tvar signCh = str.charAt(i);\r\n\t\tif (signCh === '-' || signCh === '+') {\r\n\t\t\ti++;\r\n\t\t\tif (signCh === '-') isNegative = true;\r\n\t\t}\r\n\t}\r\n\tvar val = new DD();\r\n\tvar numDigits = 0;\r\n\tvar numBeforeDec = 0;\r\n\tvar exp = 0;\r\n\twhile (true) {\r\n\t\tif (i >= strlen) break;\r\n\t\tvar ch = str.charAt(i);\r\n\t\ti++;\r\n\t\tif (Character.isDigit(ch)) {\r\n\t\t\tvar d = ch - '0';\r\n\t\t\tval.selfMultiply(DD.TEN);\r\n\t\t\tval.selfAdd(d);\r\n\t\t\tnumDigits++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (ch === '.') {\r\n\t\t\tnumBeforeDec = numDigits;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (ch === 'e' || ch === 'E') {\r\n\t\t\tvar expStr = str.substring(i);\r\n\t\t\ttry {\r\n\t\t\t\texp = Integer.parseInt(expStr);\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tif (ex instanceof NumberFormatException) {\r\n\t\t\t\t\tthrow new NumberFormatException(\"Invalid exponent \" + expStr + \" in string \" + str);\r\n\t\t\t\t} else throw ex;\r\n\t\t\t} finally {}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthrow new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + \" in string \" + str);\r\n\t}\r\n\tvar val2 = val;\r\n\tvar numDecPlaces = numDigits - numBeforeDec - exp;\r\n\tif (numDecPlaces === 0) {\r\n\t\tval2 = val;\r\n\t} else if (numDecPlaces > 0) {\r\n\t\tvar scale = DD.TEN.pow(numDecPlaces);\r\n\t\tval2 = val.divide(scale);\r\n\t} else if (numDecPlaces < 0) {\r\n\t\tvar scale = DD.TEN.pow(-numDecPlaces);\r\n\t\tval2 = val.multiply(scale);\r\n\t}\r\n\tif (isNegative) {\r\n\t\treturn val2.negate();\r\n\t}\r\n\treturn val2;\r\n};\r\nDD.createNaN = function () {\r\n\treturn new DD(Double.NaN, Double.NaN);\r\n};\r\nDD.copy = function (dd) {\r\n\treturn new DD(dd);\r\n};\r\nDD.magnitude = function (x) {\r\n\tvar xAbs = Math.abs(x);\r\n\tvar xLog10 = Math.log(xAbs) / Math.log(10);\r\n\tvar xMag = Math.trunc(Math.floor(xLog10));\r\n\tvar xApprox = Math.pow(10, xMag);\r\n\tif (xApprox * 10 <= xAbs) xMag += 1;\r\n\treturn xMag;\r\n};\r\nDD.stringOfChar = function (ch, len) {\r\n\tvar buf = new StringBuffer();\r\n\tfor (var i = 0; i < len; i++) {\r\n\t\tbuf.append(ch);\r\n\t}\r\n\treturn buf.toString();\r\n};\r\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16);\r\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16);\r\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17);\r\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16);\r\nDD.NaN = new DD(Double.NaN, Double.NaN);\r\nDD.EPS = 1.23259516440783e-32;\r\nDD.SPLIT = 134217729.0;\r\nDD.MAX_PRINT_DIGITS = 32;\r\nDD.TEN = DD.valueOf(10.0);\r\nDD.ONE = DD.valueOf(1.0);\r\nDD.SCI_NOT_EXPONENT_CHAR = \"E\";\r\nDD.SCI_NOT_ZERO = \"0.0E0\";\r\n","import Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport DD from '../math/DD';\r\nexport default function CGAlgorithmsDD() {}\r\nextend(CGAlgorithmsDD.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CGAlgorithmsDD;\r\n\t}\r\n});\r\nCGAlgorithmsDD.orientationIndex = function (p1, p2, q) {\r\n\tvar index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\r\n\tif (index <= 1) return index;\r\n\tvar dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\r\n\tvar dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\r\n\tvar dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\r\n\tvar dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\r\n\treturn dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();\r\n};\r\nCGAlgorithmsDD.signOfDet2x2 = function (x1, y1, x2, y2) {\r\n\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\r\n\treturn det.signum();\r\n};\r\nCGAlgorithmsDD.intersection = function (p1, p2, q1, q2) {\r\n\tvar denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\r\n\tvar denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\r\n\tvar denom = denom1.subtract(denom2);\r\n\tvar numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\r\n\tvar numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\r\n\tvar numx = numx1.subtract(numx2);\r\n\tvar fracP = numx.selfDivide(denom).doubleValue();\r\n\tvar x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\r\n\tvar numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\r\n\tvar numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\r\n\tvar numy = numy1.subtract(numy2);\r\n\tvar fracQ = numy.selfDivide(denom).doubleValue();\r\n\tvar y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\r\n\treturn new Coordinate(x, y);\r\n};\r\nCGAlgorithmsDD.orientationIndexFilter = function (pa, pb, pc) {\r\n\tvar detsum = null;\r\n\tvar detleft = (pa.x - pc.x) * (pb.y - pc.y);\r\n\tvar detright = (pa.y - pc.y) * (pb.x - pc.x);\r\n\tvar det = detleft - detright;\r\n\tif (detleft > 0.0) {\r\n\t\tif (detright <= 0.0) {\r\n\t\t\treturn CGAlgorithmsDD.signum(det);\r\n\t\t} else {\r\n\t\t\tdetsum = detleft + detright;\r\n\t\t}\r\n\t} else if (detleft < 0.0) {\r\n\t\tif (detright >= 0.0) {\r\n\t\t\treturn CGAlgorithmsDD.signum(det);\r\n\t\t} else {\r\n\t\t\tdetsum = -detleft - detright;\r\n\t\t}\r\n\t} else {\r\n\t\treturn CGAlgorithmsDD.signum(det);\r\n\t}\r\n\tvar errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\r\n\tif (det >= errbound || -det >= errbound) {\r\n\t\treturn CGAlgorithmsDD.signum(det);\r\n\t}\r\n\treturn 2;\r\n};\r\nCGAlgorithmsDD.signum = function (x) {\r\n\tif (x > 0) return 1;\r\n\tif (x < 0) return -1;\r\n\treturn 0;\r\n};\r\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15;\r\n","import extend from '../../../../extend';\r\nimport Cloneable from '../../../../java/lang/Cloneable';\r\nexport default function CoordinateSequence() {}\r\nextend(CoordinateSequence.prototype, {\r\n\tsetOrdinate: function (index, ordinateIndex, value) {},\r\n\tsize: function () {},\r\n\tgetOrdinate: function (index, ordinateIndex) {},\r\n\tgetCoordinate: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet i = arguments[0];\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet index = arguments[0], coord = arguments[1];\r\n\t\t}\r\n\t},\r\n\tgetCoordinateCopy: function (i) {},\r\n\tgetDimension: function () {},\r\n\tgetX: function (index) {},\r\n\tclone: function () {},\r\n\texpandEnvelope: function (env) {},\r\n\tcopy: function () {},\r\n\tgetY: function (index) {},\r\n\ttoCoordinateArray: function () {},\r\n\tinterfaces_: function () {\r\n\t\treturn [Cloneable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateSequence;\r\n\t}\r\n});\r\nCoordinateSequence.X = 0;\r\nCoordinateSequence.Y = 1;\r\nCoordinateSequence.Z = 2;\r\nCoordinateSequence.M = 3;\r\n","export default function System () { }\r\n\r\nSystem.arraycopy = (src, srcPos, dest, destPos, len) => {\r\n  let c = 0\r\n  for (let i = srcPos; i < srcPos + len; i++) {\r\n    dest[destPos + c] = src[i]\r\n    c++\r\n  }\r\n}\r\n\r\nSystem.getProperty = (name) => {\r\n  return {\r\n    'line.separator': '\\n'\r\n  }[name]\r\n}\r\n","import NotRepresentableException from './NotRepresentableException';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nexport default function HCoordinate() {\r\n\tthis.x = null;\r\n\tthis.y = null;\r\n\tthis.w = null;\r\n\tif (arguments.length === 0) {\r\n\t\tthis.x = 0.0;\r\n\t\tthis.y = 0.0;\r\n\t\tthis.w = 1.0;\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet p = arguments[0];\r\n\t\tthis.x = p.x;\r\n\t\tthis.y = p.y;\r\n\t\tthis.w = 1.0;\r\n\t} else if (arguments.length === 2) {\r\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\r\n\t\t\tlet _x = arguments[0], _y = arguments[1];\r\n\t\t\tthis.x = _x;\r\n\t\t\tthis.y = _y;\r\n\t\t\tthis.w = 1.0;\r\n\t\t} else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\r\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\r\n\t\t\tthis.x = p1.y * p2.w - p2.y * p1.w;\r\n\t\t\tthis.y = p2.x * p1.w - p1.x * p2.w;\r\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\r\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\r\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\r\n\t\t\tthis.x = p1.y - p2.y;\r\n\t\t\tthis.y = p2.x - p1.x;\r\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\r\n\t\t}\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet _x = arguments[0], _y = arguments[1], _w = arguments[2];\r\n\t\tthis.x = _x;\r\n\t\tthis.y = _y;\r\n\t\tthis.w = _w;\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\r\n\t\tvar px = p1.y - p2.y;\r\n\t\tvar py = p2.x - p1.x;\r\n\t\tvar pw = p1.x * p2.y - p2.x * p1.y;\r\n\t\tvar qx = q1.y - q2.y;\r\n\t\tvar qy = q2.x - q1.x;\r\n\t\tvar qw = q1.x * q2.y - q2.x * q1.y;\r\n\t\tthis.x = py * qw - qy * pw;\r\n\t\tthis.y = qx * pw - px * qw;\r\n\t\tthis.w = px * qy - qx * py;\r\n\t}\r\n}\r\nextend(HCoordinate.prototype, {\r\n\tgetY: function () {\r\n\t\tvar a = this.y / this.w;\r\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\r\n\t\t\tthrow new NotRepresentableException();\r\n\t\t}\r\n\t\treturn a;\r\n\t},\r\n\tgetX: function () {\r\n\t\tvar a = this.x / this.w;\r\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\r\n\t\t\tthrow new NotRepresentableException();\r\n\t\t}\r\n\t\treturn a;\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\tvar p = new Coordinate();\r\n\t\tp.x = this.getX();\r\n\t\tp.y = this.getY();\r\n\t\treturn p;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn HCoordinate;\r\n\t}\r\n});\r\nHCoordinate.intersection = function (p1, p2, q1, q2) {\r\n\tvar px = p1.y - p2.y;\r\n\tvar py = p2.x - p1.x;\r\n\tvar pw = p1.x * p2.y - p2.x * p1.y;\r\n\tvar qx = q1.y - q2.y;\r\n\tvar qy = q2.x - q1.x;\r\n\tvar qw = q1.x * q2.y - q2.x * q1.y;\r\n\tvar x = py * qw - qy * pw;\r\n\tvar y = qx * pw - px * qw;\r\n\tvar w = px * qy - qx * py;\r\n\tvar xInt = x / w;\r\n\tvar yInt = y / w;\r\n\tif (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\r\n\t\tthrow new NotRepresentableException();\r\n\t}\r\n\treturn new Coordinate(xInt, yInt);\r\n};\r\n","import hasInterface from '../../../../hasInterface';\r\nimport extend from '../../../../extend';\r\nimport CoordinateSequence from './CoordinateSequence';\r\nexport default function CoordinateSequenceFactory() {}\r\nextend(CoordinateSequenceFactory.prototype, {\r\n\tcreate: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Array) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\r\n\t\t\t\tlet coordSeq = arguments[0];\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet size = arguments[0], dimension = arguments[1];\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateSequenceFactory;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nexport default function GeometryComponentFilter() {}\r\nextend(GeometryComponentFilter.prototype, {\r\n\tfilter: function (geom) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryComponentFilter;\r\n\t}\r\n});\r\n","import Comparable from '../../../../java/lang/Comparable';\r\nimport Cloneable from '../../../../java/lang/Cloneable';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport Serializable from '../../../../java/io/Serializable';\r\nimport GeometryComponentFilter from './GeometryComponentFilter';\r\nimport Envelope from './Envelope';\r\nimport Assert from '../util/Assert';\r\nimport extend from '../../../../extend';\r\nimport inherits from '../../../../inherits';\r\nexport default function Geometry() {\r\n\tthis.envelope = null;\r\n\tthis.factory = null;\r\n\tthis.SRID = null;\r\n\tthis.userData = null;\r\n\tlet factory = arguments[0];\r\n\tthis.factory = factory;\r\n\tthis.SRID = factory.getSRID();\r\n}\r\nextend(Geometry.prototype, {\r\n\tisGeometryCollection: function () {\r\n\t\treturn this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION;\r\n\t},\r\n\tgetFactory: function () {\r\n\t\treturn this.factory;\r\n\t},\r\n\tgetGeometryN: function (n) {\r\n\t\treturn this;\r\n\t},\r\n\tgetArea: function () {\r\n\t\treturn 0.0;\r\n\t},\r\n\tisRectangle: function () {\r\n\t\treturn false;\r\n\t},\r\n\tequals: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Geometry) {\r\n\t\t\t\tlet g = arguments[0];\r\n\t\t\t\tif (g === null) return false;\r\n\t\t\t\treturn this.equalsTopo(g);\r\n\t\t\t} else if (arguments[0] instanceof Object) {\r\n\t\t\t\tlet o = arguments[0];\r\n\t\t\t\tif (!(o instanceof Geometry)) return false;\r\n\t\t\t\tvar g = o;\r\n\t\t\t\treturn this.equalsExact(g);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tequalsExact: function (other) {\r\n\t\treturn this === other || this.equalsExact(other, 0);\r\n\t},\r\n\tgeometryChanged: function () {\r\n\t\tthis.apply(Geometry.geometryChangedFilter);\r\n\t},\r\n\tgeometryChangedAction: function () {\r\n\t\tthis.envelope = null;\r\n\t},\r\n\tequalsNorm: function (g) {\r\n\t\tif (g === null) return false;\r\n\t\treturn this.norm().equalsExact(g.norm());\r\n\t},\r\n\tgetLength: function () {\r\n\t\treturn 0.0;\r\n\t},\r\n\tgetNumGeometries: function () {\r\n\t\treturn 1;\r\n\t},\r\n\tcompareTo: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet o = arguments[0];\r\n\t\t\tvar other = o;\r\n\t\t\tif (this.getSortIndex() !== other.getSortIndex()) {\r\n\t\t\t\treturn this.getSortIndex() - other.getSortIndex();\r\n\t\t\t}\r\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (other.isEmpty()) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\treturn this.compareToSameClass(o);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet o = arguments[0], comp = arguments[1];\r\n\t\t\tvar other = o;\r\n\t\t\tif (this.getSortIndex() !== other.getSortIndex()) {\r\n\t\t\t\treturn this.getSortIndex() - other.getSortIndex();\r\n\t\t\t}\r\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (other.isEmpty()) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\treturn this.compareToSameClass(o, comp);\r\n\t\t}\r\n\t},\r\n\tgetUserData: function () {\r\n\t\treturn this.userData;\r\n\t},\r\n\tgetSRID: function () {\r\n\t\treturn this.SRID;\r\n\t},\r\n\tgetEnvelope: function () {\r\n\t\treturn this.getFactory().toGeometry(this.getEnvelopeInternal());\r\n\t},\r\n\tcheckNotGeometryCollection: function (g) {\r\n\t\tif (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\r\n\t\t\tthrow new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\r\n\t\t}\r\n\t},\r\n\tequal: function (a, b, tolerance) {\r\n\t\tif (tolerance === 0) {\r\n\t\t\treturn a.equals(b);\r\n\t\t}\r\n\t\treturn a.distance(b) <= tolerance;\r\n\t},\r\n\tnorm: function () {\r\n\t\tvar copy = this.copy();\r\n\t\tcopy.normalize();\r\n\t\treturn copy;\r\n\t},\r\n\tgetPrecisionModel: function () {\r\n\t\treturn this.factory.getPrecisionModel();\r\n\t},\r\n\tgetEnvelopeInternal: function () {\r\n\t\tif (this.envelope === null) {\r\n\t\t\tthis.envelope = this.computeEnvelopeInternal();\r\n\t\t}\r\n\t\treturn new Envelope(this.envelope);\r\n\t},\r\n\tsetSRID: function (SRID) {\r\n\t\tthis.SRID = SRID;\r\n\t},\r\n\tsetUserData: function (userData) {\r\n\t\tthis.userData = userData;\r\n\t},\r\n\tcompare: function (a, b) {\r\n\t\tvar i = a.iterator();\r\n\t\tvar j = b.iterator();\r\n\t\twhile (i.hasNext() && j.hasNext()) {\r\n\t\t\tvar aElement = i.next();\r\n\t\t\tvar bElement = j.next();\r\n\t\t\tvar comparison = aElement.compareTo(bElement);\r\n\t\t\tif (comparison !== 0) {\r\n\t\t\t\treturn comparison;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (i.hasNext()) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\tif (j.hasNext()) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\thashCode: function () {\r\n\t\treturn this.getEnvelopeInternal().hashCode();\r\n\t},\r\n\tisGeometryCollectionOrDerived: function () {\r\n\t\tif (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Cloneable, Comparable, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Geometry;\r\n\t}\r\n});\r\nGeometry.hasNonEmptyElements = function (geometries) {\r\n\tfor (var i = 0; i < geometries.length; i++) {\r\n\t\tif (!geometries[i].isEmpty()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\nGeometry.hasNullElements = function (array) {\r\n\tfor (var i = 0; i < array.length; i++) {\r\n\t\tif (array[i] === null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\nGeometry.serialVersionUID = 8763622679187376702;\r\nGeometry.SORTINDEX_POINT = 0;\r\nGeometry.SORTINDEX_MULTIPOINT = 1;\r\nGeometry.SORTINDEX_LINESTRING = 2;\r\nGeometry.SORTINDEX_LINEARRING = 3;\r\nGeometry.SORTINDEX_MULTILINESTRING = 4;\r\nGeometry.SORTINDEX_POLYGON = 5;\r\nGeometry.SORTINDEX_MULTIPOLYGON = 6;\r\nGeometry.SORTINDEX_GEOMETRYCOLLECTION = 7;\r\nGeometry.geometryChangedFilter = {\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryComponentFilter];\r\n\t},\r\n\tfilter: function (geom) {\r\n\t\tgeom.geometryChangedAction();\r\n\t}\r\n};\r\n","import extend from '../../../../extend';\r\nexport default function CoordinateFilter() {}\r\nextend(CoordinateFilter.prototype, {\r\n\tfilter: function (coord) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateFilter;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nexport default function BoundaryNodeRule() {}\r\nextend(BoundaryNodeRule.prototype, {\r\n\tisInBoundary: function (boundaryCount) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BoundaryNodeRule;\r\n\t}\r\n});\r\nfunction Mod2BoundaryNodeRule() {}\r\nextend(Mod2BoundaryNodeRule.prototype, {\r\n\tisInBoundary: function (boundaryCount) {\r\n\t\treturn boundaryCount % 2 === 1;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [BoundaryNodeRule];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Mod2BoundaryNodeRule;\r\n\t}\r\n});\r\nfunction EndPointBoundaryNodeRule() {}\r\nextend(EndPointBoundaryNodeRule.prototype, {\r\n\tisInBoundary: function (boundaryCount) {\r\n\t\treturn boundaryCount > 0;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [BoundaryNodeRule];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EndPointBoundaryNodeRule;\r\n\t}\r\n});\r\nfunction MultiValentEndPointBoundaryNodeRule() {}\r\nextend(MultiValentEndPointBoundaryNodeRule.prototype, {\r\n\tisInBoundary: function (boundaryCount) {\r\n\t\treturn boundaryCount > 1;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [BoundaryNodeRule];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MultiValentEndPointBoundaryNodeRule;\r\n\t}\r\n});\r\nfunction MonoValentEndPointBoundaryNodeRule() {}\r\nextend(MonoValentEndPointBoundaryNodeRule.prototype, {\r\n\tisInBoundary: function (boundaryCount) {\r\n\t\treturn boundaryCount === 1;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [BoundaryNodeRule];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MonoValentEndPointBoundaryNodeRule;\r\n\t}\r\n});\r\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule;\r\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule;\r\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule;\r\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule;\r\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule();\r\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule();\r\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule();\r\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule();\r\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\r\n","import CoordinateList from './CoordinateList';\r\nimport Coordinate from './Coordinate';\r\nimport extend from '../../../../extend';\r\nimport MathUtil from '../math/MathUtil';\r\nimport System from '../../../../java/lang/System';\r\nimport Comparator from '../../../../java/util/Comparator';\r\nimport Envelope from './Envelope';\r\nexport default function CoordinateArrays() {}\r\nextend(CoordinateArrays.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateArrays;\r\n\t}\r\n});\r\nCoordinateArrays.isRing = function (pts) {\r\n\tif (pts.length < 4) return false;\r\n\tif (!pts[0].equals2D(pts[pts.length - 1])) return false;\r\n\treturn true;\r\n};\r\nCoordinateArrays.ptNotInList = function (testPts, pts) {\r\n\tfor (var i = 0; i < testPts.length; i++) {\r\n\t\tvar testPt = testPts[i];\r\n\t\tif (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt;\r\n\t}\r\n\treturn null;\r\n};\r\nCoordinateArrays.scroll = function (coordinates, firstCoordinate) {\r\n\tvar i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\r\n\tif (i < 0) return null;\r\n\tvar newCoordinates = new Array(coordinates.length).fill(null);\r\n\tSystem.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\r\n\tSystem.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\r\n\tSystem.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\r\n};\r\nCoordinateArrays.equals = function () {\r\n\tif (arguments.length === 2) {\r\n\t\tlet coord1 = arguments[0], coord2 = arguments[1];\r\n\t\tif (coord1 === coord2) return true;\r\n\t\tif (coord1 === null || coord2 === null) return false;\r\n\t\tif (coord1.length !== coord2.length) return false;\r\n\t\tfor (var i = 0; i < coord1.length; i++) {\r\n\t\t\tif (!coord1[i].equals(coord2[i])) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2];\r\n\t\tif (coord1 === coord2) return true;\r\n\t\tif (coord1 === null || coord2 === null) return false;\r\n\t\tif (coord1.length !== coord2.length) return false;\r\n\t\tfor (var i = 0; i < coord1.length; i++) {\r\n\t\t\tif (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n};\r\nCoordinateArrays.intersection = function (coordinates, env) {\r\n\tvar coordList = new CoordinateList();\r\n\tfor (var i = 0; i < coordinates.length; i++) {\r\n\t\tif (env.intersects(coordinates[i])) coordList.add(coordinates[i], true);\r\n\t}\r\n\treturn coordList.toCoordinateArray();\r\n};\r\nCoordinateArrays.hasRepeatedPoints = function (coord) {\r\n\tfor (var i = 1; i < coord.length; i++) {\r\n\t\tif (coord[i - 1].equals(coord[i])) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\nCoordinateArrays.removeRepeatedPoints = function (coord) {\r\n\tif (!CoordinateArrays.hasRepeatedPoints(coord)) return coord;\r\n\tvar coordList = new CoordinateList(coord, false);\r\n\treturn coordList.toCoordinateArray();\r\n};\r\nCoordinateArrays.reverse = function (coord) {\r\n\tvar last = coord.length - 1;\r\n\tvar mid = Math.trunc(last / 2);\r\n\tfor (var i = 0; i <= mid; i++) {\r\n\t\tvar tmp = coord[i];\r\n\t\tcoord[i] = coord[last - i];\r\n\t\tcoord[last - i] = tmp;\r\n\t}\r\n};\r\nCoordinateArrays.removeNull = function (coord) {\r\n\tvar nonNull = 0;\r\n\tfor (var i = 0; i < coord.length; i++) {\r\n\t\tif (coord[i] !== null) nonNull++;\r\n\t}\r\n\tvar newCoord = new Array(nonNull).fill(null);\r\n\tif (nonNull === 0) return newCoord;\r\n\tvar j = 0;\r\n\tfor (var i = 0; i < coord.length; i++) {\r\n\t\tif (coord[i] !== null) newCoord[j++] = coord[i];\r\n\t}\r\n\treturn newCoord;\r\n};\r\nCoordinateArrays.copyDeep = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet coordinates = arguments[0];\r\n\t\tvar copy = new Array(coordinates.length).fill(null);\r\n\t\tfor (var i = 0; i < coordinates.length; i++) {\r\n\t\t\tcopy[i] = new Coordinate(coordinates[i]);\r\n\t\t}\r\n\t\treturn copy;\r\n\t} else if (arguments.length === 5) {\r\n\t\tlet src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4];\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tdest[destStart + i] = new Coordinate(src[srcStart + i]);\r\n\t\t}\r\n\t}\r\n};\r\nCoordinateArrays.isEqualReversed = function (pts1, pts2) {\r\n\tfor (var i = 0; i < pts1.length; i++) {\r\n\t\tvar p1 = pts1[i];\r\n\t\tvar p2 = pts2[pts1.length - i - 1];\r\n\t\tif (p1.compareTo(p2) !== 0) return false;\r\n\t}\r\n\treturn true;\r\n};\r\nCoordinateArrays.envelope = function (coordinates) {\r\n\tvar env = new Envelope();\r\n\tfor (var i = 0; i < coordinates.length; i++) {\r\n\t\tenv.expandToInclude(coordinates[i]);\r\n\t}\r\n\treturn env;\r\n};\r\nCoordinateArrays.toCoordinateArray = function (coordList) {\r\n\treturn coordList.toArray(CoordinateArrays.coordArrayType);\r\n};\r\nCoordinateArrays.atLeastNCoordinatesOrNothing = function (n, c) {\r\n\treturn c.length >= n ? c : [];\r\n};\r\nCoordinateArrays.indexOf = function (coordinate, coordinates) {\r\n\tfor (var i = 0; i < coordinates.length; i++) {\r\n\t\tif (coordinate.equals(coordinates[i])) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n};\r\nCoordinateArrays.increasingDirection = function (pts) {\r\n\tfor (var i = 0; i < Math.trunc(pts.length / 2); i++) {\r\n\t\tvar j = pts.length - 1 - i;\r\n\t\tvar comp = pts[i].compareTo(pts[j]);\r\n\t\tif (comp !== 0) return comp;\r\n\t}\r\n\treturn 1;\r\n};\r\nCoordinateArrays.compare = function (pts1, pts2) {\r\n\tvar i = 0;\r\n\twhile (i < pts1.length && i < pts2.length) {\r\n\t\tvar compare = pts1[i].compareTo(pts2[i]);\r\n\t\tif (compare !== 0) return compare;\r\n\t\ti++;\r\n\t}\r\n\tif (i < pts2.length) return -1;\r\n\tif (i < pts1.length) return 1;\r\n\treturn 0;\r\n};\r\nCoordinateArrays.minCoordinate = function (coordinates) {\r\n\tvar minCoord = null;\r\n\tfor (var i = 0; i < coordinates.length; i++) {\r\n\t\tif (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\r\n\t\t\tminCoord = coordinates[i];\r\n\t\t}\r\n\t}\r\n\treturn minCoord;\r\n};\r\nCoordinateArrays.extract = function (pts, start, end) {\r\n\tstart = MathUtil.clamp(start, 0, pts.length);\r\n\tend = MathUtil.clamp(end, -1, pts.length);\r\n\tvar npts = end - start + 1;\r\n\tif (end < 0) npts = 0;\r\n\tif (start >= pts.length) npts = 0;\r\n\tif (end < start) npts = 0;\r\n\tvar extractPts = new Array(npts).fill(null);\r\n\tif (npts === 0) return extractPts;\r\n\tvar iPts = 0;\r\n\tfor (var i = start; i <= end; i++) {\r\n\t\textractPts[iPts++] = pts[i];\r\n\t}\r\n\treturn extractPts;\r\n};\r\nfunction ForwardComparator() {}\r\nextend(ForwardComparator.prototype, {\r\n\tcompare: function (o1, o2) {\r\n\t\tvar pts1 = o1;\r\n\t\tvar pts2 = o2;\r\n\t\treturn CoordinateArrays.compare(pts1, pts2);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ForwardComparator;\r\n\t}\r\n});\r\nfunction BidirectionalComparator() {}\r\nextend(BidirectionalComparator.prototype, {\r\n\tcompare: function (o1, o2) {\r\n\t\tvar pts1 = o1;\r\n\t\tvar pts2 = o2;\r\n\t\tif (pts1.length < pts2.length) return -1;\r\n\t\tif (pts1.length > pts2.length) return 1;\r\n\t\tif (pts1.length === 0) return 0;\r\n\t\tvar forwardComp = CoordinateArrays.compare(pts1, pts2);\r\n\t\tvar isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\r\n\t\tif (isEqualRev) return 0;\r\n\t\treturn forwardComp;\r\n\t},\r\n\tOLDcompare: function (o1, o2) {\r\n\t\tvar pts1 = o1;\r\n\t\tvar pts2 = o2;\r\n\t\tif (pts1.length < pts2.length) return -1;\r\n\t\tif (pts1.length > pts2.length) return 1;\r\n\t\tif (pts1.length === 0) return 0;\r\n\t\tvar dir1 = CoordinateArrays.increasingDirection(pts1);\r\n\t\tvar dir2 = CoordinateArrays.increasingDirection(pts2);\r\n\t\tvar i1 = dir1 > 0 ? 0 : pts1.length - 1;\r\n\t\tvar i2 = dir2 > 0 ? 0 : pts1.length - 1;\r\n\t\tfor (var i = 0; i < pts1.length; i++) {\r\n\t\t\tvar comparePt = pts1[i1].compareTo(pts2[i2]);\r\n\t\t\tif (comparePt !== 0) return comparePt;\r\n\t\t\ti1 += dir1;\r\n\t\t\ti2 += dir2;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BidirectionalComparator;\r\n\t}\r\n});\r\nCoordinateArrays.ForwardComparator = ForwardComparator;\r\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator;\r\nCoordinateArrays.coordArrayType = new Array(0).fill(null);\r\n","/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\r\n *\r\n * @constructor\r\n * @private\r\n */\r\nexport default function Map() {};\r\n\r\n\r\n/**\r\n * Returns the value to which the specified key is mapped, or null if this map\r\n * contains no mapping for the key.\r\n * @param {Object} key\r\n * @return {Object}\r\n */\r\nMap.prototype.get = function() {};\r\n\r\n\r\n/**\r\n * Associates the specified value with the specified key in this map (optional\r\n * operation).\r\n * @param {Object} key\r\n * @param {Object} value\r\n * @return {Object}\r\n */\r\nMap.prototype.put = function() {};\r\n\r\n\r\n/**\r\n * Returns the number of key-value mappings in this map.\r\n * @return {number}\r\n */\r\nMap.prototype.size = function() {};\r\n\r\n\r\n/**\r\n * Returns a Collection view of the values contained in this map.\r\n * @return {javascript.util.Collection}\r\n */\r\nMap.prototype.values = function() {};\r\n\r\n/**\r\n * Returns a {@link Set} view of the mappings contained in this map.\r\n * The set is backed by the map, so changes to the map are\r\n * reflected in the set, and vice-versa.  If the map is modified\r\n * while an iteration over the set is in progress (except through\r\n * the iterator's own <tt>remove</tt> operation, or through the\r\n * <tt>setValue</tt> operation on a map entry returned by the\r\n * iterator) the results of the iteration are undefined.  The set\r\n * supports element removal, which removes the corresponding\r\n * mapping from the map, via the <tt>Iterator.remove</tt>,\r\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\r\n * <tt>clear</tt> operations.  It does not support the\r\n * <tt>add</tt> or <tt>addAll</tt> operations.\r\n *\r\n * @return {Set} a set view of the mappings contained in this map\r\n */\r\nMap.prototype.entrySet = function() {};\r\n","import Map from './Map'\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\r\n *\r\n * @extends {Map}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function SortedMap() {};\r\nSortedMap.prototype = new Map();\r\n","import Collection from './Collection'\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\r\n *\r\n * @extends {Collection}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function Set() {};\r\nSet.prototype = new Collection();\r\n\r\n\r\n/**\r\n * Returns true if this set contains the specified element. More formally,\r\n * returns true if and only if this set contains an element e such that (o==null ?\r\n * e==null : o.equals(e)).\r\n * @param {Object} e\r\n * @return {boolean}\r\n */\r\nSet.prototype.contains = function() {};\r\n","import Collection from './Collection'\r\nimport Iterator from './Iterator'\r\nimport NoSuchElementException from './NoSuchElementException'\r\nimport OperationNotSupported from './OperationNotSupported'\r\nimport Set from './Set'\r\n\r\n/**\r\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\r\n *\r\n * @extends {javascript.util.Set}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function HashSet() {\r\n  /**\r\n   * @type {Array}\r\n   * @private\r\n  */\r\n  this.array_ = [];\r\n\r\n  if (arguments[0] instanceof Collection) {\r\n    this.addAll(arguments[0]);\r\n  }\r\n};\r\nHashSet.prototype = new Set();\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nHashSet.prototype.contains = function(o) {\r\n  for (var i = 0, len = this.array_.length; i < len; i++) {\r\n    var e = this.array_[i];\r\n    if (e === o) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nHashSet.prototype.add = function(o) {\r\n  if (this.contains(o)) {\r\n    return false;\r\n  }\r\n\r\n  this.array_.push(o);\r\n\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nHashSet.prototype.addAll = function(c) {\r\n  for (var i = c.iterator(); i.hasNext();) {\r\n    this.add(i.next());\r\n  }\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nHashSet.prototype.remove = function(o) {\r\n  throw new javascript.util.OperationNotSupported();\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nHashSet.prototype.size = function() {\r\n  return this.array_.length;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nHashSet.prototype.isEmpty = function() {\r\n  return this.array_.length === 0;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nHashSet.prototype.toArray = function() {\r\n  var array = [];\r\n\r\n  for (var i = 0, len = this.array_.length; i < len; i++) {\r\n    array.push(this.array_[i]);\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nHashSet.prototype.iterator = function() {\r\n  return new Iterator_(this);\r\n};\r\n\r\n\r\n\r\n/**\r\n * @extends {Iterator}\r\n * @param {HashSet} hashSet\r\n * @constructor\r\n * @private\r\n */\r\nvar Iterator_ = function(hashSet) {\r\n  /**\r\n   * @type {HashSet}\r\n   * @private\r\n   */\r\n  this.hashSet_ = hashSet;\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.position_ = 0;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nIterator_.prototype.next = function() {\r\n  if (this.position_ === this.hashSet_.size()) {\r\n    throw new NoSuchElementException();\r\n  }\r\n  return this.hashSet_.array_[this.position_++];\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nIterator_.prototype.hasNext = function() {\r\n  if (this.position_ < this.hashSet_.size()) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nIterator_.prototype.remove = function() {\r\n  throw new OperationNotSupported();\r\n};\r\n","import ArrayList from './ArrayList'\r\nimport SortedMap from './SortedMap'\r\nimport HashSet from './HashSet'\r\n\r\nconst BLACK = 0\r\nconst RED = 1\r\nfunction colorOf (p) { return (p == null ? BLACK : p.color) }\r\nfunction parentOf (p) { return (p == null ? null : p.parent) }\r\nfunction setColor (p, c) { if (p !== null) p.color = c }\r\nfunction leftOf (p) { return (p == null ? null : p.left) }\r\nfunction rightOf (p) { return (p == null ? null : p.right) }\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\r\n *\r\n * @extends {SortedMap}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function TreeMap() {\r\n  /**\r\n   * @type {Object}\r\n   * @private\r\n   */\r\n  this.root_ = null;\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n  */\r\n  this.size_ = 0;\r\n};\r\nTreeMap.prototype = new SortedMap();\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeMap.prototype.get = function(key) {\r\n  var p = this.root_;\r\n  while (p !== null) {\r\n    var cmp = key['compareTo'](p.key);\r\n    if (cmp < 0) {\r\n      p = p.left;\r\n    } else if (cmp > 0) {\r\n      p = p.right;\r\n    } else {\r\n      return p.value;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeMap.prototype.put = function(key, value) {\r\n  if (this.root_ === null) {\r\n    this.root_ = {\r\n      key: key,\r\n      value: value,\r\n      left: null,\r\n      right: null,\r\n      parent: null,\r\n      color: BLACK,\r\n      getValue() { return this.value },\r\n      getKey() { return this.key }\r\n    };\r\n    this.size_ = 1;\r\n    return null;\r\n  }\r\n  var t = this.root_, parent, cmp;\r\n  do {\r\n    parent = t;\r\n    cmp = key['compareTo'](t.key);\r\n    if (cmp < 0) {\r\n      t = t.left;\r\n    } else if (cmp > 0) {\r\n      t = t.right;\r\n    } else {\r\n      var oldValue = t.value;\r\n      t.value = value;\r\n      return oldValue;\r\n    }\r\n  } while (t !== null);\r\n  var e = {\r\n    key: key,\r\n    left: null,\r\n    right: null,\r\n    value: value,\r\n    parent: parent,\r\n    color: BLACK,\r\n    getValue() { return this.value },\r\n    getKey() { return this.key }\r\n  };\r\n  if (cmp < 0) {\r\n    parent.left = e;\r\n  } else {\r\n    parent.right = e;\r\n  }\r\n  this.fixAfterInsertion(e);\r\n  this.size_++;\r\n  return null;\r\n};\r\n\r\n\r\n/**\r\n * @param {Object} x\r\n */\r\nTreeMap.prototype.fixAfterInsertion = function(x) {\r\n  x.color = RED;\r\n  while (x != null && x != this.root_ && x.parent.color == RED) {\r\n    if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {\r\n      var y = rightOf(parentOf(parentOf(x)));\r\n      if (colorOf(y) == RED) {\r\n        setColor(parentOf(x), BLACK);\r\n        setColor(y, BLACK);\r\n        setColor(parentOf(parentOf(x)), RED);\r\n        x = parentOf(parentOf(x));\r\n      } else {\r\n        if (x == rightOf(parentOf(x))) {\r\n          x = parentOf(x);\r\n          this.rotateLeft(x);\r\n        }\r\n        setColor(parentOf(x), BLACK);\r\n        setColor(parentOf(parentOf(x)), RED);\r\n        this.rotateRight(parentOf(parentOf(x)));\r\n      }\r\n    } else {\r\n      var y = leftOf(parentOf(parentOf(x)));\r\n      if (colorOf(y) == RED) {\r\n        setColor(parentOf(x), BLACK);\r\n        setColor(y, BLACK);\r\n        setColor(parentOf(parentOf(x)), RED);\r\n        x = parentOf(parentOf(x));\r\n      } else {\r\n        if (x == leftOf(parentOf(x))) {\r\n          x = parentOf(x);\r\n          this.rotateRight(x);\r\n        }\r\n        setColor(parentOf(x), BLACK);\r\n        setColor(parentOf(parentOf(x)), RED);\r\n        this.rotateLeft(parentOf(parentOf(x)));\r\n      }\r\n    }\r\n  }\r\n  this.root_.color = BLACK;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeMap.prototype.values = function() {\r\n  var arrayList = new ArrayList();\r\n  var p = this.getFirstEntry();\r\n  if (p !== null) {\r\n    arrayList.add(p.value);\r\n    while ((p = TreeMap.successor(p)) !== null) {\r\n      arrayList.add(p.value);\r\n    }\r\n  }\r\n  return arrayList;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeMap.prototype.entrySet = function() {\r\n  var hashSet = new HashSet();\r\n  var p = this.getFirstEntry();\r\n  if (p !== null) {\r\n    hashSet.add(p);\r\n    while ((p = TreeMap.successor(p)) !== null) {\r\n      hashSet.add(p);\r\n    }\r\n  }\r\n  return hashSet;\r\n};\r\n\r\n\r\n/**\r\n * @param {Object} p\r\n */\r\nTreeMap.prototype.rotateLeft = function(p) {\r\n  if (p != null) {\r\n    var r = p.right;\r\n    p.right = r.left;\r\n    if (r.left != null)\r\n      r.left.parent = p;\r\n    r.parent = p.parent;\r\n    if (p.parent == null)\r\n      this.root_ = r;\r\n    else if (p.parent.left == p)\r\n      p.parent.left = r;\r\n    else\r\n      p.parent.right = r;\r\n    r.left = p;\r\n    p.parent = r;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @param {Object} p\r\n */\r\nTreeMap.prototype.rotateRight = function(p) {\r\n  if (p != null) {\r\n    var l = p.left;\r\n    p.left = l.right;\r\n    if (l.right != null) l.right.parent = p;\r\n    l.parent = p.parent;\r\n    if (p.parent == null)\r\n      this.root_ = l;\r\n    else if (p.parent.right == p)\r\n      p.parent.right = l;\r\n    else p.parent.left = l;\r\n    l.right = p;\r\n    p.parent = l;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @return {Object}\r\n */\r\nTreeMap.prototype.getFirstEntry = function() {\r\n  var p = this.root_;\r\n  if (p != null) {\r\n    while (p.left != null) {\r\n      p = p.left;\r\n    }\r\n  }\r\n  return p;\r\n};\r\n\r\n\r\n/**\r\n * @param {Object} t\r\n * @return {Object}\r\n * @private\r\n */\r\nTreeMap.successor = function(t) {\r\n  if (t === null)\r\n    return null;\r\n  else if (t.right !== null) {\r\n    var p = t.right;\r\n    while (p.left !== null) {\r\n      p = p.left;\r\n    }\r\n    return p;\r\n  } else {\r\n    var p = t.parent;\r\n    var ch = t;\r\n    while (p !== null && ch === p.right) {\r\n      ch = p;\r\n      p = p.parent;\r\n    }\r\n    return p;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeMap.prototype.size = function() {\r\n  return this.size_;\r\n};\r\n","import extend from '../../../../extend';\r\nexport default function Lineal() {}\r\nextend(Lineal.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Lineal;\r\n\t}\r\n});\r\n","import Set from './Set'\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\r\n *\r\n * @extends {Set}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function SortedSet() {};\r\nSortedSet.prototype = new Set();\r\n","import Collection from './Collection'\r\nimport Iterator from './Iterator'\r\nimport NoSuchElementException from './NoSuchElementException'\r\nimport OperationNotSupported from './OperationNotSupported'\r\nimport SortedSet from './SortedSet'\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\r\n *\r\n * @extends {SortedSet}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function TreeSet() {\r\n  /**\r\n   * @type {Array}\r\n   * @private\r\n  */\r\n  this.array_ = [];\r\n\r\n  if (arguments[0] instanceof Collection) {\r\n    this.addAll(arguments[0]);\r\n  }\r\n};\r\nTreeSet.prototype = new SortedSet();\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeSet.prototype.contains = function(o) {\r\n  for (var i = 0, len = this.array_.length; i < len; i++) {\r\n    var e = this.array_[i];\r\n    if (e['compareTo'](o) === 0) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeSet.prototype.add = function(o) {\r\n  if (this.contains(o)) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = 0, len = this.array_.length; i < len; i++) {\r\n    var e = this.array_[i];\r\n    if (e['compareTo'](o) === 1) {\r\n      this.array_.splice(i, 0, o);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  this.array_.push(o);\r\n\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeSet.prototype.addAll = function(c) {\r\n  for (var i = c.iterator(); i.hasNext();) {\r\n    this.add(i.next());\r\n  }\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeSet.prototype.remove = function(e) {\r\n  throw new OperationNotSupported();\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeSet.prototype.size = function() {\r\n  return this.array_.length;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeSet.prototype.isEmpty = function() {\r\n  return this.array_.length === 0;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeSet.prototype.toArray = function() {\r\n  var array = [];\r\n\r\n  for (var i = 0, len = this.array_.length; i < len; i++) {\r\n    array.push(this.array_[i]);\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nTreeSet.prototype.iterator = function() {\r\n  return new Iterator_(this);\r\n};\r\n\r\n\r\n\r\n/**\r\n * @extends {javascript.util.Iterator}\r\n * @param {javascript.util.TreeSet} treeSet\r\n * @constructor\r\n * @private\r\n */\r\nvar Iterator_ = function(treeSet) {\r\n  /**\r\n   * @type {javascript.util.TreeSet}\r\n   * @private\r\n   */\r\n  this.treeSet_ = treeSet;\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.position_ = 0;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nIterator_.prototype.next = function() {\r\n  if (this.position_ === this.treeSet_.size()) {\r\n    throw new NoSuchElementException();\r\n  }\r\n  return this.treeSet_.array_[this.position_++];\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nIterator_.prototype.hasNext = function() {\r\n  if (this.position_ < this.treeSet_.size()) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nIterator_.prototype.remove = function() {\r\n  throw new OperationNotSupported();\r\n};\r\n","import ArrayList from './ArrayList'\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\r\n *\r\n * @constructor\r\n * @private\r\n */\r\nexport default function Arrays() {};\r\n\r\n/**\r\n */\r\nArrays.sort = function() {\r\n  var a = arguments[0], i, t, comparator, compare;\r\n  if (arguments.length === 1) {\r\n    compare = function(a, b) {\r\n      return a.compareTo(b);\r\n    }\r\n    a.sort(compare);\r\n    return;\r\n  } else if (arguments.length === 2) {\r\n    comparator = arguments[1];\r\n    compare = function(a, b) {\r\n      return comparator['compare'](a, b);\r\n    };\r\n    a.sort(compare);\r\n  } else if (arguments.length === 3) {\r\n    t = a.slice(arguments[1], arguments[2]);\r\n    t.sort();\r\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\r\n    a.splice(0, a.length);\r\n    for (i = 0; i < r.length; i++) {\r\n      a.push(r[i]);\r\n    }\r\n    return;\r\n  } else if (arguments.length === 4) {\r\n    t = a.slice(arguments[1], arguments[2]);\r\n    comparator = arguments[3];\r\n    compare = function(a, b) {\r\n      return comparator['compare'](a, b);\r\n    };\r\n    t.sort(compare);\r\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\r\n    a.splice(0, a.length);\r\n    for (i = 0; i < r.length; i++) {\r\n      a.push(r[i]);\r\n    }\r\n    return;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @param {Array} array\r\n * @return {ArrayList}\r\n */\r\nArrays.asList = function(array) {\r\n  var arrayList = new ArrayList();\r\n  for (var i = 0, len = array.length; i < len; i++) {\r\n    arrayList.add(array[i]);\r\n  }\r\n  return arrayList;\r\n};\r\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport Character from '../../../../java/lang/Character';\r\nexport default function Dimension() {}\r\nextend(Dimension.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Dimension;\r\n\t}\r\n});\r\nDimension.toDimensionSymbol = function (dimensionValue) {\r\n\tswitch (dimensionValue) {\r\n\t\tcase Dimension.FALSE:\r\n\t\t\treturn Dimension.SYM_FALSE;\r\n\t\tcase Dimension.TRUE:\r\n\t\t\treturn Dimension.SYM_TRUE;\r\n\t\tcase Dimension.DONTCARE:\r\n\t\t\treturn Dimension.SYM_DONTCARE;\r\n\t\tcase Dimension.P:\r\n\t\t\treturn Dimension.SYM_P;\r\n\t\tcase Dimension.L:\r\n\t\t\treturn Dimension.SYM_L;\r\n\t\tcase Dimension.A:\r\n\t\t\treturn Dimension.SYM_A;\r\n\t}\r\n\tthrow new IllegalArgumentException(\"Unknown dimension value: \" + dimensionValue);\r\n};\r\nDimension.toDimensionValue = function (dimensionSymbol) {\r\n\tswitch (Character.toUpperCase(dimensionSymbol)) {\r\n\t\tcase Dimension.SYM_FALSE:\r\n\t\t\treturn Dimension.FALSE;\r\n\t\tcase Dimension.SYM_TRUE:\r\n\t\t\treturn Dimension.TRUE;\r\n\t\tcase Dimension.SYM_DONTCARE:\r\n\t\t\treturn Dimension.DONTCARE;\r\n\t\tcase Dimension.SYM_P:\r\n\t\t\treturn Dimension.P;\r\n\t\tcase Dimension.SYM_L:\r\n\t\t\treturn Dimension.L;\r\n\t\tcase Dimension.SYM_A:\r\n\t\t\treturn Dimension.A;\r\n\t}\r\n\tthrow new IllegalArgumentException(\"Unknown dimension symbol: \" + dimensionSymbol);\r\n};\r\nDimension.P = 0;\r\nDimension.L = 1;\r\nDimension.A = 2;\r\nDimension.FALSE = -1;\r\nDimension.TRUE = -2;\r\nDimension.DONTCARE = -3;\r\nDimension.SYM_FALSE = 'F';\r\nDimension.SYM_TRUE = 'T';\r\nDimension.SYM_DONTCARE = '*';\r\nDimension.SYM_P = '0';\r\nDimension.SYM_L = '1';\r\nDimension.SYM_A = '2';\r\n","import extend from '../../../../extend';\r\nexport default function GeometryFilter() {}\r\nextend(GeometryFilter.prototype, {\r\n\tfilter: function (geom) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryFilter;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nexport default function CoordinateSequenceFilter() {}\r\nextend(CoordinateSequenceFilter.prototype, {\r\n\tfilter: function (seq, i) {},\r\n\tisDone: function () {},\r\n\tisGeometryChanged: function () {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateSequenceFilter;\r\n\t}\r\n});\r\n","import TreeSet from '../../../../java/util/TreeSet';\r\nimport Geometry from './Geometry';\r\nimport Arrays from '../../../../java/util/Arrays';\r\nimport CoordinateFilter from './CoordinateFilter';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport GeometryComponentFilter from './GeometryComponentFilter';\r\nimport Dimension from './Dimension';\r\nimport GeometryFilter from './GeometryFilter';\r\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\r\nimport Envelope from './Envelope';\r\nimport Assert from '../util/Assert';\r\nimport inherits from '../../../../inherits';\r\nexport default function GeometryCollection() {\r\n\tthis.geometries = null;\r\n\tlet geometries = arguments[0], factory = arguments[1];\r\n\tGeometry.call(this, factory);\r\n\tif (geometries === null) {\r\n\t\tgeometries = [];\r\n\t}\r\n\tif (Geometry.hasNullElements(geometries)) {\r\n\t\tthrow new IllegalArgumentException(\"geometries must not contain null elements\");\r\n\t}\r\n\tthis.geometries = geometries;\r\n}\r\ninherits(GeometryCollection, Geometry);\r\nextend(GeometryCollection.prototype, {\r\n\tcomputeEnvelopeInternal: function () {\r\n\t\tvar envelope = new Envelope();\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tenvelope.expandToInclude(this.geometries[i].getEnvelopeInternal());\r\n\t\t}\r\n\t\treturn envelope;\r\n\t},\r\n\tgetGeometryN: function (n) {\r\n\t\treturn this.geometries[n];\r\n\t},\r\n\tgetSortIndex: function () {\r\n\t\treturn Geometry.SORTINDEX_GEOMETRYCOLLECTION;\r\n\t},\r\n\tgetCoordinates: function () {\r\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\r\n\t\tvar k = -1;\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tvar childCoordinates = this.geometries[i].getCoordinates();\r\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\r\n\t\t\t\tk++;\r\n\t\t\t\tcoordinates[k] = childCoordinates[j];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn coordinates;\r\n\t},\r\n\tgetArea: function () {\r\n\t\tvar area = 0.0;\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tarea += this.geometries[i].getArea();\r\n\t\t}\r\n\t\treturn area;\r\n\t},\r\n\tequalsExact: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\r\n\t\t\tif (!this.isEquivalentClass(other)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar otherCollection = other;\r\n\t\t\tif (this.geometries.length !== otherCollection.geometries.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\t\tif (!this.geometries[i].equalsExact(otherCollection.geometries[i], tolerance)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\r\n\t},\r\n\tnormalize: function () {\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tthis.geometries[i].normalize();\r\n\t\t}\r\n\t\tArrays.sort(this.geometries);\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this.geometries[0].getCoordinate();\r\n\t},\r\n\tgetBoundaryDimension: function () {\r\n\t\tvar dimension = Dimension.FALSE;\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tdimension = Math.max(dimension, this.geometries[i].getBoundaryDimension());\r\n\t\t}\r\n\t\treturn dimension;\r\n\t},\r\n\tgetDimension: function () {\r\n\t\tvar dimension = Dimension.FALSE;\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tdimension = Math.max(dimension, this.geometries[i].getDimension());\r\n\t\t}\r\n\t\treturn dimension;\r\n\t},\r\n\tgetLength: function () {\r\n\t\tvar sum = 0.0;\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tsum += this.geometries[i].getLength();\r\n\t\t}\r\n\t\treturn sum;\r\n\t},\r\n\tgetNumPoints: function () {\r\n\t\tvar numPoints = 0;\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tnumPoints += this.geometries[i].getNumPoints();\r\n\t\t}\r\n\t\treturn numPoints;\r\n\t},\r\n\tgetNumGeometries: function () {\r\n\t\treturn this.geometries.length;\r\n\t},\r\n\treverse: function () {\r\n\t\tvar n = this.geometries.length;\r\n\t\tvar revGeoms = new Array(n).fill(null);\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\trevGeoms[i] = this.geometries[i].reverse();\r\n\t\t}\r\n\t\treturn this.getFactory().createGeometryCollection(revGeoms);\r\n\t},\r\n\tcompareToSameClass: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet o = arguments[0];\r\n\t\t\tvar theseElements = new TreeSet(Arrays.asList(this.geometries));\r\n\t\t\tvar otherElements = new TreeSet(Arrays.asList(o.geometries));\r\n\t\t\treturn this.compare(theseElements, otherElements);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet o = arguments[0], comp = arguments[1];\r\n\t\t\tvar gc = o;\r\n\t\t\tvar n1 = this.getNumGeometries();\r\n\t\t\tvar n2 = gc.getNumGeometries();\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (i < n1 && i < n2) {\r\n\t\t\t\tvar thisGeom = this.getGeometryN(i);\r\n\t\t\t\tvar otherGeom = gc.getGeometryN(i);\r\n\t\t\t\tvar holeComp = thisGeom.compareToSameClass(otherGeom, comp);\r\n\t\t\t\tif (holeComp !== 0) return holeComp;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\tif (i < n1) return 1;\r\n\t\t\tif (i < n2) return -1;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t},\r\n\tapply: function () {\r\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\t\tthis.geometries[i].apply(filter);\r\n\t\t\t}\r\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tif (this.geometries.length === 0) return null;\r\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\t\tthis.geometries[i].apply(filter);\r\n\t\t\t\tif (filter.isDone()) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\r\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfilter.filter(this);\r\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\t\tthis.geometries[i].apply(filter);\r\n\t\t\t}\r\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfilter.filter(this);\r\n\t\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\t\tthis.geometries[i].apply(filter);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetBoundary: function () {\r\n\t\tthis.checkNotGeometryCollection(this);\r\n\t\tAssert.shouldNeverReachHere();\r\n\t\treturn null;\r\n\t},\r\n\tclone: function () {\r\n\t\tvar gc = Geometry.prototype.clone.call(this);\r\n\t\tgc.geometries = new Array(this.geometries.length).fill(null);\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tgc.geometries[i] = this.geometries[i].clone();\r\n\t\t}\r\n\t\treturn gc;\r\n\t},\r\n\tgetGeometryType: function () {\r\n\t\treturn \"GeometryCollection\";\r\n\t},\r\n\tcopy: function () {\r\n\t\tvar geometries = new Array(this.geometries.length).fill(null);\r\n\t\tfor (var i = 0; i < geometries.length; i++) {\r\n\t\t\tgeometries[i] = this.geometries[i].copy();\r\n\t\t}\r\n\t\treturn new GeometryCollection(geometries, this.factory);\r\n\t},\r\n\tisEmpty: function () {\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tif (!this.geometries[i].isEmpty()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryCollection;\r\n\t}\r\n});\r\nGeometryCollection.serialVersionUID = -5694727726395021467;\r\n","import Geometry from './Geometry';\r\nimport BoundaryOp from '../operation/BoundaryOp';\r\nimport extend from '../../../../extend';\r\nimport Lineal from './Lineal';\r\nimport GeometryCollection from './GeometryCollection';\r\nimport Dimension from './Dimension';\r\nimport inherits from '../../../../inherits';\r\nexport default function MultiLineString() {\r\n\tlet lineStrings = arguments[0], factory = arguments[1];\r\n\tGeometryCollection.call(this, lineStrings, factory);\r\n}\r\ninherits(MultiLineString, GeometryCollection);\r\nextend(MultiLineString.prototype, {\r\n\tgetSortIndex: function () {\r\n\t\treturn Geometry.SORTINDEX_MULTILINESTRING;\r\n\t},\r\n\tequalsExact: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\r\n\t\t\tif (!this.isEquivalentClass(other)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\r\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\r\n\t},\r\n\tgetBoundaryDimension: function () {\r\n\t\tif (this.isClosed()) {\r\n\t\t\treturn Dimension.FALSE;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\tisClosed: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tif (!this.geometries[i].isClosed()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tgetDimension: function () {\r\n\t\treturn 1;\r\n\t},\r\n\treverse: function () {\r\n\t\tvar nLines = this.geometries.length;\r\n\t\tvar revLines = new Array(nLines).fill(null);\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\trevLines[nLines - 1 - i] = this.geometries[i].reverse();\r\n\t\t}\r\n\t\treturn this.getFactory().createMultiLineString(revLines);\r\n\t},\r\n\tgetBoundary: function () {\r\n\t\treturn new BoundaryOp(this).getBoundary();\r\n\t},\r\n\tgetGeometryType: function () {\r\n\t\treturn \"MultiLineString\";\r\n\t},\r\n\tcopy: function () {\r\n\t\tvar lineStrings = new Array(this.geometries.length).fill(null);\r\n\t\tfor (var i = 0; i < lineStrings.length; i++) {\r\n\t\t\tlineStrings[i] = this.geometries[i].copy();\r\n\t\t}\r\n\t\treturn new MultiLineString(lineStrings, this.factory);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Lineal];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MultiLineString;\r\n\t}\r\n});\r\nMultiLineString.serialVersionUID = 8166665132445433741;\r\n","import LineString from '../geom/LineString';\r\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\r\nimport extend from '../../../../extend';\r\nimport CoordinateArrays from '../geom/CoordinateArrays';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport TreeMap from '../../../../java/util/TreeMap';\r\nimport MultiLineString from '../geom/MultiLineString';\r\nexport default function BoundaryOp() {\r\n\tthis.geom = null;\r\n\tthis.geomFact = null;\r\n\tthis.bnRule = null;\r\n\tthis.endpointMap = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet geom = arguments[0];\r\n\t\tBoundaryOp.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet geom = arguments[0], bnRule = arguments[1];\r\n\t\tthis.geom = geom;\r\n\t\tthis.geomFact = geom.getFactory();\r\n\t\tthis.bnRule = bnRule;\r\n\t}\r\n}\r\nextend(BoundaryOp.prototype, {\r\n\tboundaryMultiLineString: function (mLine) {\r\n\t\tif (this.geom.isEmpty()) {\r\n\t\t\treturn this.getEmptyMultiPoint();\r\n\t\t}\r\n\t\tvar bdyPts = this.computeBoundaryCoordinates(mLine);\r\n\t\tif (bdyPts.length === 1) {\r\n\t\t\treturn this.geomFact.createPoint(bdyPts[0]);\r\n\t\t}\r\n\t\treturn this.geomFact.createMultiPointFromCoords(bdyPts);\r\n\t},\r\n\tgetBoundary: function () {\r\n\t\tif (this.geom instanceof LineString) return this.boundaryLineString(this.geom);\r\n\t\tif (this.geom instanceof MultiLineString) return this.boundaryMultiLineString(this.geom);\r\n\t\treturn this.geom.getBoundary();\r\n\t},\r\n\tboundaryLineString: function (line) {\r\n\t\tif (this.geom.isEmpty()) {\r\n\t\t\treturn this.getEmptyMultiPoint();\r\n\t\t}\r\n\t\tif (line.isClosed()) {\r\n\t\t\tvar closedEndpointOnBoundary = this.bnRule.isInBoundary(2);\r\n\t\t\tif (closedEndpointOnBoundary) {\r\n\t\t\t\treturn line.getStartPoint();\r\n\t\t\t} else {\r\n\t\t\t\treturn this.geomFact.createMultiPoint();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()]);\r\n\t},\r\n\tgetEmptyMultiPoint: function () {\r\n\t\treturn this.geomFact.createMultiPoint();\r\n\t},\r\n\tcomputeBoundaryCoordinates: function (mLine) {\r\n\t\tvar bdyPts = new ArrayList();\r\n\t\tthis.endpointMap = new TreeMap();\r\n\t\tfor (var i = 0; i < mLine.getNumGeometries(); i++) {\r\n\t\t\tvar line = mLine.getGeometryN(i);\r\n\t\t\tif (line.getNumPoints() === 0) continue;\r\n\t\t\tthis.addEndpoint(line.getCoordinateN(0));\r\n\t\t\tthis.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\r\n\t\t}\r\n\t\tfor (var it = this.endpointMap.entrySet().iterator(); it.hasNext(); ) {\r\n\t\t\tvar entry = it.next();\r\n\t\t\tvar counter = entry.getValue();\r\n\t\t\tvar valence = counter.count;\r\n\t\t\tif (this.bnRule.isInBoundary(valence)) {\r\n\t\t\t\tbdyPts.add(entry.getKey());\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn CoordinateArrays.toCoordinateArray(bdyPts);\r\n\t},\r\n\taddEndpoint: function (pt) {\r\n\t\tvar counter = this.endpointMap.get(pt);\r\n\t\tif (counter === null) {\r\n\t\t\tcounter = new Counter();\r\n\t\t\tthis.endpointMap.put(pt, counter);\r\n\t\t}\r\n\t\tcounter.count++;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BoundaryOp;\r\n\t}\r\n});\r\nBoundaryOp.getBoundary = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet g = arguments[0];\r\n\t\tvar bop = new BoundaryOp(g);\r\n\t\treturn bop.getBoundary();\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet g = arguments[0], bnRule = arguments[1];\r\n\t\tvar bop = new BoundaryOp(g, bnRule);\r\n\t\treturn bop.getBoundary();\r\n\t}\r\n};\r\nfunction Counter() {\r\n\tthis.count = null;\r\n}\r\nextend(Counter.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Counter;\r\n\t}\r\n});\r\n","export default function PrintStream () {}\r\n","export default function StringReader () {}\r\n","export default function DecimalFormat () {}\r\n","export default function ByteArrayOutputStream () {}\r\n","export default function IOException () {}\r\n","export default function LineNumberReader () {}\r\n","import PrintStream from '../../../../java/io/PrintStream';\r\nimport StringReader from '../../../../java/io/StringReader';\r\nimport DecimalFormat from '../../../../java/text/DecimalFormat';\r\nimport extend from '../../../../extend';\r\nimport System from '../../../../java/lang/System';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport ByteArrayOutputStream from '../../../../java/io/ByteArrayOutputStream';\r\nimport Assert from './Assert';\r\nimport IOException from '../../../../java/io/IOException';\r\nimport LineNumberReader from '../../../../java/io/LineNumberReader';\r\nexport default function StringUtil() {}\r\nextend(StringUtil.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn StringUtil;\r\n\t}\r\n});\r\nStringUtil.chars = function (c, n) {\r\n\tvar ch = new Array(n).fill(null);\r\n\tfor (var i = 0; i < n; i++) {\r\n\t\tch[i] = c;\r\n\t}\r\n\treturn new String(ch);\r\n};\r\nStringUtil.getStackTrace = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet t = arguments[0];\r\n\t\tvar os = new ByteArrayOutputStream();\r\n\t\tvar ps = new PrintStream(os);\r\n\t\tt.printStackTrace(ps);\r\n\t\treturn os.toString();\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet t = arguments[0], depth = arguments[1];\r\n\t\tvar stackTrace = \"\";\r\n\t\tvar stringReader = new StringReader(StringUtil.getStackTrace(t));\r\n\t\tvar lineNumberReader = new LineNumberReader(stringReader);\r\n\t\tfor (var i = 0; i < depth; i++) {\r\n\t\t\ttry {\r\n\t\t\t\tstackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (e instanceof IOException) {\r\n\t\t\t\t\tAssert.shouldNeverReachHere();\r\n\t\t\t\t} else throw e;\r\n\t\t\t} finally {}\r\n\t\t}\r\n\t\treturn stackTrace;\r\n\t}\r\n};\r\nStringUtil.split = function (s, separator) {\r\n\tvar separatorlen = separator.length;\r\n\tvar tokenList = new ArrayList();\r\n\tvar tmpString = \"\" + s;\r\n\tvar pos = tmpString.indexOf(separator);\r\n\twhile (pos >= 0) {\r\n\t\tvar token = tmpString.substring(0, pos);\r\n\t\ttokenList.add(token);\r\n\t\ttmpString = tmpString.substring(pos + separatorlen);\r\n\t\tpos = tmpString.indexOf(separator);\r\n\t}\r\n\tif (tmpString.length > 0) tokenList.add(tmpString);\r\n\tvar res = new Array(tokenList.size()).fill(null);\r\n\tfor (var i = 0; i < res.length; i++) {\r\n\t\tres[i] = tokenList.get(i);\r\n\t}\r\n\treturn res;\r\n};\r\nStringUtil.toString = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet d = arguments[0];\r\n\t\treturn StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);\r\n\t}\r\n};\r\nStringUtil.spaces = function (n) {\r\n\treturn StringUtil.chars(' ', n);\r\n};\r\nStringUtil.NEWLINE = System.getProperty(\"line.separator\");\r\nStringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat(\"0.#\");\r\n","import StringBuffer from '../../../../java/lang/StringBuffer';\r\nimport StringUtil from '../util/StringUtil';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport CoordinateSequence from './CoordinateSequence';\r\nexport default function CoordinateSequences() {}\r\nextend(CoordinateSequences.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateSequences;\r\n\t}\r\n});\r\nCoordinateSequences.copyCoord = function (src, srcPos, dest, destPos) {\r\n\tvar minDim = Math.min(src.getDimension(), dest.getDimension());\r\n\tfor (var dim = 0; dim < minDim; dim++) {\r\n\t\tdest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\r\n\t}\r\n};\r\nCoordinateSequences.isRing = function (seq) {\r\n\tvar n = seq.size();\r\n\tif (n === 0) return true;\r\n\tif (n <= 3) return false;\r\n\treturn seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\r\n};\r\nCoordinateSequences.isEqual = function (cs1, cs2) {\r\n\tvar cs1Size = cs1.size();\r\n\tvar cs2Size = cs2.size();\r\n\tif (cs1Size !== cs2Size) return false;\r\n\tvar dim = Math.min(cs1.getDimension(), cs2.getDimension());\r\n\tfor (var i = 0; i < cs1Size; i++) {\r\n\t\tfor (var d = 0; d < dim; d++) {\r\n\t\t\tvar v1 = cs1.getOrdinate(i, d);\r\n\t\t\tvar v2 = cs2.getOrdinate(i, d);\r\n\t\t\tif (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue;\r\n\t\t\tif (Double.isNaN(v1) && Double.isNaN(v2)) continue;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n};\r\nCoordinateSequences.extend = function (fact, seq, size) {\r\n\tvar newseq = fact.create(size, seq.getDimension());\r\n\tvar n = seq.size();\r\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\r\n\tif (n > 0) {\r\n\t\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1);\r\n\t}\r\n\treturn newseq;\r\n};\r\nCoordinateSequences.reverse = function (seq) {\r\n\tvar last = seq.size() - 1;\r\n\tvar mid = Math.trunc(last / 2);\r\n\tfor (var i = 0; i <= mid; i++) {\r\n\t\tCoordinateSequences.swap(seq, i, last - i);\r\n\t}\r\n};\r\nCoordinateSequences.swap = function (seq, i, j) {\r\n\tif (i === j) return null;\r\n\tfor (var dim = 0; dim < seq.getDimension(); dim++) {\r\n\t\tvar tmp = seq.getOrdinate(i, dim);\r\n\t\tseq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\r\n\t\tseq.setOrdinate(j, dim, tmp);\r\n\t}\r\n};\r\nCoordinateSequences.copy = function (src, srcPos, dest, destPos, length) {\r\n\tfor (var i = 0; i < length; i++) {\r\n\t\tCoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\r\n\t}\r\n};\r\nCoordinateSequences.toString = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet cs = arguments[0];\r\n\t\tvar size = cs.size();\r\n\t\tif (size === 0) return \"()\";\r\n\t\tvar dim = cs.getDimension();\r\n\t\tvar buf = new StringBuffer();\r\n\t\tbuf.append('(');\r\n\t\tfor (var i = 0; i < size; i++) {\r\n\t\t\tif (i > 0) buf.append(\" \");\r\n\t\t\tfor (var d = 0; d < dim; d++) {\r\n\t\t\t\tif (d > 0) buf.append(\",\");\r\n\t\t\t\tbuf.append(StringUtil.toString(cs.getOrdinate(i, d)));\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuf.append(')');\r\n\t\treturn buf.toString();\r\n\t}\r\n};\r\nCoordinateSequences.ensureValidRing = function (fact, seq) {\r\n\tvar n = seq.size();\r\n\tif (n === 0) return seq;\r\n\tif (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4);\r\n\tvar isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\r\n\tif (isClosed) return seq;\r\n\treturn CoordinateSequences.createClosedRing(fact, seq, n + 1);\r\n};\r\nCoordinateSequences.createClosedRing = function (fact, seq, size) {\r\n\tvar newseq = fact.create(size, seq.getDimension());\r\n\tvar n = seq.size();\r\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\r\n\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1);\r\n\treturn newseq;\r\n};\r\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\r\nimport Geometry from './Geometry';\r\nimport CoordinateFilter from './CoordinateFilter';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport BoundaryOp from '../operation/BoundaryOp';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport Lineal from './Lineal';\r\nimport CoordinateSequences from './CoordinateSequences';\r\nimport GeometryComponentFilter from './GeometryComponentFilter';\r\nimport Dimension from './Dimension';\r\nimport GeometryFilter from './GeometryFilter';\r\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\r\nimport Envelope from './Envelope';\r\nimport inherits from '../../../../inherits';\r\nexport default function LineString() {\r\n\tthis.points = null;\r\n\tlet points = arguments[0], factory = arguments[1];\r\n\tGeometry.call(this, factory);\r\n\tthis.init(points);\r\n}\r\ninherits(LineString, Geometry);\r\nextend(LineString.prototype, {\r\n\tcomputeEnvelopeInternal: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn new Envelope();\r\n\t\t}\r\n\t\treturn this.points.expandEnvelope(new Envelope());\r\n\t},\r\n\tisRing: function () {\r\n\t\treturn this.isClosed() && this.isSimple();\r\n\t},\r\n\tgetSortIndex: function () {\r\n\t\treturn Geometry.SORTINDEX_LINESTRING;\r\n\t},\r\n\tgetCoordinates: function () {\r\n\t\treturn this.points.toCoordinateArray();\r\n\t},\r\n\tequalsExact: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\r\n\t\t\tif (!this.isEquivalentClass(other)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar otherLineString = other;\r\n\t\t\tif (this.points.size() !== otherLineString.points.size()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < this.points.size(); i++) {\r\n\t\t\t\tif (!this.equal(this.points.getCoordinate(i), otherLineString.points.getCoordinate(i), tolerance)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\r\n\t},\r\n\tnormalize: function () {\r\n\t\tfor (var i = 0; i < Math.trunc(this.points.size() / 2); i++) {\r\n\t\t\tvar j = this.points.size() - 1 - i;\r\n\t\t\tif (!this.points.getCoordinate(i).equals(this.points.getCoordinate(j))) {\r\n\t\t\t\tif (this.points.getCoordinate(i).compareTo(this.points.getCoordinate(j)) > 0) {\r\n\t\t\t\t\tCoordinateSequences.reverse(this.points);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\treturn this.points.getCoordinate(0);\r\n\t},\r\n\tgetBoundaryDimension: function () {\r\n\t\tif (this.isClosed()) {\r\n\t\t\treturn Dimension.FALSE;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\tisClosed: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\r\n\t},\r\n\tgetEndPoint: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.getPointN(this.getNumPoints() - 1);\r\n\t},\r\n\tgetDimension: function () {\r\n\t\treturn 1;\r\n\t},\r\n\tgetLength: function () {\r\n\t\treturn CGAlgorithms.computeLength(this.points);\r\n\t},\r\n\tgetNumPoints: function () {\r\n\t\treturn this.points.size();\r\n\t},\r\n\treverse: function () {\r\n\t\tvar seq = this.points.copy();\r\n\t\tCoordinateSequences.reverse(seq);\r\n\t\tvar revLine = this.getFactory().createLineString(seq);\r\n\t\treturn revLine;\r\n\t},\r\n\tcompareToSameClass: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet o = arguments[0];\r\n\t\t\tvar line = o;\r\n\t\t\tvar i = 0;\r\n\t\t\tvar j = 0;\r\n\t\t\twhile (i < this.points.size() && j < line.points.size()) {\r\n\t\t\t\tvar comparison = this.points.getCoordinate(i).compareTo(line.points.getCoordinate(j));\r\n\t\t\t\tif (comparison !== 0) {\r\n\t\t\t\t\treturn comparison;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\tif (i < this.points.size()) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (j < line.points.size()) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet o = arguments[0], comp = arguments[1];\r\n\t\t\tvar line = o;\r\n\t\t\treturn comp.compare(this.points, line.points);\r\n\t\t}\r\n\t},\r\n\tapply: function () {\r\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfor (var i = 0; i < this.points.size(); i++) {\r\n\t\t\t\tfilter.filter(this.points.getCoordinate(i));\r\n\t\t\t}\r\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tif (this.points.size() === 0) return null;\r\n\t\t\tfor (var i = 0; i < this.points.size(); i++) {\r\n\t\t\t\tfilter.filter(this.points, i);\r\n\t\t\t\tif (filter.isDone()) break;\r\n\t\t\t}\r\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\r\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfilter.filter(this);\r\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfilter.filter(this);\r\n\t\t}\r\n\t},\r\n\tgetBoundary: function () {\r\n\t\treturn new BoundaryOp(this).getBoundary();\r\n\t},\r\n\tisEquivalentClass: function (other) {\r\n\t\treturn other instanceof LineString;\r\n\t},\r\n\tclone: function () {\r\n\t\tvar ls = Geometry.prototype.clone.call(this);\r\n\t\tls.points = this.points.clone();\r\n\t\treturn ls;\r\n\t},\r\n\tgetCoordinateN: function (n) {\r\n\t\treturn this.points.getCoordinate(n);\r\n\t},\r\n\tgetGeometryType: function () {\r\n\t\treturn \"LineString\";\r\n\t},\r\n\tcopy: function () {\r\n\t\treturn new LineString(this.points.copy(), this.factory);\r\n\t},\r\n\tgetCoordinateSequence: function () {\r\n\t\treturn this.points;\r\n\t},\r\n\tisEmpty: function () {\r\n\t\treturn this.points.size() === 0;\r\n\t},\r\n\tinit: function (points) {\r\n\t\tif (points === null) {\r\n\t\t\tpoints = this.getFactory().getCoordinateSequenceFactory().create([]);\r\n\t\t}\r\n\t\tif (points.size() === 1) {\r\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LineString (found \" + points.size() + \" - must be 0 or >= 2)\");\r\n\t\t}\r\n\t\tthis.points = points;\r\n\t},\r\n\tisCoordinate: function (pt) {\r\n\t\tfor (var i = 0; i < this.points.size(); i++) {\r\n\t\t\tif (this.points.getCoordinate(i).equals(pt)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tgetStartPoint: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.getPointN(0);\r\n\t},\r\n\tgetPointN: function (n) {\r\n\t\treturn this.getFactory().createPoint(this.points.getCoordinate(n));\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Lineal];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineString;\r\n\t}\r\n});\r\nLineString.serialVersionUID = 3110669828065365560;\r\n","import extend from '../../../../extend';\r\nexport default function Puntal() {}\r\nextend(Puntal.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Puntal;\r\n\t}\r\n});\r\n","import Geometry from './Geometry';\r\nimport CoordinateFilter from './CoordinateFilter';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport extend from '../../../../extend';\r\nimport GeometryComponentFilter from './GeometryComponentFilter';\r\nimport Dimension from './Dimension';\r\nimport GeometryFilter from './GeometryFilter';\r\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\r\nimport Puntal from './Puntal';\r\nimport Envelope from './Envelope';\r\nimport Assert from '../util/Assert';\r\nimport inherits from '../../../../inherits';\r\nexport default function Point() {\r\n\tthis.coordinates = null;\r\n\tlet coordinates = arguments[0], factory = arguments[1];\r\n\tGeometry.call(this, factory);\r\n\tthis.init(coordinates);\r\n}\r\ninherits(Point, Geometry);\r\nextend(Point.prototype, {\r\n\tcomputeEnvelopeInternal: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn new Envelope();\r\n\t\t}\r\n\t\tvar env = new Envelope();\r\n\t\tenv.expandToInclude(this.coordinates.getX(0), this.coordinates.getY(0));\r\n\t\treturn env;\r\n\t},\r\n\tgetSortIndex: function () {\r\n\t\treturn Geometry.SORTINDEX_POINT;\r\n\t},\r\n\tgetCoordinates: function () {\r\n\t\treturn this.isEmpty() ? [] : [this.getCoordinate()];\r\n\t},\r\n\tequalsExact: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\r\n\t\t\tif (!this.isEquivalentClass(other)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (this.isEmpty() !== other.isEmpty()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn this.equal(other.getCoordinate(), this.getCoordinate(), tolerance);\r\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\r\n\t},\r\n\tnormalize: function () {},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.coordinates.size() !== 0 ? this.coordinates.getCoordinate(0) : null;\r\n\t},\r\n\tgetBoundaryDimension: function () {\r\n\t\treturn Dimension.FALSE;\r\n\t},\r\n\tgetDimension: function () {\r\n\t\treturn 0;\r\n\t},\r\n\tgetNumPoints: function () {\r\n\t\treturn this.isEmpty() ? 0 : 1;\r\n\t},\r\n\treverse: function () {\r\n\t\treturn this.copy();\r\n\t},\r\n\tgetX: function () {\r\n\t\tif (this.getCoordinate() === null) {\r\n\t\t\tthrow new IllegalStateException(\"getX called on empty Point\");\r\n\t\t}\r\n\t\treturn this.getCoordinate().x;\r\n\t},\r\n\tcompareToSameClass: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet other = arguments[0];\r\n\t\t\tvar point = other;\r\n\t\t\treturn this.getCoordinate().compareTo(point.getCoordinate());\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet other = arguments[0], comp = arguments[1];\r\n\t\t\tvar point = other;\r\n\t\t\treturn comp.compare(this.coordinates, point.coordinates);\r\n\t\t}\r\n\t},\r\n\tapply: function () {\r\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tfilter.filter(this.getCoordinate());\r\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tif (this.isEmpty()) return null;\r\n\t\t\tfilter.filter(this.coordinates, 0);\r\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\r\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfilter.filter(this);\r\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfilter.filter(this);\r\n\t\t}\r\n\t},\r\n\tgetBoundary: function () {\r\n\t\treturn this.getFactory().createGeometryCollection(null);\r\n\t},\r\n\tclone: function () {\r\n\t\tvar p = Geometry.prototype.clone.call(this);\r\n\t\tp.coordinates = this.coordinates.clone();\r\n\t\treturn p;\r\n\t},\r\n\tgetGeometryType: function () {\r\n\t\treturn \"Point\";\r\n\t},\r\n\tcopy: function () {\r\n\t\treturn new Point(this.coordinates.copy(), this.factory);\r\n\t},\r\n\tgetCoordinateSequence: function () {\r\n\t\treturn this.coordinates;\r\n\t},\r\n\tgetY: function () {\r\n\t\tif (this.getCoordinate() === null) {\r\n\t\t\tthrow new IllegalStateException(\"getY called on empty Point\");\r\n\t\t}\r\n\t\treturn this.getCoordinate().y;\r\n\t},\r\n\tisEmpty: function () {\r\n\t\treturn this.coordinates.size() === 0;\r\n\t},\r\n\tinit: function (coordinates) {\r\n\t\tif (coordinates === null) {\r\n\t\t\tcoordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\r\n\t\t}\r\n\t\tAssert.isTrue(coordinates.size() <= 1);\r\n\t\tthis.coordinates = coordinates;\r\n\t},\r\n\tisSimple: function () {\r\n\t\treturn true;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Puntal];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Point;\r\n\t}\r\n});\r\nPoint.serialVersionUID = 4902022702746614570;\r\n","import extend from '../../../../extend';\r\nexport default function Polygonal() {}\r\nextend(Polygonal.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Polygonal;\r\n\t}\r\n});\r\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\r\nimport Geometry from './Geometry';\r\nimport Arrays from '../../../../java/util/Arrays';\r\nimport CoordinateFilter from './CoordinateFilter';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport System from '../../../../java/lang/System';\r\nimport GeometryComponentFilter from './GeometryComponentFilter';\r\nimport CoordinateArrays from './CoordinateArrays';\r\nimport Polygonal from './Polygonal';\r\nimport GeometryFilter from './GeometryFilter';\r\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\r\nimport inherits from '../../../../inherits';\r\nexport default function Polygon() {\r\n\tthis.shell = null;\r\n\tthis.holes = null;\r\n\tlet shell = arguments[0], holes = arguments[1], factory = arguments[2];\r\n\tGeometry.call(this, factory);\r\n\tif (shell === null) {\r\n\t\tshell = this.getFactory().createLinearRing();\r\n\t}\r\n\tif (holes === null) {\r\n\t\tholes = [];\r\n\t}\r\n\tif (Geometry.hasNullElements(holes)) {\r\n\t\tthrow new IllegalArgumentException(\"holes must not contain null elements\");\r\n\t}\r\n\tif (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\r\n\t\tthrow new IllegalArgumentException(\"shell is empty but holes are not\");\r\n\t}\r\n\tthis.shell = shell;\r\n\tthis.holes = holes;\r\n}\r\ninherits(Polygon, Geometry);\r\nextend(Polygon.prototype, {\r\n\tcomputeEnvelopeInternal: function () {\r\n\t\treturn this.shell.getEnvelopeInternal();\r\n\t},\r\n\tgetSortIndex: function () {\r\n\t\treturn Geometry.SORTINDEX_POLYGON;\r\n\t},\r\n\tgetCoordinates: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\r\n\t\tvar k = -1;\r\n\t\tvar shellCoordinates = this.shell.getCoordinates();\r\n\t\tfor (var x = 0; x < shellCoordinates.length; x++) {\r\n\t\t\tk++;\r\n\t\t\tcoordinates[k] = shellCoordinates[x];\r\n\t\t}\r\n\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\tvar childCoordinates = this.holes[i].getCoordinates();\r\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\r\n\t\t\t\tk++;\r\n\t\t\t\tcoordinates[k] = childCoordinates[j];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn coordinates;\r\n\t},\r\n\tgetArea: function () {\r\n\t\tvar area = 0.0;\r\n\t\tarea += Math.abs(CGAlgorithms.signedArea(this.shell.getCoordinateSequence()));\r\n\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\tarea -= Math.abs(CGAlgorithms.signedArea(this.holes[i].getCoordinateSequence()));\r\n\t\t}\r\n\t\treturn area;\r\n\t},\r\n\tisRectangle: function () {\r\n\t\tif (this.getNumInteriorRing() !== 0) return false;\r\n\t\tif (this.shell === null) return false;\r\n\t\tif (this.shell.getNumPoints() !== 5) return false;\r\n\t\tvar seq = this.shell.getCoordinateSequence();\r\n\t\tvar env = this.getEnvelopeInternal();\r\n\t\tfor (var i = 0; i < 5; i++) {\r\n\t\t\tvar x = seq.getX(i);\r\n\t\t\tif (!(x === env.getMinX() || x === env.getMaxX())) return false;\r\n\t\t\tvar y = seq.getY(i);\r\n\t\t\tif (!(y === env.getMinY() || y === env.getMaxY())) return false;\r\n\t\t}\r\n\t\tvar prevX = seq.getX(0);\r\n\t\tvar prevY = seq.getY(0);\r\n\t\tfor (var i = 1; i <= 4; i++) {\r\n\t\t\tvar x = seq.getX(i);\r\n\t\t\tvar y = seq.getY(i);\r\n\t\t\tvar xChanged = x !== prevX;\r\n\t\t\tvar yChanged = y !== prevY;\r\n\t\t\tif (xChanged === yChanged) return false;\r\n\t\t\tprevX = x;\r\n\t\t\tprevY = y;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tequalsExact: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\r\n\t\t\tif (!this.isEquivalentClass(other)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar otherPolygon = other;\r\n\t\t\tvar thisShell = this.shell;\r\n\t\t\tvar otherPolygonShell = otherPolygon.shell;\r\n\t\t\tif (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.holes.length !== otherPolygon.holes.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\t\tif (!this.holes[i].equalsExact(otherPolygon.holes[i], tolerance)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\r\n\t},\r\n\tnormalize: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tthis.normalize(this.shell, true);\r\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\t\tthis.normalize(this.holes[i], false);\r\n\t\t\t}\r\n\t\t\tArrays.sort(this.holes);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet ring = arguments[0], clockwise = arguments[1];\r\n\t\t\tif (ring.isEmpty()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tvar uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\r\n\t\t\tSystem.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\r\n\t\t\tvar minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\r\n\t\t\tCoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\r\n\t\t\tSystem.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\r\n\t\t\tring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\r\n\t\t\tif (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\r\n\t\t\t\tCoordinateArrays.reverse(ring.getCoordinates());\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.shell.getCoordinate();\r\n\t},\r\n\tgetNumInteriorRing: function () {\r\n\t\treturn this.holes.length;\r\n\t},\r\n\tgetBoundaryDimension: function () {\r\n\t\treturn 1;\r\n\t},\r\n\tgetDimension: function () {\r\n\t\treturn 2;\r\n\t},\r\n\tgetLength: function () {\r\n\t\tvar len = 0.0;\r\n\t\tlen += this.shell.getLength();\r\n\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\tlen += this.holes[i].getLength();\r\n\t\t}\r\n\t\treturn len;\r\n\t},\r\n\tgetNumPoints: function () {\r\n\t\tvar numPoints = this.shell.getNumPoints();\r\n\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\tnumPoints += this.holes[i].getNumPoints();\r\n\t\t}\r\n\t\treturn numPoints;\r\n\t},\r\n\treverse: function () {\r\n\t\tvar poly = this.copy();\r\n\t\tpoly.shell = this.shell.copy().reverse();\r\n\t\tpoly.holes = new Array(this.holes.length).fill(null);\r\n\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\tpoly.holes[i] = this.holes[i].copy().reverse();\r\n\t\t}\r\n\t\treturn poly;\r\n\t},\r\n\tconvexHull: function () {\r\n\t\treturn this.getExteriorRing().convexHull();\r\n\t},\r\n\tcompareToSameClass: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet o = arguments[0];\r\n\t\t\tvar thisShell = this.shell;\r\n\t\t\tvar otherShell = o.shell;\r\n\t\t\treturn thisShell.compareToSameClass(otherShell);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet o = arguments[0], comp = arguments[1];\r\n\t\t\tvar poly = o;\r\n\t\t\tvar thisShell = this.shell;\r\n\t\t\tvar otherShell = poly.shell;\r\n\t\t\tvar shellComp = thisShell.compareToSameClass(otherShell, comp);\r\n\t\t\tif (shellComp !== 0) return shellComp;\r\n\t\t\tvar nHole1 = this.getNumInteriorRing();\r\n\t\t\tvar nHole2 = poly.getNumInteriorRing();\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (i < nHole1 && i < nHole2) {\r\n\t\t\t\tvar thisHole = this.getInteriorRingN(i);\r\n\t\t\t\tvar otherHole = poly.getInteriorRingN(i);\r\n\t\t\t\tvar holeComp = thisHole.compareToSameClass(otherHole, comp);\r\n\t\t\t\tif (holeComp !== 0) return holeComp;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\tif (i < nHole1) return 1;\r\n\t\t\tif (i < nHole2) return -1;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t},\r\n\tapply: function () {\r\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tthis.shell.apply(filter);\r\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\t\tthis.holes[i].apply(filter);\r\n\t\t\t}\r\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tthis.shell.apply(filter);\r\n\t\t\tif (!filter.isDone()) {\r\n\t\t\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\t\t\tthis.holes[i].apply(filter);\r\n\t\t\t\t\tif (filter.isDone()) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\r\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfilter.filter(this);\r\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\r\n\t\t\tlet filter = arguments[0];\r\n\t\t\tfilter.filter(this);\r\n\t\t\tthis.shell.apply(filter);\r\n\t\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\t\tthis.holes[i].apply(filter);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetBoundary: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn this.getFactory().createMultiLineString();\r\n\t\t}\r\n\t\tvar rings = new Array(this.holes.length + 1).fill(null);\r\n\t\trings[0] = this.shell;\r\n\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\trings[i + 1] = this.holes[i];\r\n\t\t}\r\n\t\tif (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());\r\n\t\treturn this.getFactory().createMultiLineString(rings);\r\n\t},\r\n\tclone: function () {\r\n\t\tvar poly = Geometry.prototype.clone.call(this);\r\n\t\tpoly.shell = this.shell.clone();\r\n\t\tpoly.holes = new Array(this.holes.length).fill(null);\r\n\t\tfor (var i = 0; i < this.holes.length; i++) {\r\n\t\t\tpoly.holes[i] = this.holes[i].clone();\r\n\t\t}\r\n\t\treturn poly;\r\n\t},\r\n\tgetGeometryType: function () {\r\n\t\treturn \"Polygon\";\r\n\t},\r\n\tcopy: function () {\r\n\t\tvar shell = this.shell.copy();\r\n\t\tvar holes = new Array(this.holes.length).fill(null);\r\n\t\tfor (var i = 0; i < holes.length; i++) {\r\n\t\t\tholes[i] = this.holes[i].copy();\r\n\t\t}\r\n\t\treturn new Polygon(shell, holes, this.factory);\r\n\t},\r\n\tgetExteriorRing: function () {\r\n\t\treturn this.shell;\r\n\t},\r\n\tisEmpty: function () {\r\n\t\treturn this.shell.isEmpty();\r\n\t},\r\n\tgetInteriorRingN: function (n) {\r\n\t\treturn this.holes[n];\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Polygonal];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Polygon;\r\n\t}\r\n});\r\nPolygon.serialVersionUID = -3494792200821764533;\r\n","import Geometry from './Geometry';\r\nimport extend from '../../../../extend';\r\nimport GeometryCollection from './GeometryCollection';\r\nimport Dimension from './Dimension';\r\nimport Puntal from './Puntal';\r\nimport inherits from '../../../../inherits';\r\nexport default function MultiPoint() {\r\n\tlet points = arguments[0], factory = arguments[1];\r\n\tGeometryCollection.call(this, points, factory);\r\n}\r\ninherits(MultiPoint, GeometryCollection);\r\nextend(MultiPoint.prototype, {\r\n\tgetSortIndex: function () {\r\n\t\treturn Geometry.SORTINDEX_MULTIPOINT;\r\n\t},\r\n\tisValid: function () {\r\n\t\treturn true;\r\n\t},\r\n\tequalsExact: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\r\n\t\t\tif (!this.isEquivalentClass(other)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\r\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet n = arguments[0];\r\n\t\t\treturn this.geometries[n].getCoordinate();\r\n\t\t} else return GeometryCollection.prototype.getCoordinate.apply(this, arguments);\r\n\t},\r\n\tgetBoundaryDimension: function () {\r\n\t\treturn Dimension.FALSE;\r\n\t},\r\n\tgetDimension: function () {\r\n\t\treturn 0;\r\n\t},\r\n\tgetBoundary: function () {\r\n\t\treturn this.getFactory().createGeometryCollection(null);\r\n\t},\r\n\tgetGeometryType: function () {\r\n\t\treturn \"MultiPoint\";\r\n\t},\r\n\tcopy: function () {\r\n\t\tvar points = new Array(this.geometries.length).fill(null);\r\n\t\tfor (var i = 0; i < points.length; i++) {\r\n\t\t\tpoints[i] = this.geometries[i].copy();\r\n\t\t}\r\n\t\treturn new MultiPoint(points, this.factory);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Puntal];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MultiPoint;\r\n\t}\r\n});\r\nMultiPoint.serialVersionUID = -8048474874175355449;\r\n","import LineString from './LineString';\r\nimport Geometry from './Geometry';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport GeometryFactory from './GeometryFactory';\r\nimport Coordinate from './Coordinate';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport CoordinateSequences from './CoordinateSequences';\r\nimport CoordinateSequence from './CoordinateSequence';\r\nimport Dimension from './Dimension';\r\nimport inherits from '../../../../inherits';\r\nexport default function LinearRing() {\r\n\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof GeometryFactory) {\r\n\t\tlet points = arguments[0], factory = arguments[1];\r\n\t\tLinearRing.call(this, factory.getCoordinateSequenceFactory().create(points), factory);\r\n\t} else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\r\n\t\tlet points = arguments[0], factory = arguments[1];\r\n\t\tLineString.call(this, points, factory);\r\n\t\tthis.validateConstruction();\r\n\t}\r\n}\r\ninherits(LinearRing, LineString);\r\nextend(LinearRing.prototype, {\r\n\tgetSortIndex: function () {\r\n\t\treturn Geometry.SORTINDEX_LINEARRING;\r\n\t},\r\n\tgetBoundaryDimension: function () {\r\n\t\treturn Dimension.FALSE;\r\n\t},\r\n\tisClosed: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn LineString.prototype.isClosed.call(this);\r\n\t},\r\n\treverse: function () {\r\n\t\tvar seq = this.points.copy();\r\n\t\tCoordinateSequences.reverse(seq);\r\n\t\tvar rev = this.getFactory().createLinearRing(seq);\r\n\t\treturn rev;\r\n\t},\r\n\tvalidateConstruction: function () {\r\n\t\tif (!this.isEmpty() && !LineString.prototype.isClosed.call(this)) {\r\n\t\t\tthrow new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");\r\n\t\t}\r\n\t\tif (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\r\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\r\n\t\t}\r\n\t},\r\n\tgetGeometryType: function () {\r\n\t\treturn \"LinearRing\";\r\n\t},\r\n\tcopy: function () {\r\n\t\treturn new LinearRing(this.points.copy(), this.factory);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LinearRing;\r\n\t}\r\n});\r\nLinearRing.MINIMUM_VALID_SIZE = 4;\r\nLinearRing.serialVersionUID = -4261142084085851829;\r\n","import Geometry from './Geometry';\r\nimport extend from '../../../../extend';\r\nimport GeometryCollection from './GeometryCollection';\r\nimport Polygonal from './Polygonal';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport inherits from '../../../../inherits';\r\nexport default function MultiPolygon() {\r\n\tlet polygons = arguments[0], factory = arguments[1];\r\n\tGeometryCollection.call(this, polygons, factory);\r\n}\r\ninherits(MultiPolygon, GeometryCollection);\r\nextend(MultiPolygon.prototype, {\r\n\tgetSortIndex: function () {\r\n\t\treturn Geometry.SORTINDEX_MULTIPOLYGON;\r\n\t},\r\n\tequalsExact: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\r\n\t\t\tif (!this.isEquivalentClass(other)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\r\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\r\n\t},\r\n\tgetBoundaryDimension: function () {\r\n\t\treturn 1;\r\n\t},\r\n\tgetDimension: function () {\r\n\t\treturn 2;\r\n\t},\r\n\treverse: function () {\r\n\t\tvar n = this.geometries.length;\r\n\t\tvar revGeoms = new Array(n).fill(null);\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\trevGeoms[i] = this.geometries[i].reverse();\r\n\t\t}\r\n\t\treturn this.getFactory().createMultiPolygon(revGeoms);\r\n\t},\r\n\tgetBoundary: function () {\r\n\t\tif (this.isEmpty()) {\r\n\t\t\treturn this.getFactory().createMultiLineString();\r\n\t\t}\r\n\t\tvar allRings = new ArrayList();\r\n\t\tfor (var i = 0; i < this.geometries.length; i++) {\r\n\t\t\tvar polygon = this.geometries[i];\r\n\t\t\tvar rings = polygon.getBoundary();\r\n\t\t\tfor (var j = 0; j < rings.getNumGeometries(); j++) {\r\n\t\t\t\tallRings.add(rings.getGeometryN(j));\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar allRingsArray = new Array(allRings.size()).fill(null);\r\n\t\treturn this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));\r\n\t},\r\n\tgetGeometryType: function () {\r\n\t\treturn \"MultiPolygon\";\r\n\t},\r\n\tcopy: function () {\r\n\t\tvar polygons = new Array(this.geometries.length).fill(null);\r\n\t\tfor (var i = 0; i < polygons.length; i++) {\r\n\t\t\tpolygons[i] = this.geometries[i].copy();\r\n\t\t}\r\n\t\treturn new MultiPolygon(polygons, this.factory);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Polygonal];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MultiPolygon;\r\n\t}\r\n});\r\nMultiPolygon.serialVersionUID = -551033529766975875;\r\n","import LineString from '../LineString';\r\nimport Point from '../Point';\r\nimport Polygon from '../Polygon';\r\nimport MultiPoint from '../MultiPoint';\r\nimport LinearRing from '../LinearRing';\r\nimport extend from '../../../../../extend';\r\nimport MultiPolygon from '../MultiPolygon';\r\nimport GeometryCollection from '../GeometryCollection';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Assert from '../../util/Assert';\r\nimport MultiLineString from '../MultiLineString';\r\nexport default function GeometryEditor() {\r\n\tthis.factory = null;\r\n\tthis.isUserDataCopied = false;\r\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\r\n\t\tlet factory = arguments[0];\r\n\t\tthis.factory = factory;\r\n\t}\r\n}\r\nextend(GeometryEditor.prototype, {\r\n\tsetCopyUserData: function (isUserDataCopied) {\r\n\t\tthis.isUserDataCopied = isUserDataCopied;\r\n\t},\r\n\tedit: function (geometry, operation) {\r\n\t\tif (geometry === null) return null;\r\n\t\tvar result = this.editInternal(geometry, operation);\r\n\t\tif (this.isUserDataCopied) {\r\n\t\t\tresult.setUserData(geometry.getUserData());\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\teditInternal: function (geometry, operation) {\r\n\t\tif (this.factory === null) this.factory = geometry.getFactory();\r\n\t\tif (geometry instanceof GeometryCollection) {\r\n\t\t\treturn this.editGeometryCollection(geometry, operation);\r\n\t\t}\r\n\t\tif (geometry instanceof Polygon) {\r\n\t\t\treturn this.editPolygon(geometry, operation);\r\n\t\t}\r\n\t\tif (geometry instanceof Point) {\r\n\t\t\treturn operation.edit(geometry, this.factory);\r\n\t\t}\r\n\t\tif (geometry instanceof LineString) {\r\n\t\t\treturn operation.edit(geometry, this.factory);\r\n\t\t}\r\n\t\tAssert.shouldNeverReachHere(\"Unsupported Geometry class: \" + geometry.getClass().getName());\r\n\t\treturn null;\r\n\t},\r\n\teditGeometryCollection: function (collection, operation) {\r\n\t\tvar collectionForType = operation.edit(collection, this.factory);\r\n\t\tvar geometries = new ArrayList();\r\n\t\tfor (var i = 0; i < collectionForType.getNumGeometries(); i++) {\r\n\t\t\tvar geometry = this.edit(collectionForType.getGeometryN(i), operation);\r\n\t\t\tif (geometry === null || geometry.isEmpty()) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tgeometries.add(geometry);\r\n\t\t}\r\n\t\tif (collectionForType.getClass() === MultiPoint) {\r\n\t\t\treturn this.factory.createMultiPoint(geometries.toArray([]));\r\n\t\t}\r\n\t\tif (collectionForType.getClass() === MultiLineString) {\r\n\t\t\treturn this.factory.createMultiLineString(geometries.toArray([]));\r\n\t\t}\r\n\t\tif (collectionForType.getClass() === MultiPolygon) {\r\n\t\t\treturn this.factory.createMultiPolygon(geometries.toArray([]));\r\n\t\t}\r\n\t\treturn this.factory.createGeometryCollection(geometries.toArray([]));\r\n\t},\r\n\teditPolygon: function (polygon, operation) {\r\n\t\tvar newPolygon = operation.edit(polygon, this.factory);\r\n\t\tif (newPolygon === null) newPolygon = this.factory.createPolygon(null);\r\n\t\tif (newPolygon.isEmpty()) {\r\n\t\t\treturn newPolygon;\r\n\t\t}\r\n\t\tvar shell = this.edit(newPolygon.getExteriorRing(), operation);\r\n\t\tif (shell === null || shell.isEmpty()) {\r\n\t\t\treturn this.factory.createPolygon();\r\n\t\t}\r\n\t\tvar holes = new ArrayList();\r\n\t\tfor (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\r\n\t\t\tvar hole = this.edit(newPolygon.getInteriorRingN(i), operation);\r\n\t\t\tif (hole === null || hole.isEmpty()) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tholes.add(hole);\r\n\t\t}\r\n\t\treturn this.factory.createPolygon(shell, holes.toArray([]));\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryEditor;\r\n\t}\r\n});\r\nfunction GeometryEditorOperation() {}\r\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation;\r\nfunction NoOpGeometryOperation() {}\r\nextend(NoOpGeometryOperation.prototype, {\r\n\tedit: function (geometry, factory) {\r\n\t\treturn geometry;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryEditorOperation];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NoOpGeometryOperation;\r\n\t}\r\n});\r\nfunction CoordinateOperation() {}\r\nextend(CoordinateOperation.prototype, {\r\n\tedit: function (geometry, factory) {\r\n\t\tvar coords = this.editCoordinates(geometry.getCoordinates(), geometry);\r\n\t\tif (coords === null) return geometry;\r\n\t\tif (geometry instanceof LinearRing) {\r\n\t\t\treturn factory.createLinearRing(coords);\r\n\t\t}\r\n\t\tif (geometry instanceof LineString) {\r\n\t\t\treturn factory.createLineString(coords);\r\n\t\t}\r\n\t\tif (geometry instanceof Point) {\r\n\t\t\tif (coords.length > 0) {\r\n\t\t\t\treturn factory.createPoint(coords[0]);\r\n\t\t\t} else {\r\n\t\t\t\treturn factory.createPoint();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn geometry;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryEditorOperation];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateOperation;\r\n\t}\r\n});\r\nfunction CoordinateSequenceOperation() {}\r\nextend(CoordinateSequenceOperation.prototype, {\r\n\tedit: function (geometry, factory) {\r\n\t\tif (geometry instanceof LinearRing) {\r\n\t\t\treturn factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry));\r\n\t\t}\r\n\t\tif (geometry instanceof LineString) {\r\n\t\t\treturn factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry));\r\n\t\t}\r\n\t\tif (geometry instanceof Point) {\r\n\t\t\treturn factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry));\r\n\t\t}\r\n\t\treturn geometry;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryEditorOperation];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateSequenceOperation;\r\n\t}\r\n});\r\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation;\r\nGeometryEditor.CoordinateOperation = CoordinateOperation;\r\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation;\r\n","import StringBuffer from '../../../../../java/lang/StringBuffer';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport Coordinate from '../Coordinate';\r\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\r\nimport Double from '../../../../../java/lang/Double';\r\nimport extend from '../../../../../extend';\r\nimport CoordinateSequence from '../CoordinateSequence';\r\nimport Serializable from '../../../../../java/io/Serializable';\r\nexport default function CoordinateArraySequence() {\r\n\tthis.dimension = 3;\r\n\tthis.coordinates = null;\r\n\tif (arguments.length === 1) {\r\n\t\tif (arguments[0] instanceof Array) {\r\n\t\t\tlet coordinates = arguments[0];\r\n\t\t\tCoordinateArraySequence.call(this, coordinates, 3);\r\n\t\t} else if (Number.isInteger(arguments[0])) {\r\n\t\t\tlet size = arguments[0];\r\n\t\t\tthis.coordinates = new Array(size).fill(null);\r\n\t\t\tfor (var i = 0; i < size; i++) {\r\n\t\t\t\tthis.coordinates[i] = new Coordinate();\r\n\t\t\t}\r\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\r\n\t\t\tlet coordSeq = arguments[0];\r\n\t\t\tif (coordSeq === null) {\r\n\t\t\t\tthis.coordinates = new Array(0).fill(null);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tthis.dimension = coordSeq.getDimension();\r\n\t\t\tthis.coordinates = new Array(coordSeq.size()).fill(null);\r\n\t\t\tfor (var i = 0; i < this.coordinates.length; i++) {\r\n\t\t\t\tthis.coordinates[i] = coordSeq.getCoordinateCopy(i);\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tif (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\r\n\t\t\tlet coordinates = arguments[0], dimension = arguments[1];\r\n\t\t\tthis.coordinates = coordinates;\r\n\t\t\tthis.dimension = dimension;\r\n\t\t\tif (coordinates === null) this.coordinates = new Array(0).fill(null);\r\n\t\t} else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\r\n\t\t\tlet size = arguments[0], dimension = arguments[1];\r\n\t\t\tthis.coordinates = new Array(size).fill(null);\r\n\t\t\tthis.dimension = dimension;\r\n\t\t\tfor (var i = 0; i < size; i++) {\r\n\t\t\t\tthis.coordinates[i] = new Coordinate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nextend(CoordinateArraySequence.prototype, {\r\n\tsetOrdinate: function (index, ordinateIndex, value) {\r\n\t\tswitch (ordinateIndex) {\r\n\t\t\tcase CoordinateSequence.X:\r\n\t\t\t\tthis.coordinates[index].x = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase CoordinateSequence.Y:\r\n\t\t\t\tthis.coordinates[index].y = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase CoordinateSequence.Z:\r\n\t\t\t\tthis.coordinates[index].z = value;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new IllegalArgumentException(\"invalid ordinateIndex\");\r\n\t\t}\r\n\t},\r\n\tsize: function () {\r\n\t\treturn this.coordinates.length;\r\n\t},\r\n\tgetOrdinate: function (index, ordinateIndex) {\r\n\t\tswitch (ordinateIndex) {\r\n\t\t\tcase CoordinateSequence.X:\r\n\t\t\t\treturn this.coordinates[index].x;\r\n\t\t\tcase CoordinateSequence.Y:\r\n\t\t\t\treturn this.coordinates[index].y;\r\n\t\t\tcase CoordinateSequence.Z:\r\n\t\t\t\treturn this.coordinates[index].z;\r\n\t\t}\r\n\t\treturn Double.NaN;\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet i = arguments[0];\r\n\t\t\treturn this.coordinates[i];\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet index = arguments[0], coord = arguments[1];\r\n\t\t\tcoord.x = this.coordinates[index].x;\r\n\t\t\tcoord.y = this.coordinates[index].y;\r\n\t\t\tcoord.z = this.coordinates[index].z;\r\n\t\t}\r\n\t},\r\n\tgetCoordinateCopy: function (i) {\r\n\t\treturn new Coordinate(this.coordinates[i]);\r\n\t},\r\n\tgetDimension: function () {\r\n\t\treturn this.dimension;\r\n\t},\r\n\tgetX: function (index) {\r\n\t\treturn this.coordinates[index].x;\r\n\t},\r\n\tclone: function () {\r\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\r\n\t\tfor (var i = 0; i < this.coordinates.length; i++) {\r\n\t\t\tcloneCoordinates[i] = this.coordinates[i].clone();\r\n\t\t}\r\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this.dimension);\r\n\t},\r\n\texpandEnvelope: function (env) {\r\n\t\tfor (var i = 0; i < this.coordinates.length; i++) {\r\n\t\t\tenv.expandToInclude(this.coordinates[i]);\r\n\t\t}\r\n\t\treturn env;\r\n\t},\r\n\tcopy: function () {\r\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\r\n\t\tfor (var i = 0; i < this.coordinates.length; i++) {\r\n\t\t\tcloneCoordinates[i] = this.coordinates[i].copy();\r\n\t\t}\r\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this.dimension);\r\n\t},\r\n\ttoString: function () {\r\n\t\tif (this.coordinates.length > 0) {\r\n\t\t\tvar strBuf = new StringBuffer(17 * this.coordinates.length);\r\n\t\t\tstrBuf.append('(');\r\n\t\t\tstrBuf.append(this.coordinates[0]);\r\n\t\t\tfor (var i = 1; i < this.coordinates.length; i++) {\r\n\t\t\t\tstrBuf.append(\", \");\r\n\t\t\t\tstrBuf.append(this.coordinates[i]);\r\n\t\t\t}\r\n\t\t\tstrBuf.append(')');\r\n\t\t\treturn strBuf.toString();\r\n\t\t} else {\r\n\t\t\treturn \"()\";\r\n\t\t}\r\n\t},\r\n\tgetY: function (index) {\r\n\t\treturn this.coordinates[index].y;\r\n\t},\r\n\ttoCoordinateArray: function () {\r\n\t\treturn this.coordinates;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [CoordinateSequence, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateArraySequence;\r\n\t}\r\n});\r\nCoordinateArraySequence.serialVersionUID = -915438501601840650;\r\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport CoordinateArraySequence from './CoordinateArraySequence';\r\nimport extend from '../../../../../extend';\r\nimport CoordinateSequence from '../CoordinateSequence';\r\nimport Serializable from '../../../../../java/io/Serializable';\r\nexport default function CoordinateArraySequenceFactory() {}\r\nextend(CoordinateArraySequenceFactory.prototype, {\r\n\treadResolve: function () {\r\n\t\treturn CoordinateArraySequenceFactory.instance();\r\n\t},\r\n\tcreate: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Array) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\treturn new CoordinateArraySequence(coordinates);\r\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\r\n\t\t\t\tlet coordSeq = arguments[0];\r\n\t\t\t\treturn new CoordinateArraySequence(coordSeq);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet size = arguments[0], dimension = arguments[1];\r\n\t\t\tif (dimension > 3) dimension = 3;\r\n\t\t\tif (dimension < 2) return new CoordinateArraySequence(size);\r\n\t\t\treturn new CoordinateArraySequence(size, dimension);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [CoordinateSequenceFactory, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CoordinateArraySequenceFactory;\r\n\t}\r\n});\r\nCoordinateArraySequenceFactory.instance = function () {\r\n\treturn CoordinateArraySequenceFactory.instanceObject;\r\n};\r\nCoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657;\r\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory();\r\n","// shared pointer\r\nvar i\r\n// shortcuts\r\nvar defineProperty = Object.defineProperty\r\nfunction is (a, b) { return (a === b) || (a !== a && b !== b) } // eslint-disable-line\r\n\r\nexport default createCollection({\r\n  // WeakMap#delete(key:void*):boolean\r\n  'delete': sharedDelete,\r\n  // :was Map#get(key:void*[, d3fault:void*]):void*\r\n  // Map#has(key:void*):boolean\r\n  has: mapHas,\r\n  // Map#get(key:void*):boolean\r\n  get: sharedGet,\r\n  // Map#set(key:void*, value:void*):void\r\n  set: sharedSet,\r\n  // Map#keys(void):Iterator\r\n  keys: sharedKeys,\r\n  // Map#values(void):Iterator\r\n  values: sharedValues,\r\n  // Map#entries(void):Iterator\r\n  entries: mapEntries,\r\n  // Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\r\n  forEach: sharedForEach,\r\n  // Map#clear():\r\n  clear: sharedClear\r\n})\r\n\r\n/**\r\n * ES6 collection constructor\r\n * @return {Function} a collection class\r\n */\r\nfunction createCollection (proto, objectOnly) {\r\n  function Collection (a) {\r\n    if (!this || this.constructor !== Collection) return new Collection(a)\r\n    this._keys = []\r\n    this._values = []\r\n    this._itp = [] // iteration pointers\r\n    this.objectOnly = objectOnly\r\n\r\n    // parse initial iterable argument passed\r\n    if (a) init.call(this, a)\r\n  }\r\n\r\n  // define size for non object-only collections\r\n  if (!objectOnly) {\r\n    defineProperty(proto, 'size', {\r\n      get: sharedSize\r\n    })\r\n  }\r\n\r\n  // set prototype\r\n  proto.constructor = Collection\r\n  Collection.prototype = proto\r\n\r\n  return Collection\r\n}\r\n\r\n/** parse initial iterable argument passed */\r\nfunction init (a) {\r\n  // init Set argument, like `[1,2,3,{}]`\r\n  if (this.add) a.forEach(this.add, this)\r\n  // init Map argument like `[[1,2], [{}, 4]]`\r\n  else a.forEach(function (a) { this.set(a[0], a[1]) }, this)\r\n}\r\n\r\n/** delete */\r\nfunction sharedDelete (key) {\r\n  if (this.has(key)) {\r\n    this._keys.splice(i, 1)\r\n    this._values.splice(i, 1)\r\n    // update iteration pointers\r\n    this._itp.forEach(function (p) { if (i < p[0]) p[0]-- })\r\n  }\r\n  // Aurora here does it while Canary doesn't\r\n  return i > -1\r\n}\r\n\r\nfunction sharedGet (key) {\r\n  return this.has(key) ? this._values[i] : undefined\r\n}\r\n\r\nfunction has (list, key) {\r\n  if (this.objectOnly && key !== Object(key)) throw new TypeError('Invalid value used as weak collection key')\r\n  // NaN or 0 passed\r\n  if (key !== key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {} // eslint-disable-line\r\n  else i = list.indexOf(key)\r\n  return i > -1\r\n}\r\n\r\nfunction mapHas (value) {\r\n  return has.call(this, this._keys, value)\r\n}\r\n\r\n/** @chainable */\r\nfunction sharedSet (key, value) {\r\n  this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value\r\n  return this\r\n}\r\n\r\nfunction sharedClear () {\r\n  (this._keys || 0).length =\r\n    this._values.length = 0\r\n}\r\n\r\n/** keys, values, and iterate related methods */\r\nfunction sharedKeys () {\r\n  return sharedIterator(this._itp, this._keys)\r\n}\r\n\r\nfunction sharedValues () {\r\n  return sharedIterator(this._itp, this._values)\r\n}\r\n\r\nfunction mapEntries () {\r\n  return sharedIterator(this._itp, this._keys, this._values)\r\n}\r\n\r\nfunction sharedIterator (itp, array, array2) {\r\n  var p = [0]\r\n  var done = false\r\n  itp.push(p)\r\n  return {\r\n    next: function () {\r\n      var v\r\n      var k = p[0]\r\n      if (!done && k < array.length) {\r\n        v = array2 ? [array[k], array2[k]] : array[k]\r\n        p[0]++\r\n      } else {\r\n        done = true\r\n        itp.splice(itp.indexOf(p), 1)\r\n      }\r\n      return { done: done, value: v }\r\n    }\r\n  }\r\n}\r\n\r\nfunction sharedSize () {\r\n  return this._values.length\r\n}\r\n\r\nfunction sharedForEach (callback, context) {\r\n  var it = this.entries()\r\n  for (;;) {\r\n    var r = it.next()\r\n    if (r.done) break\r\n    callback.call(context, r.value[1], r.value[0], this)\r\n  }\r\n}\r\n","import ArrayList from './ArrayList'\r\nimport MapInterface from './Map'\r\nimport HashSet from './HashSet'\r\nimport MapPolyfill from '../../Map'\r\n\r\nlet MapImpl = typeof Map === 'undefined' || !Map.prototype.values ? MapPolyfill : Map\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\r\n *\r\n * @extends {javascript.util.Map}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function HashMap () {\r\n  /**\r\n   * @type {Object}\r\n   * @private\r\n  */\r\n  this.map_ = new MapImpl()\r\n}\r\nHashMap.prototype = new MapInterface()\r\n\r\n/**\r\n * @override\r\n */\r\nHashMap.prototype.get = function (key) {\r\n  return this.map_.get(key) || null\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nHashMap.prototype.put = function (key, value) {\r\n  this.map_.set(key, value)\r\n  return value\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nHashMap.prototype.values = function () {\r\n  const arrayList = new ArrayList()\r\n  const it = this.map_.values()\r\n  let o = it.next()\r\n  while (!o.done) {\r\n    arrayList.add(o.value)\r\n    o = it.next()\r\n  }\r\n  return arrayList\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nHashMap.prototype.entrySet = function () {\r\n  const hashSet = new HashSet()\r\n  this.map_.entries().forEach(entry => hashSet.add(entry))\r\n  return hashSet\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nHashMap.prototype.size = function () {\r\n  return this.map_.size()\r\n}\r\n","import HashMap from '../../../../java/util/HashMap';\r\nimport Coordinate from './Coordinate';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport Integer from '../../../../java/lang/Integer';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nimport Serializable from '../../../../java/io/Serializable';\r\nexport default function PrecisionModel() {\r\n\tthis.modelType = null;\r\n\tthis.scale = null;\r\n\tif (arguments.length === 0) {\r\n\t\tthis.modelType = PrecisionModel.FLOATING;\r\n\t} else if (arguments.length === 1) {\r\n\t\tif (arguments[0] instanceof Type) {\r\n\t\t\tlet modelType = arguments[0];\r\n\t\t\tthis.modelType = modelType;\r\n\t\t\tif (modelType === PrecisionModel.FIXED) {\r\n\t\t\t\tthis.setScale(1.0);\r\n\t\t\t}\r\n\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\tlet scale = arguments[0];\r\n\t\t\tthis.modelType = PrecisionModel.FIXED;\r\n\t\t\tthis.setScale(scale);\r\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\r\n\t\t\tlet pm = arguments[0];\r\n\t\t\tthis.modelType = pm.modelType;\r\n\t\t\tthis.scale = pm.scale;\r\n\t\t}\r\n\t}\r\n}\r\nextend(PrecisionModel.prototype, {\r\n\tequals: function (other) {\r\n\t\tif (!(other instanceof PrecisionModel)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar otherPrecisionModel = other;\r\n\t\treturn this.modelType === otherPrecisionModel.modelType && this.scale === otherPrecisionModel.scale;\r\n\t},\r\n\tcompareTo: function (o) {\r\n\t\tvar other = o;\r\n\t\tvar sigDigits = this.getMaximumSignificantDigits();\r\n\t\tvar otherSigDigits = other.getMaximumSignificantDigits();\r\n\t\treturn new Integer(sigDigits).compareTo(new Integer(otherSigDigits));\r\n\t},\r\n\tgetScale: function () {\r\n\t\treturn this.scale;\r\n\t},\r\n\tisFloating: function () {\r\n\t\treturn this.modelType === PrecisionModel.FLOATING || this.modelType === PrecisionModel.FLOATING_SINGLE;\r\n\t},\r\n\tgetType: function () {\r\n\t\treturn this.modelType;\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar description = \"UNKNOWN\";\r\n\t\tif (this.modelType === PrecisionModel.FLOATING) {\r\n\t\t\tdescription = \"Floating\";\r\n\t\t} else if (this.modelType === PrecisionModel.FLOATING_SINGLE) {\r\n\t\t\tdescription = \"Floating-Single\";\r\n\t\t} else if (this.modelType === PrecisionModel.FIXED) {\r\n\t\t\tdescription = \"Fixed (Scale=\" + this.getScale() + \")\";\r\n\t\t}\r\n\t\treturn description;\r\n\t},\r\n\tmakePrecise: function () {\r\n\t\tif (typeof arguments[0] === \"number\") {\r\n\t\t\tlet val = arguments[0];\r\n\t\t\tif (Double.isNaN(val)) return val;\r\n\t\t\tif (this.modelType === PrecisionModel.FLOATING_SINGLE) {\r\n\t\t\t\tvar floatSingleVal = val;\r\n\t\t\t\treturn floatSingleVal;\r\n\t\t\t}\r\n\t\t\tif (this.modelType === PrecisionModel.FIXED) {\r\n\t\t\t\treturn Math.round(val * this.scale) / this.scale;\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet coord = arguments[0];\r\n\t\t\tif (this.modelType === PrecisionModel.FLOATING) return null;\r\n\t\t\tcoord.x = this.makePrecise(coord.x);\r\n\t\t\tcoord.y = this.makePrecise(coord.y);\r\n\t\t}\r\n\t},\r\n\tgetMaximumSignificantDigits: function () {\r\n\t\tvar maxSigDigits = 16;\r\n\t\tif (this.modelType === PrecisionModel.FLOATING) {\r\n\t\t\tmaxSigDigits = 16;\r\n\t\t} else if (this.modelType === PrecisionModel.FLOATING_SINGLE) {\r\n\t\t\tmaxSigDigits = 6;\r\n\t\t} else if (this.modelType === PrecisionModel.FIXED) {\r\n\t\t\tmaxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\r\n\t\t}\r\n\t\treturn maxSigDigits;\r\n\t},\r\n\tsetScale: function (scale) {\r\n\t\tthis.scale = Math.abs(scale);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Serializable, Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PrecisionModel;\r\n\t}\r\n});\r\nPrecisionModel.mostPrecise = function (pm1, pm2) {\r\n\tif (pm1.compareTo(pm2) >= 0) return pm1;\r\n\treturn pm2;\r\n};\r\nfunction Type() {\r\n\tthis.name = null;\r\n\tlet name = arguments[0];\r\n\tthis.name = name;\r\n\tType.nameToTypeMap.put(name, this);\r\n}\r\nextend(Type.prototype, {\r\n\treadResolve: function () {\r\n\t\treturn Type.nameToTypeMap.get(this.name);\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn this.name;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Type;\r\n\t}\r\n});\r\nType.serialVersionUID = -5528602631731589822;\r\nType.nameToTypeMap = new HashMap();\r\nPrecisionModel.Type = Type;\r\nPrecisionModel.serialVersionUID = 7777263578777803835;\r\nPrecisionModel.FIXED = new Type(\"FIXED\");\r\nPrecisionModel.FLOATING = new Type(\"FLOATING\");\r\nPrecisionModel.FLOATING_SINGLE = new Type(\"FLOATING SINGLE\");\r\nPrecisionModel.maximumPreciseValue = 9007199254740992.0;\r\n","import CoordinateSequenceFactory from './CoordinateSequenceFactory';\r\nimport LineString from './LineString';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport Coordinate from './Coordinate';\r\nimport Point from './Point';\r\nimport Polygon from './Polygon';\r\nimport MultiPoint from './MultiPoint';\r\nimport GeometryEditor from './util/GeometryEditor';\r\nimport LinearRing from './LinearRing';\r\nimport extend from '../../../../extend';\r\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory';\r\nimport MultiPolygon from './MultiPolygon';\r\nimport CoordinateSequences from './CoordinateSequences';\r\nimport CoordinateSequence from './CoordinateSequence';\r\nimport GeometryCollection from './GeometryCollection';\r\nimport PrecisionModel from './PrecisionModel';\r\nimport Serializable from '../../../../java/io/Serializable';\r\nimport Assert from '../util/Assert';\r\nimport MultiLineString from './MultiLineString';\r\nexport default function GeometryFactory() {\r\n\tthis.precisionModel = null;\r\n\tthis.coordinateSequenceFactory = null;\r\n\tthis.SRID = null;\r\n\tif (arguments.length === 0) {\r\n\t\tGeometryFactory.call(this, new PrecisionModel(), 0);\r\n\t} else if (arguments.length === 1) {\r\n\t\tif (hasInterface(arguments[0], CoordinateSequenceFactory)) {\r\n\t\t\tlet coordinateSequenceFactory = arguments[0];\r\n\t\t\tGeometryFactory.call(this, new PrecisionModel(), 0, coordinateSequenceFactory);\r\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\r\n\t\t\tlet precisionModel = arguments[0];\r\n\t\t\tGeometryFactory.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory());\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet precisionModel = arguments[0], SRID = arguments[1];\r\n\t\tGeometryFactory.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory());\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2];\r\n\t\tthis.precisionModel = precisionModel;\r\n\t\tthis.coordinateSequenceFactory = coordinateSequenceFactory;\r\n\t\tthis.SRID = SRID;\r\n\t}\r\n}\r\nextend(GeometryFactory.prototype, {\r\n\ttoGeometry: function (envelope) {\r\n\t\tif (envelope.isNull()) {\r\n\t\t\treturn this.createPoint(null);\r\n\t\t}\r\n\t\tif (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\r\n\t\t\treturn this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()));\r\n\t\t}\r\n\t\tif (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\r\n\t\t\treturn this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())]);\r\n\t\t}\r\n\t\treturn this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null);\r\n\t},\r\n\tcreateLineString: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn this.createLineString(this.getCoordinateSequenceFactory().create([]));\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Array) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\treturn this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\r\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\treturn new LineString(coordinates, this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreateMultiLineString: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn new MultiLineString(null, this);\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet lineStrings = arguments[0];\r\n\t\t\treturn new MultiLineString(lineStrings, this);\r\n\t\t}\r\n\t},\r\n\tbuildGeometry: function (geomList) {\r\n\t\tvar geomClass = null;\r\n\t\tvar isHeterogeneous = false;\r\n\t\tvar hasGeometryCollection = false;\r\n\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\r\n\t\t\tvar geom = i.next();\r\n\t\t\tvar partClass = geom.getClass();\r\n\t\t\tif (geomClass === null) {\r\n\t\t\t\tgeomClass = partClass;\r\n\t\t\t}\r\n\t\t\tif (partClass !== geomClass) {\r\n\t\t\t\tisHeterogeneous = true;\r\n\t\t\t}\r\n\t\t\tif (geom.isGeometryCollectionOrDerived()) hasGeometryCollection = true;\r\n\t\t}\r\n\t\tif (geomClass === null) {\r\n\t\t\treturn this.createGeometryCollection();\r\n\t\t}\r\n\t\tif (isHeterogeneous || hasGeometryCollection) {\r\n\t\t\treturn this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));\r\n\t\t}\r\n\t\tvar geom0 = geomList.iterator().next();\r\n\t\tvar isCollection = geomList.size() > 1;\r\n\t\tif (isCollection) {\r\n\t\t\tif (geom0 instanceof Polygon) {\r\n\t\t\t\treturn this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));\r\n\t\t\t} else if (geom0 instanceof LineString) {\r\n\t\t\t\treturn this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));\r\n\t\t\t} else if (geom0 instanceof Point) {\r\n\t\t\t\treturn this.createMultiPoint(GeometryFactory.toPointArray(geomList));\r\n\t\t\t}\r\n\t\t\tAssert.shouldNeverReachHere(\"Unhandled class: \" + geom0.getClass().getName());\r\n\t\t}\r\n\t\treturn geom0;\r\n\t},\r\n\tcreateMultiPointFromCoords: function (coordinates) {\r\n\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\r\n\t},\r\n\tcreatePoint: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn this.createPoint(this.getCoordinateSequenceFactory().create([]));\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Coordinate) {\r\n\t\t\t\tlet coordinate = arguments[0];\r\n\t\t\t\treturn this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null);\r\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\treturn new Point(coordinates, this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetCoordinateSequenceFactory: function () {\r\n\t\treturn this.coordinateSequenceFactory;\r\n\t},\r\n\tcreatePolygon: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn new Polygon(null, null, this);\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tif (hasInterface(arguments[0], CoordinateSequence)) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\treturn this.createPolygon(this.createLinearRing(coordinates));\r\n\t\t\t} else if (arguments[0] instanceof Array) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\treturn this.createPolygon(this.createLinearRing(coordinates));\r\n\t\t\t} else if (arguments[0] instanceof LinearRing) {\r\n\t\t\t\tlet shell = arguments[0];\r\n\t\t\t\treturn this.createPolygon(shell, null);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet shell = arguments[0], holes = arguments[1];\r\n\t\t\treturn new Polygon(shell, holes, this);\r\n\t\t}\r\n\t},\r\n\tgetSRID: function () {\r\n\t\treturn this.SRID;\r\n\t},\r\n\tcreateGeometryCollection: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn new GeometryCollection(null, this);\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet geometries = arguments[0];\r\n\t\t\treturn new GeometryCollection(geometries, this);\r\n\t\t}\r\n\t},\r\n\tcreateGeometry: function (g) {\r\n\t\tvar editor = new GeometryEditor(this);\r\n\t\treturn editor.edit(g, {\r\n\t\t\tedit: function () {\r\n\t\t\t\tif (arguments.length === 2) {\r\n\t\t\t\t\tlet coordSeq = arguments[0], geometry = arguments[1];\r\n\t\t\t\t\treturn this.coordinateSequenceFactory.create(coordSeq);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tgetPrecisionModel: function () {\r\n\t\treturn this.precisionModel;\r\n\t},\r\n\tcreateLinearRing: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Array) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\treturn this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\r\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\treturn new LinearRing(coordinates, this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreateMultiPolygon: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn new MultiPolygon(null, this);\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet polygons = arguments[0];\r\n\t\t\treturn new MultiPolygon(polygons, this);\r\n\t\t}\r\n\t},\r\n\tcreateMultiPoint: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn new MultiPoint(null, this);\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Array) {\r\n\t\t\t\tlet point = arguments[0];\r\n\t\t\t\treturn new MultiPoint(point, this);\r\n\t\t\t} else if (arguments[0] instanceof Array) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\r\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\r\n\t\t\t\tlet coordinates = arguments[0];\r\n\t\t\t\tif (coordinates === null) {\r\n\t\t\t\t\treturn this.createMultiPoint(new Array(0).fill(null));\r\n\t\t\t\t}\r\n\t\t\t\tvar points = new Array(coordinates.size()).fill(null);\r\n\t\t\t\tfor (var i = 0; i < coordinates.size(); i++) {\r\n\t\t\t\t\tvar ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension());\r\n\t\t\t\t\tCoordinateSequences.copy(coordinates, i, ptSeq, 0, 1);\r\n\t\t\t\t\tpoints[i] = this.createPoint(ptSeq);\r\n\t\t\t\t}\r\n\t\t\t\treturn this.createMultiPoint(points);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryFactory;\r\n\t}\r\n});\r\nGeometryFactory.toMultiPolygonArray = function (multiPolygons) {\r\n\tvar multiPolygonArray = new Array(multiPolygons.size()).fill(null);\r\n\treturn multiPolygons.toArray(multiPolygonArray);\r\n};\r\nGeometryFactory.toGeometryArray = function (geometries) {\r\n\tif (geometries === null) return null;\r\n\tvar geometryArray = new Array(geometries.size()).fill(null);\r\n\treturn geometries.toArray(geometryArray);\r\n};\r\nGeometryFactory.getDefaultCoordinateSequenceFactory = function () {\r\n\treturn CoordinateArraySequenceFactory.instance();\r\n};\r\nGeometryFactory.toMultiLineStringArray = function (multiLineStrings) {\r\n\tvar multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\r\n\treturn multiLineStrings.toArray(multiLineStringArray);\r\n};\r\nGeometryFactory.toLineStringArray = function (lineStrings) {\r\n\tvar lineStringArray = new Array(lineStrings.size()).fill(null);\r\n\treturn lineStrings.toArray(lineStringArray);\r\n};\r\nGeometryFactory.toMultiPointArray = function (multiPoints) {\r\n\tvar multiPointArray = new Array(multiPoints.size()).fill(null);\r\n\treturn multiPoints.toArray(multiPointArray);\r\n};\r\nGeometryFactory.toLinearRingArray = function (linearRings) {\r\n\tvar linearRingArray = new Array(linearRings.size()).fill(null);\r\n\treturn linearRings.toArray(linearRingArray);\r\n};\r\nGeometryFactory.toPointArray = function (points) {\r\n\tvar pointArray = new Array(points.size()).fill(null);\r\n\treturn points.toArray(pointArray);\r\n};\r\nGeometryFactory.toPolygonArray = function (polygons) {\r\n\tvar polygonArray = new Array(polygons.size()).fill(null);\r\n\treturn polygons.toArray(polygonArray);\r\n};\r\nGeometryFactory.createPointFromInternalCoord = function (coord, exemplar) {\r\n\texemplar.getPrecisionModel().makePrecise(coord);\r\n\treturn exemplar.getFactory().createPoint(coord);\r\n};\r\nGeometryFactory.serialVersionUID = -6820524753094095635;\r\n","import Coordinate from '../geom/Coordinate'\r\nimport GeometryFactory from '../geom/GeometryFactory'\r\nimport extend from '../../../../extend'\r\n\r\nconst regExes = {\r\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\r\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\r\n  'spaces': /\\s+/,\r\n  'parenComma': /\\)\\s*,\\s*\\(/,\r\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\r\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\r\n}\r\n\r\n/**\r\n * Class for reading and writing Well-Known Text.\r\n *\r\n * NOTE: Adapted from OpenLayers 2.11 implementation.\r\n */\r\n\r\n/** Create a new parser for WKT\r\n *\r\n * @param {GeometryFactory} geometryFactory\r\n * @return An instance of WKTParser.\r\n * @constructor\r\n * @private\r\n */\r\nexport default function WKTParser (geometryFactory) {\r\n  this.geometryFactory = geometryFactory || new GeometryFactory()\r\n}\r\n\r\nextend(WKTParser.prototype, {\r\n  /**\r\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\r\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\r\n   * and GEOMETRYCOLLECTION.\r\n   *\r\n   * @param {String} wkt A WKT string.\r\n   * @return {Geometry} A geometry instance.\r\n   * @private\r\n   */\r\n  read (wkt) {\r\n    var geometry, type, str\r\n    wkt = wkt.replace(/[\\n\\r]/g, ' ')\r\n    var matches = regExes.typeStr.exec(wkt)\r\n    if (wkt.search('EMPTY') !== -1) {\r\n      matches = regExes.emptyTypeStr.exec(wkt)\r\n      matches[2] = undefined\r\n    }\r\n    if (matches) {\r\n      type = matches[1].toLowerCase()\r\n      str = matches[2]\r\n      if (parse[type]) {\r\n        geometry = parse[type].apply(this, [str])\r\n      }\r\n    }\r\n\r\n    if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt)\r\n\r\n    return geometry\r\n  },\r\n\r\n  /**\r\n   * Serialize a geometry into a WKT string.\r\n   *\r\n   * @param {Geometry} geometry A feature or array of features.\r\n   * @return {String} The WKT string representation of the input geometries.\r\n   * @private\r\n   */\r\n  write (geometry) {\r\n    return this.extractGeometry(geometry)\r\n  },\r\n\r\n  /**\r\n   * Entry point to construct the WKT for a single Geometry object.\r\n   *\r\n   * @param {Geometry} geometry\r\n   * @return {String} A WKT string of representing the geometry.\r\n   * @private\r\n   */\r\n  extractGeometry (geometry) {\r\n    var type = geometry.getGeometryType().toLowerCase()\r\n    if (!extract[type]) {\r\n      return null\r\n    }\r\n    var wktType = type.toUpperCase()\r\n    var data\r\n    if (geometry.isEmpty()) {\r\n      data = wktType + ' EMPTY'\r\n    } else {\r\n      data = wktType + '(' + extract[type].apply(this, [geometry]) + ')'\r\n    }\r\n    return data\r\n  }\r\n})\r\n\r\n/**\r\n * Object with properties corresponding to the geometry types. Property values\r\n * are functions that do the actual data extraction.\r\n * @private\r\n */\r\nconst extract = {\r\n  coordinate (coordinate) {\r\n    return coordinate.x + ' ' + coordinate.y\r\n  },\r\n\r\n  /**\r\n   * Return a space delimited string of point coordinates.\r\n   *\r\n   * @param {Point}\r\n   *          point\r\n   * @return {String} A string of coordinates representing the point.\r\n   */\r\n  point (point) {\r\n    return extract.coordinate.call(this, point.coordinates.coordinates[0])\r\n  },\r\n\r\n  /**\r\n   * Return a comma delimited string of point coordinates from a multipoint.\r\n   *\r\n   * @param {MultiPoint}\r\n   *          multipoint\r\n   * @return {String} A string of point coordinate strings representing the\r\n   *         multipoint.\r\n   */\r\n  multipoint (multipoint) {\r\n    var array = []\r\n    for (let i = 0, len = multipoint.geometries.length; i < len; ++i) {\r\n      array.push('(' + extract.point.apply(this, [multipoint.geometries[i]]) + ')')\r\n    }\r\n    return array.join(',')\r\n  },\r\n\r\n  /**\r\n   * Return a comma delimited string of point coordinates from a line.\r\n   *\r\n   * @param {LineString} linestring\r\n   * @return {String} A string of point coordinate strings representing the linestring.\r\n   */\r\n  linestring (linestring) {\r\n    var array = []\r\n    for (let i = 0, len = linestring.points.coordinates.length; i < len; ++i) {\r\n      array.push(extract.coordinate.apply(this, [linestring.points.coordinates[i]]))\r\n    }\r\n    return array.join(',')\r\n  },\r\n\r\n  linearring (linearring) {\r\n    var array = []\r\n    for (let i = 0, len = linearring.points.coordinates.length; i < len; ++i) {\r\n      array.push(extract.coordinate.apply(this, [linearring.points.coordinates[i]]))\r\n    }\r\n    return array.join(',')\r\n  },\r\n\r\n  /**\r\n   * Return a comma delimited string of linestring strings from a\r\n   * multilinestring.\r\n   *\r\n   * @param {MultiLineString} multilinestring\r\n   * @return {String} A string of of linestring strings representing the multilinestring.\r\n   */\r\n  multilinestring (multilinestring) {\r\n    var array = []\r\n    for (let i = 0, len = multilinestring.geometries.length; i < len; ++i) {\r\n      array.push('(' +\r\n        extract.linestring.apply(this, [multilinestring.geometries[i]]) +\r\n        ')')\r\n    }\r\n    return array.join(',')\r\n  },\r\n\r\n  /**\r\n   * Return a comma delimited string of linear ring arrays from a polygon.\r\n   *\r\n   * @param {Polygon} polygon\r\n   * @return {String} An array of linear ring arrays representing the polygon.\r\n   */\r\n  polygon (polygon) {\r\n    var array = []\r\n    array.push('(' + extract.linestring.apply(this, [polygon.shell]) + ')')\r\n    for (let i = 0, len = polygon.holes.length; i < len; ++i) {\r\n      array.push('(' + extract.linestring.apply(this, [polygon.holes[i]]) + ')')\r\n    }\r\n    return array.join(',')\r\n  },\r\n\r\n  /**\r\n   * Return an array of polygon arrays from a multipolygon.\r\n   *\r\n   * @param {MultiPolygon} multipolygon\r\n   * @return {String} An array of polygon arrays representing the multipolygon.\r\n   */\r\n  multipolygon (multipolygon) {\r\n    var array = []\r\n    for (let i = 0, len = multipolygon.geometries.length; i < len; ++i) {\r\n      array.push('(' + extract.polygon.apply(this, [multipolygon.geometries[i]]) + ')')\r\n    }\r\n    return array.join(',')\r\n  },\r\n\r\n  /**\r\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\r\n   * geometrycollection.\r\n   *\r\n   * @param {GeometryCollection} collection\r\n   * @return {String} internal WKT representation of the collection.\r\n   */\r\n  geometrycollection (collection) {\r\n    var array = []\r\n    for (let i = 0, len = collection.geometries.length; i < len; ++i) {\r\n      array.push(this.extractGeometry(collection.geometries[i]))\r\n    }\r\n    return array.join(',')\r\n  }\r\n}\r\n\r\n/**\r\n * Object with properties corresponding to the geometry types. Property values\r\n * are functions that do the actual parsing.\r\n * @private\r\n */\r\nconst parse = {\r\n  /**\r\n   * Return point geometry given a point WKT fragment.\r\n   *\r\n   * @param {String} str A WKT fragment representing the point.\r\n   * @return {Point} A point geometry.\r\n   * @private\r\n   */\r\n  point (str) {\r\n    if (str === undefined) {\r\n      return this.geometryFactory.createPoint()\r\n    }\r\n\r\n    var coords = str.trim().split(regExes.spaces)\r\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\r\n      Number.parseFloat(coords[1])))\r\n  },\r\n\r\n  /**\r\n   * Return a multipoint geometry given a multipoint WKT fragment.\r\n   *\r\n   * @param {String} str A WKT fragment representing the multipoint.\r\n   * @return {Point} A multipoint feature.\r\n   * @private\r\n   */\r\n  multipoint (str) {\r\n    if (str === undefined) {\r\n      return this.geometryFactory.createMultiPoint()\r\n    }\r\n\r\n    var point\r\n    var points = str.trim().split(',')\r\n    var components = []\r\n    for (let i = 0, len = points.length; i < len; ++i) {\r\n      point = points[i].replace(regExes.trimParens, '$1')\r\n      components.push(parse.point.apply(this, [point]))\r\n    }\r\n    return this.geometryFactory.createMultiPoint(components)\r\n  },\r\n\r\n  /**\r\n   * Return a linestring geometry given a linestring WKT fragment.\r\n   *\r\n   * @param {String} str A WKT fragment representing the linestring.\r\n   * @return {LineString} A linestring geometry.\r\n   * @private\r\n   */\r\n  linestring (str) {\r\n    if (str === undefined) {\r\n      return this.geometryFactory.createLineString()\r\n    }\r\n\r\n    var points = str.trim().split(',')\r\n    var components = []\r\n    var coords\r\n    for (let i = 0, len = points.length; i < len; ++i) {\r\n      coords = points[i].trim().split(regExes.spaces)\r\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])))\r\n    }\r\n    return this.geometryFactory.createLineString(components)\r\n  },\r\n\r\n  /**\r\n   * Return a linearring geometry given a linearring WKT fragment.\r\n   *\r\n   * @param {String} str A WKT fragment representing the linearring.\r\n   * @return {LinearRing} A linearring geometry.\r\n   * @private\r\n   */\r\n  linearring (str) {\r\n    if (str === undefined) {\r\n      return this.geometryFactory.createLinearRing()\r\n    }\r\n\r\n    var points = str.trim().split(',')\r\n    var components = []\r\n    var coords\r\n    for (let i = 0, len = points.length; i < len; ++i) {\r\n      coords = points[i].trim().split(regExes.spaces)\r\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])))\r\n    }\r\n    return this.geometryFactory.createLinearRing(components)\r\n  },\r\n\r\n  /**\r\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\r\n   *\r\n   * @param {String} str A WKT fragment representing the multilinestring.\r\n   * @return {MultiLineString} A multilinestring geometry.\r\n   * @private\r\n   */\r\n  multilinestring (str) {\r\n    if (str === undefined) {\r\n      return this.geometryFactory.createMultiLineString()\r\n    }\r\n\r\n    var line\r\n    var lines = str.trim().split(regExes.parenComma)\r\n    var components = []\r\n    for (let i = 0, len = lines.length; i < len; ++i) {\r\n      line = lines[i].replace(regExes.trimParens, '$1')\r\n      components.push(parse.linestring.apply(this, [line]))\r\n    }\r\n    return this.geometryFactory.createMultiLineString(components)\r\n  },\r\n\r\n  /**\r\n   * Return a polygon geometry given a polygon WKT fragment.\r\n   *\r\n   * @param {String} str A WKT fragment representing the polygon.\r\n   * @return {Polygon} A polygon geometry.\r\n   * @private\r\n   */\r\n  polygon (str) {\r\n    if (str === undefined) {\r\n      return this.geometryFactory.createPolygon()\r\n    }\r\n\r\n    var ring, linestring, linearring\r\n    var rings = str.trim().split(regExes.parenComma)\r\n    var shell\r\n    var holes = []\r\n    for (let i = 0, len = rings.length; i < len; ++i) {\r\n      ring = rings[i].replace(regExes.trimParens, '$1')\r\n      linestring = parse.linestring.apply(this, [ring])\r\n      linearring = this.geometryFactory.createLinearRing(linestring.points)\r\n      if (i === 0) {\r\n        shell = linearring\r\n      } else {\r\n        holes.push(linearring)\r\n      }\r\n    }\r\n    return this.geometryFactory.createPolygon(shell, holes)\r\n  },\r\n\r\n  /**\r\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\r\n   *\r\n   * @param {String} str A WKT fragment representing the multipolygon.\r\n   * @return {MultiPolygon} A multipolygon geometry.\r\n   * @private\r\n   */\r\n  multipolygon (str) {\r\n    if (str === undefined) {\r\n      return this.geometryFactory.createMultiPolygon()\r\n    }\r\n\r\n    var polygon\r\n    var polygons = str.trim().split(regExes.doubleParenComma)\r\n    var components = []\r\n    for (let i = 0, len = polygons.length; i < len; ++i) {\r\n      polygon = polygons[i].replace(regExes.trimParens, '$1')\r\n      components.push(parse.polygon.apply(this, [polygon]))\r\n    }\r\n    return this.geometryFactory.createMultiPolygon(components)\r\n  },\r\n\r\n  /**\r\n   * Return a geometrycollection given a geometrycollection WKT fragment.\r\n   *\r\n   * @param {String} str A WKT fragment representing the geometrycollection.\r\n   * @return {GeometryCollection}\r\n   * @private\r\n   */\r\n  geometrycollection (str) {\r\n    if (str === undefined) {\r\n      return this.geometryFactory.createGeometryCollection()\r\n    }\r\n\r\n    // separate components of the collection with |\r\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1')\r\n    var wktArray = str.trim().split('|')\r\n    var components = []\r\n    for (let i = 0, len = wktArray.length; i < len; ++i) {\r\n      components.push(this.read(wktArray[i]))\r\n    }\r\n    return this.geometryFactory.createGeometryCollection(components)\r\n  }\r\n}\r\n","import WKTParser from './WKTParser'\r\nimport extend from '../../../../extend'\r\n\r\n/**\r\n * Writes the Well-Known Text representation of a {@link Geometry}. The\r\n * Well-Known Text format is defined in the <A\r\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\r\n * Specification for SQL</A>.\r\n * <p>\r\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\r\n * model. Only the maximum number of decimal places necessary to represent the\r\n * ordinates to the required precision will be output.\r\n * <p>\r\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\r\n * Under the spec, rings are output as <code>LINESTRING</code>s.\r\n */\r\n\r\n/**\r\n * @param {GeometryFactory} geometryFactory\r\n * @constructor\r\n */\r\nexport default function WKTWriter (geometryFactory) {\r\n  this.parser = new WKTParser(geometryFactory)\r\n}\r\n\r\nextend(WKTWriter.prototype, {\r\n  /**\r\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\r\n   *\r\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\r\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\r\n   *         Features Specification).\r\n   * @memberof WKTWriter\r\n   */\r\n  write (geometry) {\r\n    return this.parser.write(geometry)\r\n  }\r\n})\r\n\r\nextend(WKTWriter, {\r\n  /**\r\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\r\n   * {@link Coordinate}s.\r\n   *\r\n   * @param p0 the first coordinate.\r\n   * @param p1 the second coordinate.\r\n   *\r\n   * @return the WKT.\r\n   * @private\r\n   */\r\n  toLineString (p0, p1) {\r\n    if (arguments.length !== 2) {\r\n      throw new Error('Not implemented')\r\n    }\r\n\r\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\r\n  }\r\n})\r\n","import StringBuffer from '../../../../java/lang/StringBuffer';\r\nimport WKTWriter from '../io/WKTWriter';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport Assert from '../util/Assert';\r\nexport default function LineIntersector() {\r\n\tthis.result = null;\r\n\tthis.inputLines = Array(2).fill().map(() => Array(2));\r\n\tthis.intPt = new Array(2).fill(null);\r\n\tthis.intLineIndex = null;\r\n\tthis._isProper = null;\r\n\tthis.pa = null;\r\n\tthis.pb = null;\r\n\tthis.precisionModel = null;\r\n\tthis.intPt[0] = new Coordinate();\r\n\tthis.intPt[1] = new Coordinate();\r\n\tthis.pa = this.intPt[0];\r\n\tthis.pb = this.intPt[1];\r\n\tthis.result = 0;\r\n}\r\nextend(LineIntersector.prototype, {\r\n\tgetIndexAlongSegment: function (segmentIndex, intIndex) {\r\n\t\tthis.computeIntLineIndex();\r\n\t\treturn this.intLineIndex[segmentIndex][intIndex];\r\n\t},\r\n\tgetTopologySummary: function () {\r\n\t\tvar catBuf = new StringBuffer();\r\n\t\tif (this.isEndPoint()) catBuf.append(\" endpoint\");\r\n\t\tif (this._isProper) catBuf.append(\" proper\");\r\n\t\tif (this.isCollinear()) catBuf.append(\" collinear\");\r\n\t\treturn catBuf.toString();\r\n\t},\r\n\tcomputeIntersection: function (p1, p2, p3, p4) {\r\n\t\tthis.inputLines[0][0] = p1;\r\n\t\tthis.inputLines[0][1] = p2;\r\n\t\tthis.inputLines[1][0] = p3;\r\n\t\tthis.inputLines[1][1] = p4;\r\n\t\tthis.result = this.computeIntersect(p1, p2, p3, p4);\r\n\t},\r\n\tgetIntersectionNum: function () {\r\n\t\treturn this.result;\r\n\t},\r\n\tcomputeIntLineIndex: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (this.intLineIndex === null) {\r\n\t\t\t\tthis.intLineIndex = Array(2).fill().map(() => Array(2));\r\n\t\t\t\tthis.computeIntLineIndex(0);\r\n\t\t\t\tthis.computeIntLineIndex(1);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet segmentIndex = arguments[0];\r\n\t\t\tvar dist0 = this.getEdgeDistance(segmentIndex, 0);\r\n\t\t\tvar dist1 = this.getEdgeDistance(segmentIndex, 1);\r\n\t\t\tif (dist0 > dist1) {\r\n\t\t\t\tthis.intLineIndex[segmentIndex][0] = 0;\r\n\t\t\t\tthis.intLineIndex[segmentIndex][1] = 1;\r\n\t\t\t} else {\r\n\t\t\t\tthis.intLineIndex[segmentIndex][0] = 1;\r\n\t\t\t\tthis.intLineIndex[segmentIndex][1] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisProper: function () {\r\n\t\treturn this.hasIntersection() && this._isProper;\r\n\t},\r\n\tsetPrecisionModel: function (precisionModel) {\r\n\t\tthis.precisionModel = precisionModel;\r\n\t},\r\n\tisInteriorIntersection: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (this.isInteriorIntersection(0)) return true;\r\n\t\t\tif (this.isInteriorIntersection(1)) return true;\r\n\t\t\treturn false;\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet inputLineIndex = arguments[0];\r\n\t\t\tfor (var i = 0; i < this.result; i++) {\r\n\t\t\t\tif (!(this.intPt[i].equals2D(this.inputLines[inputLineIndex][0]) || this.intPt[i].equals2D(this.inputLines[inputLineIndex][1]))) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tgetIntersection: function (intIndex) {\r\n\t\treturn this.intPt[intIndex];\r\n\t},\r\n\tisEndPoint: function () {\r\n\t\treturn this.hasIntersection() && !this._isProper;\r\n\t},\r\n\thasIntersection: function () {\r\n\t\treturn this.result !== LineIntersector.NO_INTERSECTION;\r\n\t},\r\n\tgetEdgeDistance: function (segmentIndex, intIndex) {\r\n\t\tvar dist = LineIntersector.computeEdgeDistance(this.intPt[intIndex], this.inputLines[segmentIndex][0], this.inputLines[segmentIndex][1]);\r\n\t\treturn dist;\r\n\t},\r\n\tisCollinear: function () {\r\n\t\treturn this.result === LineIntersector.COLLINEAR_INTERSECTION;\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn WKTWriter.toLineString(this.inputLines[0][0], this.inputLines[0][1]) + \" - \" + WKTWriter.toLineString(this.inputLines[1][0], this.inputLines[1][1]) + this.getTopologySummary();\r\n\t},\r\n\tgetEndpoint: function (segmentIndex, ptIndex) {\r\n\t\treturn this.inputLines[segmentIndex][ptIndex];\r\n\t},\r\n\tisIntersection: function (pt) {\r\n\t\tfor (var i = 0; i < this.result; i++) {\r\n\t\t\tif (this.intPt[i].equals2D(pt)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tgetIntersectionAlongSegment: function (segmentIndex, intIndex) {\r\n\t\tthis.computeIntLineIndex();\r\n\t\treturn this.intPt[this.intLineIndex[segmentIndex][intIndex]];\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineIntersector;\r\n\t}\r\n});\r\nLineIntersector.computeEdgeDistance = function (p, p0, p1) {\r\n\tvar dx = Math.abs(p1.x - p0.x);\r\n\tvar dy = Math.abs(p1.y - p0.y);\r\n\tvar dist = -1.0;\r\n\tif (p.equals(p0)) {\r\n\t\tdist = 0.0;\r\n\t} else if (p.equals(p1)) {\r\n\t\tif (dx > dy) dist = dx; else dist = dy;\r\n\t} else {\r\n\t\tvar pdx = Math.abs(p.x - p0.x);\r\n\t\tvar pdy = Math.abs(p.y - p0.y);\r\n\t\tif (dx > dy) dist = pdx; else dist = pdy;\r\n\t\tif (dist === 0.0 && !p.equals(p0)) {\r\n\t\t\tdist = Math.max(pdx, pdy);\r\n\t\t}\r\n\t}\r\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p0)), \"Bad distance calculation\");\r\n\treturn dist;\r\n};\r\nLineIntersector.nonRobustComputeEdgeDistance = function (p, p1, p2) {\r\n\tvar dx = p.x - p1.x;\r\n\tvar dy = p.y - p1.y;\r\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\r\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p1)), \"Invalid distance calculation\");\r\n\treturn dist;\r\n};\r\nLineIntersector.DONT_INTERSECT = 0;\r\nLineIntersector.DO_INTERSECT = 1;\r\nLineIntersector.COLLINEAR = 2;\r\nLineIntersector.NO_INTERSECTION = 0;\r\nLineIntersector.POINT_INTERSECTION = 1;\r\nLineIntersector.COLLINEAR_INTERSECTION = 2;\r\n","import NotRepresentableException from './NotRepresentableException';\r\nimport CGAlgorithms from './CGAlgorithms';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\r\nimport System from '../../../../java/lang/System';\r\nimport HCoordinate from './HCoordinate';\r\nimport Envelope from '../geom/Envelope';\r\nimport inherits from '../../../../inherits';\r\nimport LineIntersector from './LineIntersector';\r\nexport default function RobustLineIntersector() {\r\n\tLineIntersector.apply(this);\r\n}\r\ninherits(RobustLineIntersector, LineIntersector);\r\nextend(RobustLineIntersector.prototype, {\r\n\tisInSegmentEnvelopes: function (intPt) {\r\n\t\tvar env0 = new Envelope(this.inputLines[0][0], this.inputLines[0][1]);\r\n\t\tvar env1 = new Envelope(this.inputLines[1][0], this.inputLines[1][1]);\r\n\t\treturn env0.contains(intPt) && env1.contains(intPt);\r\n\t},\r\n\tcomputeIntersection: function () {\r\n\t\tif (arguments.length === 3) {\r\n\t\t\tlet p = arguments[0], p1 = arguments[1], p2 = arguments[2];\r\n\t\t\tthis._isProper = false;\r\n\t\t\tif (Envelope.intersects(p1, p2, p)) {\r\n\t\t\t\tif (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\r\n\t\t\t\t\tthis._isProper = true;\r\n\t\t\t\t\tif (p.equals(p1) || p.equals(p2)) {\r\n\t\t\t\t\t\tthis._isProper = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.result = LineIntersector.POINT_INTERSECTION;\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.result = LineIntersector.NO_INTERSECTION;\r\n\t\t} else return LineIntersector.prototype.computeIntersection.apply(this, arguments);\r\n\t},\r\n\tnormalizeToMinimum: function (n1, n2, n3, n4, normPt) {\r\n\t\tnormPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\r\n\t\tnormPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\r\n\t\tn1.x -= normPt.x;\r\n\t\tn1.y -= normPt.y;\r\n\t\tn2.x -= normPt.x;\r\n\t\tn2.y -= normPt.y;\r\n\t\tn3.x -= normPt.x;\r\n\t\tn3.y -= normPt.y;\r\n\t\tn4.x -= normPt.x;\r\n\t\tn4.y -= normPt.y;\r\n\t},\r\n\tsafeHCoordinateIntersection: function (p1, p2, q1, q2) {\r\n\t\tvar intPt = null;\r\n\t\ttry {\r\n\t\t\tintPt = HCoordinate.intersection(p1, p2, q1, q2);\r\n\t\t} catch (e) {\r\n\t\t\tif (e instanceof NotRepresentableException) {\r\n\t\t\t\tintPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\r\n\t\t\t} else throw e;\r\n\t\t} finally {}\r\n\t\treturn intPt;\r\n\t},\r\n\tintersection: function (p1, p2, q1, q2) {\r\n\t\tvar intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\r\n\t\tif (!this.isInSegmentEnvelopes(intPt)) {\r\n\t\t\tintPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\r\n\t\t}\r\n\t\tif (this.precisionModel !== null) {\r\n\t\t\tthis.precisionModel.makePrecise(intPt);\r\n\t\t}\r\n\t\treturn intPt;\r\n\t},\r\n\tsmallestInAbsValue: function (x1, x2, x3, x4) {\r\n\t\tvar x = x1;\r\n\t\tvar xabs = Math.abs(x);\r\n\t\tif (Math.abs(x2) < xabs) {\r\n\t\t\tx = x2;\r\n\t\t\txabs = Math.abs(x2);\r\n\t\t}\r\n\t\tif (Math.abs(x3) < xabs) {\r\n\t\t\tx = x3;\r\n\t\t\txabs = Math.abs(x3);\r\n\t\t}\r\n\t\tif (Math.abs(x4) < xabs) {\r\n\t\t\tx = x4;\r\n\t\t}\r\n\t\treturn x;\r\n\t},\r\n\tcheckDD: function (p1, p2, q1, q2, intPt) {\r\n\t\tvar intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\r\n\t\tvar isIn = this.isInSegmentEnvelopes(intPtDD);\r\n\t\tSystem.out.println(\"DD in env = \" + isIn + \"  --------------------- \" + intPtDD);\r\n\t\tif (intPt.distance(intPtDD) > 0.0001) {\r\n\t\t\tSystem.out.println(\"Distance = \" + intPt.distance(intPtDD));\r\n\t\t}\r\n\t},\r\n\tintersectionWithNormalization: function (p1, p2, q1, q2) {\r\n\t\tvar n1 = new Coordinate(p1);\r\n\t\tvar n2 = new Coordinate(p2);\r\n\t\tvar n3 = new Coordinate(q1);\r\n\t\tvar n4 = new Coordinate(q2);\r\n\t\tvar normPt = new Coordinate();\r\n\t\tthis.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\r\n\t\tvar intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\r\n\t\tintPt.x += normPt.x;\r\n\t\tintPt.y += normPt.y;\r\n\t\treturn intPt;\r\n\t},\r\n\tcomputeCollinearIntersection: function (p1, p2, q1, q2) {\r\n\t\tvar p1q1p2 = Envelope.intersects(p1, p2, q1);\r\n\t\tvar p1q2p2 = Envelope.intersects(p1, p2, q2);\r\n\t\tvar q1p1q2 = Envelope.intersects(q1, q2, p1);\r\n\t\tvar q1p2q2 = Envelope.intersects(q1, q2, p2);\r\n\t\tif (p1q1p2 && p1q2p2) {\r\n\t\t\tthis.intPt[0] = q1;\r\n\t\t\tthis.intPt[1] = q2;\r\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\r\n\t\t}\r\n\t\tif (q1p1q2 && q1p2q2) {\r\n\t\t\tthis.intPt[0] = p1;\r\n\t\t\tthis.intPt[1] = p2;\r\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\r\n\t\t}\r\n\t\tif (p1q1p2 && q1p1q2) {\r\n\t\t\tthis.intPt[0] = q1;\r\n\t\t\tthis.intPt[1] = p1;\r\n\t\t\treturn q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\r\n\t\t}\r\n\t\tif (p1q1p2 && q1p2q2) {\r\n\t\t\tthis.intPt[0] = q1;\r\n\t\t\tthis.intPt[1] = p2;\r\n\t\t\treturn q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\r\n\t\t}\r\n\t\tif (p1q2p2 && q1p1q2) {\r\n\t\t\tthis.intPt[0] = q2;\r\n\t\t\tthis.intPt[1] = p1;\r\n\t\t\treturn q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\r\n\t\t}\r\n\t\tif (p1q2p2 && q1p2q2) {\r\n\t\t\tthis.intPt[0] = q2;\r\n\t\t\tthis.intPt[1] = p2;\r\n\t\t\treturn q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\r\n\t\t}\r\n\t\treturn LineIntersector.NO_INTERSECTION;\r\n\t},\r\n\tnormalizeToEnvCentre: function (n00, n01, n10, n11, normPt) {\r\n\t\tvar minX0 = n00.x < n01.x ? n00.x : n01.x;\r\n\t\tvar minY0 = n00.y < n01.y ? n00.y : n01.y;\r\n\t\tvar maxX0 = n00.x > n01.x ? n00.x : n01.x;\r\n\t\tvar maxY0 = n00.y > n01.y ? n00.y : n01.y;\r\n\t\tvar minX1 = n10.x < n11.x ? n10.x : n11.x;\r\n\t\tvar minY1 = n10.y < n11.y ? n10.y : n11.y;\r\n\t\tvar maxX1 = n10.x > n11.x ? n10.x : n11.x;\r\n\t\tvar maxY1 = n10.y > n11.y ? n10.y : n11.y;\r\n\t\tvar intMinX = minX0 > minX1 ? minX0 : minX1;\r\n\t\tvar intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\r\n\t\tvar intMinY = minY0 > minY1 ? minY0 : minY1;\r\n\t\tvar intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\r\n\t\tvar intMidX = (intMinX + intMaxX) / 2.0;\r\n\t\tvar intMidY = (intMinY + intMaxY) / 2.0;\r\n\t\tnormPt.x = intMidX;\r\n\t\tnormPt.y = intMidY;\r\n\t\tn00.x -= normPt.x;\r\n\t\tn00.y -= normPt.y;\r\n\t\tn01.x -= normPt.x;\r\n\t\tn01.y -= normPt.y;\r\n\t\tn10.x -= normPt.x;\r\n\t\tn10.y -= normPt.y;\r\n\t\tn11.x -= normPt.x;\r\n\t\tn11.y -= normPt.y;\r\n\t},\r\n\tcomputeIntersect: function (p1, p2, q1, q2) {\r\n\t\tthis._isProper = false;\r\n\t\tif (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION;\r\n\t\tvar Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\r\n\t\tvar Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\r\n\t\tif (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) {\r\n\t\t\treturn LineIntersector.NO_INTERSECTION;\r\n\t\t}\r\n\t\tvar Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\r\n\t\tvar Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\r\n\t\tif (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) {\r\n\t\t\treturn LineIntersector.NO_INTERSECTION;\r\n\t\t}\r\n\t\tvar collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\r\n\t\tif (collinear) {\r\n\t\t\treturn this.computeCollinearIntersection(p1, p2, q1, q2);\r\n\t\t}\r\n\t\tif (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\r\n\t\t\tthis._isProper = false;\r\n\t\t\tif (p1.equals2D(q1) || p1.equals2D(q2)) {\r\n\t\t\t\tthis.intPt[0] = p1;\r\n\t\t\t} else if (p2.equals2D(q1) || p2.equals2D(q2)) {\r\n\t\t\t\tthis.intPt[0] = p2;\r\n\t\t\t} else if (Pq1 === 0) {\r\n\t\t\t\tthis.intPt[0] = new Coordinate(q1);\r\n\t\t\t} else if (Pq2 === 0) {\r\n\t\t\t\tthis.intPt[0] = new Coordinate(q2);\r\n\t\t\t} else if (Qp1 === 0) {\r\n\t\t\t\tthis.intPt[0] = new Coordinate(p1);\r\n\t\t\t} else if (Qp2 === 0) {\r\n\t\t\t\tthis.intPt[0] = new Coordinate(p2);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._isProper = true;\r\n\t\t\tthis.intPt[0] = this.intersection(p1, p2, q1, q2);\r\n\t\t}\r\n\t\treturn LineIntersector.POINT_INTERSECTION;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RobustLineIntersector;\r\n\t}\r\n});\r\nRobustLineIntersector.nearestEndpoint = function (p1, p2, q1, q2) {\r\n\tvar nearestPt = p1;\r\n\tvar minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\r\n\tvar dist = CGAlgorithms.distancePointLine(p2, q1, q2);\r\n\tif (dist < minDist) {\r\n\t\tminDist = dist;\r\n\t\tnearestPt = p2;\r\n\t}\r\n\tdist = CGAlgorithms.distancePointLine(q1, p1, p2);\r\n\tif (dist < minDist) {\r\n\t\tminDist = dist;\r\n\t\tnearestPt = q1;\r\n\t}\r\n\tdist = CGAlgorithms.distancePointLine(q2, p1, p2);\r\n\tif (dist < minDist) {\r\n\t\tminDist = dist;\r\n\t\tnearestPt = q2;\r\n\t}\r\n\treturn nearestPt;\r\n};\r\n","import extend from '../../../../extend';\r\nexport default function RobustDeterminant() {}\r\nextend(RobustDeterminant.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RobustDeterminant;\r\n\t}\r\n});\r\nRobustDeterminant.orientationIndex = function (p1, p2, q) {\r\n\tvar dx1 = p2.x - p1.x;\r\n\tvar dy1 = p2.y - p1.y;\r\n\tvar dx2 = q.x - p2.x;\r\n\tvar dy2 = q.y - p2.y;\r\n\treturn RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2);\r\n};\r\nRobustDeterminant.signOfDet2x2 = function (x1, y1, x2, y2) {\r\n\tvar sign = null;\r\n\tvar swap = null;\r\n\tvar k = null;\r\n\tvar count = 0;\r\n\tsign = 1;\r\n\tif (x1 === 0.0 || y2 === 0.0) {\r\n\t\tif (y1 === 0.0 || x2 === 0.0) {\r\n\t\t\treturn 0;\r\n\t\t} else if (y1 > 0) {\r\n\t\t\tif (x2 > 0) {\r\n\t\t\t\treturn -sign;\r\n\t\t\t} else {\r\n\t\t\t\treturn sign;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (x2 > 0) {\r\n\t\t\t\treturn sign;\r\n\t\t\t} else {\r\n\t\t\t\treturn -sign;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (y1 === 0.0 || x2 === 0.0) {\r\n\t\tif (y2 > 0) {\r\n\t\t\tif (x1 > 0) {\r\n\t\t\t\treturn sign;\r\n\t\t\t} else {\r\n\t\t\t\treturn -sign;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (x1 > 0) {\r\n\t\t\t\treturn -sign;\r\n\t\t\t} else {\r\n\t\t\t\treturn sign;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (0.0 < y1) {\r\n\t\tif (0.0 < y2) {\r\n\t\t\tif (y1 <= y2) {\r\n\t\t\t\t;\r\n\t\t\t} else {\r\n\t\t\t\tsign = -sign;\r\n\t\t\t\tswap = x1;\r\n\t\t\t\tx1 = x2;\r\n\t\t\t\tx2 = swap;\r\n\t\t\t\tswap = y1;\r\n\t\t\t\ty1 = y2;\r\n\t\t\t\ty2 = swap;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (y1 <= -y2) {\r\n\t\t\t\tsign = -sign;\r\n\t\t\t\tx2 = -x2;\r\n\t\t\t\ty2 = -y2;\r\n\t\t\t} else {\r\n\t\t\t\tswap = x1;\r\n\t\t\t\tx1 = -x2;\r\n\t\t\t\tx2 = swap;\r\n\t\t\t\tswap = y1;\r\n\t\t\t\ty1 = -y2;\r\n\t\t\t\ty2 = swap;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tif (0.0 < y2) {\r\n\t\t\tif (-y1 <= y2) {\r\n\t\t\t\tsign = -sign;\r\n\t\t\t\tx1 = -x1;\r\n\t\t\t\ty1 = -y1;\r\n\t\t\t} else {\r\n\t\t\t\tswap = -x1;\r\n\t\t\t\tx1 = x2;\r\n\t\t\t\tx2 = swap;\r\n\t\t\t\tswap = -y1;\r\n\t\t\t\ty1 = y2;\r\n\t\t\t\ty2 = swap;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (y1 >= y2) {\r\n\t\t\t\tx1 = -x1;\r\n\t\t\t\ty1 = -y1;\r\n\t\t\t\tx2 = -x2;\r\n\t\t\t\ty2 = -y2;\r\n\t\t\t\t;\r\n\t\t\t} else {\r\n\t\t\t\tsign = -sign;\r\n\t\t\t\tswap = -x1;\r\n\t\t\t\tx1 = -x2;\r\n\t\t\t\tx2 = swap;\r\n\t\t\t\tswap = -y1;\r\n\t\t\t\ty1 = -y2;\r\n\t\t\t\ty2 = swap;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (0.0 < x1) {\r\n\t\tif (0.0 < x2) {\r\n\t\t\tif (x1 <= x2) {\r\n\t\t\t\t;\r\n\t\t\t} else {\r\n\t\t\t\treturn sign;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn sign;\r\n\t\t}\r\n\t} else {\r\n\t\tif (0.0 < x2) {\r\n\t\t\treturn -sign;\r\n\t\t} else {\r\n\t\t\tif (x1 >= x2) {\r\n\t\t\t\tsign = -sign;\r\n\t\t\t\tx1 = -x1;\r\n\t\t\t\tx2 = -x2;\r\n\t\t\t\t;\r\n\t\t\t} else {\r\n\t\t\t\treturn -sign;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\twhile (true) {\r\n\t\tcount = count + 1;\r\n\t\tk = Math.floor(x2 / x1);\r\n\t\tx2 = x2 - k * x1;\r\n\t\ty2 = y2 - k * y1;\r\n\t\tif (y2 < 0.0) {\r\n\t\t\treturn -sign;\r\n\t\t}\r\n\t\tif (y2 > y1) {\r\n\t\t\treturn sign;\r\n\t\t}\r\n\t\tif (x1 > x2 + x2) {\r\n\t\t\tif (y1 < y2 + y2) {\r\n\t\t\t\treturn sign;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (y1 > y2 + y2) {\r\n\t\t\t\treturn -sign;\r\n\t\t\t} else {\r\n\t\t\t\tx2 = x1 - x2;\r\n\t\t\t\ty2 = y1 - y2;\r\n\t\t\t\tsign = -sign;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (y2 === 0.0) {\r\n\t\t\tif (x2 === 0.0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\t\t\t\treturn -sign;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (x2 === 0.0) {\r\n\t\t\treturn sign;\r\n\t\t}\r\n\t\tk = Math.floor(x1 / x2);\r\n\t\tx1 = x1 - k * x2;\r\n\t\ty1 = y1 - k * y2;\r\n\t\tif (y1 < 0.0) {\r\n\t\t\treturn sign;\r\n\t\t}\r\n\t\tif (y1 > y2) {\r\n\t\t\treturn -sign;\r\n\t\t}\r\n\t\tif (x2 > x1 + x1) {\r\n\t\t\tif (y2 < y1 + y1) {\r\n\t\t\t\treturn -sign;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (y2 > y1 + y1) {\r\n\t\t\t\treturn sign;\r\n\t\t\t} else {\r\n\t\t\t\tx1 = x2 - x1;\r\n\t\t\t\ty1 = y2 - y1;\r\n\t\t\t\tsign = -sign;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (y1 === 0.0) {\r\n\t\t\tif (x1 === 0.0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\t\t\t\treturn sign;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (x1 === 0.0) {\r\n\t\t\treturn -sign;\r\n\t\t}\r\n\t}\r\n};\r\n","import Location from '../geom/Location';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport CoordinateSequence from '../geom/CoordinateSequence';\r\nimport RobustDeterminant from './RobustDeterminant';\r\nexport default function RayCrossingCounter() {\r\n\tthis.p = null;\r\n\tthis.crossingCount = 0;\r\n\tthis.isPointOnSegment = false;\r\n\tlet p = arguments[0];\r\n\tthis.p = p;\r\n}\r\nextend(RayCrossingCounter.prototype, {\r\n\tcountSegment: function (p1, p2) {\r\n\t\tif (p1.x < this.p.x && p2.x < this.p.x) return null;\r\n\t\tif (this.p.x === p2.x && this.p.y === p2.y) {\r\n\t\t\tthis.isPointOnSegment = true;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (p1.y === this.p.y && p2.y === this.p.y) {\r\n\t\t\tvar minx = p1.x;\r\n\t\t\tvar maxx = p2.x;\r\n\t\t\tif (minx > maxx) {\r\n\t\t\t\tminx = p2.x;\r\n\t\t\t\tmaxx = p1.x;\r\n\t\t\t}\r\n\t\t\tif (this.p.x >= minx && this.p.x <= maxx) {\r\n\t\t\t\tthis.isPointOnSegment = true;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (p1.y > this.p.y && p2.y <= this.p.y || p2.y > this.p.y && p1.y <= this.p.y) {\r\n\t\t\tvar x1 = p1.x - this.p.x;\r\n\t\t\tvar y1 = p1.y - this.p.y;\r\n\t\t\tvar x2 = p2.x - this.p.x;\r\n\t\t\tvar y2 = p2.y - this.p.y;\r\n\t\t\tvar xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\r\n\t\t\tif (xIntSign === 0.0) {\r\n\t\t\t\tthis.isPointOnSegment = true;\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (y2 < y1) xIntSign = -xIntSign;\r\n\t\t\tif (xIntSign > 0.0) {\r\n\t\t\t\tthis.crossingCount++;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisPointInPolygon: function () {\r\n\t\treturn this.getLocation() !== Location.EXTERIOR;\r\n\t},\r\n\tgetLocation: function () {\r\n\t\tif (this.isPointOnSegment) return Location.BOUNDARY;\r\n\t\tif (this.crossingCount % 2 === 1) {\r\n\t\t\treturn Location.INTERIOR;\r\n\t\t}\r\n\t\treturn Location.EXTERIOR;\r\n\t},\r\n\tisOnSegment: function () {\r\n\t\treturn this.isPointOnSegment;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RayCrossingCounter;\r\n\t}\r\n});\r\nRayCrossingCounter.locatePointInRing = function () {\r\n\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\r\n\t\tlet p = arguments[0], ring = arguments[1];\r\n\t\tvar counter = new RayCrossingCounter(p);\r\n\t\tvar p1 = new Coordinate();\r\n\t\tvar p2 = new Coordinate();\r\n\t\tfor (var i = 1; i < ring.size(); i++) {\r\n\t\t\tring.getCoordinate(i, p1);\r\n\t\t\tring.getCoordinate(i - 1, p2);\r\n\t\t\tcounter.countSegment(p1, p2);\r\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\r\n\t\t}\r\n\t\treturn counter.getLocation();\r\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\r\n\t\tlet p = arguments[0], ring = arguments[1];\r\n\t\tvar counter = new RayCrossingCounter(p);\r\n\t\tfor (var i = 1; i < ring.length; i++) {\r\n\t\t\tvar p1 = ring[i];\r\n\t\t\tvar p2 = ring[i - 1];\r\n\t\t\tcounter.countSegment(p1, p2);\r\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\r\n\t\t}\r\n\t\treturn counter.getLocation();\r\n\t}\r\n};\r\n","import Location from '../geom/Location';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport MathUtil from '../math/MathUtil';\r\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\r\nimport CoordinateSequence from '../geom/CoordinateSequence';\r\nimport RobustLineIntersector from './RobustLineIntersector';\r\nimport Envelope from '../geom/Envelope';\r\nimport RayCrossingCounter from './RayCrossingCounter';\r\nexport default function CGAlgorithms() {}\r\nextend(CGAlgorithms.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CGAlgorithms;\r\n\t}\r\n});\r\nCGAlgorithms.orientationIndex = function (p1, p2, q) {\r\n\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\r\n};\r\nCGAlgorithms.signedArea = function () {\r\n\tif (arguments[0] instanceof Array) {\r\n\t\tlet ring = arguments[0];\r\n\t\tif (ring.length < 3) return 0.0;\r\n\t\tvar sum = 0.0;\r\n\t\tvar x0 = ring[0].x;\r\n\t\tfor (var i = 1; i < ring.length - 1; i++) {\r\n\t\t\tvar x = ring[i].x - x0;\r\n\t\t\tvar y1 = ring[i + 1].y;\r\n\t\t\tvar y2 = ring[i - 1].y;\r\n\t\t\tsum += x * (y2 - y1);\r\n\t\t}\r\n\t\treturn sum / 2.0;\r\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\r\n\t\tlet ring = arguments[0];\r\n\t\tvar n = ring.size();\r\n\t\tif (n < 3) return 0.0;\r\n\t\tvar p0 = new Coordinate();\r\n\t\tvar p1 = new Coordinate();\r\n\t\tvar p2 = new Coordinate();\r\n\t\tring.getCoordinate(0, p1);\r\n\t\tring.getCoordinate(1, p2);\r\n\t\tvar x0 = p1.x;\r\n\t\tp2.x -= x0;\r\n\t\tvar sum = 0.0;\r\n\t\tfor (var i = 1; i < n - 1; i++) {\r\n\t\t\tp0.y = p1.y;\r\n\t\t\tp1.x = p2.x;\r\n\t\t\tp1.y = p2.y;\r\n\t\t\tring.getCoordinate(i + 1, p2);\r\n\t\t\tp2.x -= x0;\r\n\t\t\tsum += p1.x * (p0.y - p2.y);\r\n\t\t}\r\n\t\treturn sum / 2.0;\r\n\t}\r\n};\r\nCGAlgorithms.distanceLineLine = function (A, B, C, D) {\r\n\tif (A.equals(B)) return CGAlgorithms.distancePointLine(A, C, D);\r\n\tif (C.equals(D)) return CGAlgorithms.distancePointLine(D, A, B);\r\n\tvar noIntersection = false;\r\n\tif (!Envelope.intersects(A, B, C, D)) {\r\n\t\tnoIntersection = true;\r\n\t} else {\r\n\t\tvar denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\r\n\t\tif (denom === 0) {\r\n\t\t\tnoIntersection = true;\r\n\t\t} else {\r\n\t\t\tvar r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\r\n\t\t\tvar s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\r\n\t\t\tvar s = s_num / denom;\r\n\t\t\tvar r = r_num / denom;\r\n\t\t\tif (r < 0 || r > 1 || s < 0 || s > 1) {\r\n\t\t\t\tnoIntersection = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (noIntersection) {\r\n\t\treturn MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B));\r\n\t}\r\n\treturn 0.0;\r\n};\r\nCGAlgorithms.isPointInRing = function (p, ring) {\r\n\treturn CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR;\r\n};\r\nCGAlgorithms.computeLength = function (pts) {\r\n\tvar n = pts.size();\r\n\tif (n <= 1) return 0.0;\r\n\tvar len = 0.0;\r\n\tvar p = new Coordinate();\r\n\tpts.getCoordinate(0, p);\r\n\tvar x0 = p.x;\r\n\tvar y0 = p.y;\r\n\tfor (var i = 1; i < n; i++) {\r\n\t\tpts.getCoordinate(i, p);\r\n\t\tvar x1 = p.x;\r\n\t\tvar y1 = p.y;\r\n\t\tvar dx = x1 - x0;\r\n\t\tvar dy = y1 - y0;\r\n\t\tlen += Math.sqrt(dx * dx + dy * dy);\r\n\t\tx0 = x1;\r\n\t\ty0 = y1;\r\n\t}\r\n\treturn len;\r\n};\r\nCGAlgorithms.isCCW = function (ring) {\r\n\tvar nPts = ring.length - 1;\r\n\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\r\n\tvar hiPt = ring[0];\r\n\tvar hiIndex = 0;\r\n\tfor (var i = 1; i <= nPts; i++) {\r\n\t\tvar p = ring[i];\r\n\t\tif (p.y > hiPt.y) {\r\n\t\t\thiPt = p;\r\n\t\t\thiIndex = i;\r\n\t\t}\r\n\t}\r\n\tvar iPrev = hiIndex;\r\n\tdo {\r\n\t\tiPrev = iPrev - 1;\r\n\t\tif (iPrev < 0) iPrev = nPts;\r\n\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\r\n\tvar iNext = hiIndex;\r\n\tdo {\r\n\t\tiNext = (iNext + 1) % nPts;\r\n\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\r\n\tvar prev = ring[iPrev];\r\n\tvar next = ring[iNext];\r\n\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\r\n\tvar disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\r\n\tvar isCCW = false;\r\n\tif (disc === 0) {\r\n\t\tisCCW = prev.x > next.x;\r\n\t} else {\r\n\t\tisCCW = disc > 0;\r\n\t}\r\n\treturn isCCW;\r\n};\r\nCGAlgorithms.locatePointInRing = function (p, ring) {\r\n\treturn RayCrossingCounter.locatePointInRing(p, ring);\r\n};\r\nCGAlgorithms.distancePointLinePerpendicular = function (p, A, B) {\r\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\r\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\r\n\treturn Math.abs(s) * Math.sqrt(len2);\r\n};\r\nCGAlgorithms.computeOrientation = function (p1, p2, q) {\r\n\treturn CGAlgorithms.orientationIndex(p1, p2, q);\r\n};\r\nCGAlgorithms.distancePointLine = function () {\r\n\tif (arguments.length === 2) {\r\n\t\tlet p = arguments[0], line = arguments[1];\r\n\t\tif (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\r\n\t\tvar minDistance = p.distance(line[0]);\r\n\t\tfor (var i = 0; i < line.length - 1; i++) {\r\n\t\t\tvar dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\r\n\t\t\tif (dist < minDistance) {\r\n\t\t\t\tminDistance = dist;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn minDistance;\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet p = arguments[0], A = arguments[1], B = arguments[2];\r\n\t\tif (A.x === B.x && A.y === B.y) return p.distance(A);\r\n\t\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\r\n\t\tvar r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2;\r\n\t\tif (r <= 0.0) return p.distance(A);\r\n\t\tif (r >= 1.0) return p.distance(B);\r\n\t\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\r\n\t\treturn Math.abs(s) * Math.sqrt(len2);\r\n\t}\r\n};\r\nCGAlgorithms.isOnLine = function (p, pt) {\r\n\tvar lineIntersector = new RobustLineIntersector();\r\n\tfor (var i = 1; i < pt.length; i++) {\r\n\t\tvar p0 = pt[i - 1];\r\n\t\tvar p1 = pt[i];\r\n\t\tlineIntersector.computeIntersection(p, p0, p1);\r\n\t\tif (lineIntersector.hasIntersection()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\nCGAlgorithms.CLOCKWISE = -1;\r\nCGAlgorithms.RIGHT = CGAlgorithms.CLOCKWISE;\r\nCGAlgorithms.COUNTERCLOCKWISE = 1;\r\nCGAlgorithms.LEFT = CGAlgorithms.COUNTERCLOCKWISE;\r\nCGAlgorithms.COLLINEAR = 0;\r\nCGAlgorithms.STRAIGHT = CGAlgorithms.COLLINEAR;\r\n","import NotRepresentableException from '../algorithm/NotRepresentableException';\r\nimport CGAlgorithms from '../algorithm/CGAlgorithms';\r\nimport Coordinate from './Coordinate';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\r\nimport HCoordinate from '../algorithm/HCoordinate';\r\nimport Serializable from '../../../../java/io/Serializable';\r\nexport default function LineSegment() {\r\n\tthis.p0 = null;\r\n\tthis.p1 = null;\r\n\tif (arguments.length === 0) {\r\n\t\tLineSegment.call(this, new Coordinate(), new Coordinate());\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet ls = arguments[0];\r\n\t\tLineSegment.call(this, ls.p0, ls.p1);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet p0 = arguments[0], p1 = arguments[1];\r\n\t\tthis.p0 = p0;\r\n\t\tthis.p1 = p1;\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3];\r\n\t\tLineSegment.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1));\r\n\t}\r\n}\r\nextend(LineSegment.prototype, {\r\n\tminX: function () {\r\n\t\treturn Math.min(this.p0.x, this.p1.x);\r\n\t},\r\n\torientationIndex: function () {\r\n\t\tif (arguments[0] instanceof LineSegment) {\r\n\t\t\tlet seg = arguments[0];\r\n\t\t\tvar orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\r\n\t\t\tvar orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\r\n\t\t\tif (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1);\r\n\t\t\tif (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1);\r\n\t\t\treturn 0;\r\n\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet p = arguments[0];\r\n\t\t\treturn CGAlgorithms.orientationIndex(this.p0, this.p1, p);\r\n\t\t}\r\n\t},\r\n\ttoGeometry: function (geomFactory) {\r\n\t\treturn geomFactory.createLineString([this.p0, this.p1]);\r\n\t},\r\n\tisVertical: function () {\r\n\t\treturn this.p0.x === this.p1.x;\r\n\t},\r\n\tequals: function (o) {\r\n\t\tif (!(o instanceof LineSegment)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar other = o;\r\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1);\r\n\t},\r\n\tintersection: function (line) {\r\n\t\tvar li = new RobustLineIntersector();\r\n\t\tli.computeIntersection(this.p0, this.p1, line.p0, line.p1);\r\n\t\tif (li.hasIntersection()) return li.getIntersection(0);\r\n\t\treturn null;\r\n\t},\r\n\tproject: function () {\r\n\t\tif (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet p = arguments[0];\r\n\t\t\tif (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p);\r\n\t\t\tvar r = this.projectionFactor(p);\r\n\t\t\tvar coord = new Coordinate();\r\n\t\t\tcoord.x = this.p0.x + r * (this.p1.x - this.p0.x);\r\n\t\t\tcoord.y = this.p0.y + r * (this.p1.y - this.p0.y);\r\n\t\t\treturn coord;\r\n\t\t} else if (arguments[0] instanceof LineSegment) {\r\n\t\t\tlet seg = arguments[0];\r\n\t\t\tvar pf0 = this.projectionFactor(seg.p0);\r\n\t\t\tvar pf1 = this.projectionFactor(seg.p1);\r\n\t\t\tif (pf0 >= 1.0 && pf1 >= 1.0) return null;\r\n\t\t\tif (pf0 <= 0.0 && pf1 <= 0.0) return null;\r\n\t\t\tvar newp0 = this.project(seg.p0);\r\n\t\t\tif (pf0 < 0.0) newp0 = this.p0;\r\n\t\t\tif (pf0 > 1.0) newp0 = this.p1;\r\n\t\t\tvar newp1 = this.project(seg.p1);\r\n\t\t\tif (pf1 < 0.0) newp1 = this.p0;\r\n\t\t\tif (pf1 > 1.0) newp1 = this.p1;\r\n\t\t\treturn new LineSegment(newp0, newp1);\r\n\t\t}\r\n\t},\r\n\tnormalize: function () {\r\n\t\tif (this.p1.compareTo(this.p0) < 0) this.reverse();\r\n\t},\r\n\tangle: function () {\r\n\t\treturn Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);\r\n\t},\r\n\tgetCoordinate: function (i) {\r\n\t\tif (i === 0) return this.p0;\r\n\t\treturn this.p1;\r\n\t},\r\n\tdistancePerpendicular: function (p) {\r\n\t\treturn CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1);\r\n\t},\r\n\tminY: function () {\r\n\t\treturn Math.min(this.p0.y, this.p1.y);\r\n\t},\r\n\tmidPoint: function () {\r\n\t\treturn LineSegment.midPoint(this.p0, this.p1);\r\n\t},\r\n\tprojectionFactor: function (p) {\r\n\t\tif (p.equals(this.p0)) return 0.0;\r\n\t\tif (p.equals(this.p1)) return 1.0;\r\n\t\tvar dx = this.p1.x - this.p0.x;\r\n\t\tvar dy = this.p1.y - this.p0.y;\r\n\t\tvar len = dx * dx + dy * dy;\r\n\t\tif (len <= 0.0) return Double.NaN;\r\n\t\tvar r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\r\n\t\treturn r;\r\n\t},\r\n\tclosestPoints: function (line) {\r\n\t\tvar intPt = this.intersection(line);\r\n\t\tif (intPt !== null) {\r\n\t\t\treturn [intPt, intPt];\r\n\t\t}\r\n\t\tvar closestPt = new Array(2).fill(null);\r\n\t\tvar minDistance = Double.MAX_VALUE;\r\n\t\tvar dist = null;\r\n\t\tvar close00 = this.closestPoint(line.p0);\r\n\t\tminDistance = close00.distance(line.p0);\r\n\t\tclosestPt[0] = close00;\r\n\t\tclosestPt[1] = line.p0;\r\n\t\tvar close01 = this.closestPoint(line.p1);\r\n\t\tdist = close01.distance(line.p1);\r\n\t\tif (dist < minDistance) {\r\n\t\t\tminDistance = dist;\r\n\t\t\tclosestPt[0] = close01;\r\n\t\t\tclosestPt[1] = line.p1;\r\n\t\t}\r\n\t\tvar close10 = line.closestPoint(this.p0);\r\n\t\tdist = close10.distance(this.p0);\r\n\t\tif (dist < minDistance) {\r\n\t\t\tminDistance = dist;\r\n\t\t\tclosestPt[0] = this.p0;\r\n\t\t\tclosestPt[1] = close10;\r\n\t\t}\r\n\t\tvar close11 = line.closestPoint(this.p1);\r\n\t\tdist = close11.distance(this.p1);\r\n\t\tif (dist < minDistance) {\r\n\t\t\tminDistance = dist;\r\n\t\t\tclosestPt[0] = this.p1;\r\n\t\t\tclosestPt[1] = close11;\r\n\t\t}\r\n\t\treturn closestPt;\r\n\t},\r\n\tclosestPoint: function (p) {\r\n\t\tvar factor = this.projectionFactor(p);\r\n\t\tif (factor > 0 && factor < 1) {\r\n\t\t\treturn this.project(p);\r\n\t\t}\r\n\t\tvar dist0 = this.p0.distance(p);\r\n\t\tvar dist1 = this.p1.distance(p);\r\n\t\tif (dist0 < dist1) return this.p0;\r\n\t\treturn this.p1;\r\n\t},\r\n\tmaxX: function () {\r\n\t\treturn Math.max(this.p0.x, this.p1.x);\r\n\t},\r\n\tgetLength: function () {\r\n\t\treturn this.p0.distance(this.p1);\r\n\t},\r\n\tcompareTo: function (o) {\r\n\t\tvar other = o;\r\n\t\tvar comp0 = this.p0.compareTo(other.p0);\r\n\t\tif (comp0 !== 0) return comp0;\r\n\t\treturn this.p1.compareTo(other.p1);\r\n\t},\r\n\treverse: function () {\r\n\t\tvar temp = this.p0;\r\n\t\tthis.p0 = this.p1;\r\n\t\tthis.p1 = temp;\r\n\t},\r\n\tequalsTopo: function (other) {\r\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0);\r\n\t},\r\n\tlineIntersection: function (line) {\r\n\t\ttry {\r\n\t\t\tvar intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\r\n\t\t\treturn intPt;\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex instanceof NotRepresentableException) {} else throw ex;\r\n\t\t} finally {}\r\n\t\treturn null;\r\n\t},\r\n\tmaxY: function () {\r\n\t\treturn Math.max(this.p0.y, this.p1.y);\r\n\t},\r\n\tpointAlongOffset: function (segmentLengthFraction, offsetDistance) {\r\n\t\tvar segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\r\n\t\tvar segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\r\n\t\tvar dx = this.p1.x - this.p0.x;\r\n\t\tvar dy = this.p1.y - this.p0.y;\r\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\r\n\t\tvar ux = 0.0;\r\n\t\tvar uy = 0.0;\r\n\t\tif (offsetDistance !== 0.0) {\r\n\t\t\tif (len <= 0.0) throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");\r\n\t\t\tux = offsetDistance * dx / len;\r\n\t\t\tuy = offsetDistance * dy / len;\r\n\t\t}\r\n\t\tvar offsetx = segx - uy;\r\n\t\tvar offsety = segy + ux;\r\n\t\tvar coord = new Coordinate(offsetx, offsety);\r\n\t\treturn coord;\r\n\t},\r\n\tsetCoordinates: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet ls = arguments[0];\r\n\t\t\tthis.setCoordinates(ls.p0, ls.p1);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\r\n\t\t\tthis.p0.x = p0.x;\r\n\t\t\tthis.p0.y = p0.y;\r\n\t\t\tthis.p1.x = p1.x;\r\n\t\t\tthis.p1.y = p1.y;\r\n\t\t}\r\n\t},\r\n\tsegmentFraction: function (inputPt) {\r\n\t\tvar segFrac = this.projectionFactor(inputPt);\r\n\t\tif (segFrac < 0.0) segFrac = 0.0; else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0;\r\n\t\treturn segFrac;\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn \"LINESTRING( \" + this.p0.x + \" \" + this.p0.y + \", \" + this.p1.x + \" \" + this.p1.y + \")\";\r\n\t},\r\n\tisHorizontal: function () {\r\n\t\treturn this.p0.y === this.p1.y;\r\n\t},\r\n\tdistance: function () {\r\n\t\tif (arguments[0] instanceof LineSegment) {\r\n\t\t\tlet ls = arguments[0];\r\n\t\t\treturn CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1);\r\n\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet p = arguments[0];\r\n\t\t\treturn CGAlgorithms.distancePointLine(p, this.p0, this.p1);\r\n\t\t}\r\n\t},\r\n\tpointAlong: function (segmentLengthFraction) {\r\n\t\tvar coord = new Coordinate();\r\n\t\tcoord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\r\n\t\tcoord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\r\n\t\treturn coord;\r\n\t},\r\n\thashCode: function () {\r\n\t\tvar bits0 = java.lang.Double.doubleToLongBits(this.p0.x);\r\n\t\tbits0 ^= java.lang.Double.doubleToLongBits(this.p0.y) * 31;\r\n\t\tvar hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\r\n\t\tvar bits1 = java.lang.Double.doubleToLongBits(this.p1.x);\r\n\t\tbits1 ^= java.lang.Double.doubleToLongBits(this.p1.y) * 31;\r\n\t\tvar hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\r\n\t\treturn hash0 ^ hash1;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineSegment;\r\n\t}\r\n});\r\nLineSegment.midPoint = function (p0, p1) {\r\n\treturn new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\r\n};\r\nLineSegment.serialVersionUID = 3252005833466256227;\r\n","import StringBuffer from '../../../../java/lang/StringBuffer';\r\nimport Location from './Location';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport Dimension from './Dimension';\r\nimport Cloneable from '../../../../java/lang/Cloneable';\r\nexport default function IntersectionMatrix() {\r\n\tthis.matrix = null;\r\n\tif (arguments.length === 0) {\r\n\t\tthis.matrix = Array(3).fill().map(() => Array(3));\r\n\t\tthis.setAll(Dimension.FALSE);\r\n\t} else if (arguments.length === 1) {\r\n\t\tif (typeof arguments[0] === \"string\") {\r\n\t\t\tlet elements = arguments[0];\r\n\t\t\tIntersectionMatrix.call(this);\r\n\t\t\tthis.set(elements);\r\n\t\t} else if (arguments[0] instanceof IntersectionMatrix) {\r\n\t\t\tlet other = arguments[0];\r\n\t\t\tIntersectionMatrix.call(this);\r\n\t\t\tthis.matrix[Location.INTERIOR][Location.INTERIOR] = other.matrix[Location.INTERIOR][Location.INTERIOR];\r\n\t\t\tthis.matrix[Location.INTERIOR][Location.BOUNDARY] = other.matrix[Location.INTERIOR][Location.BOUNDARY];\r\n\t\t\tthis.matrix[Location.INTERIOR][Location.EXTERIOR] = other.matrix[Location.INTERIOR][Location.EXTERIOR];\r\n\t\t\tthis.matrix[Location.BOUNDARY][Location.INTERIOR] = other.matrix[Location.BOUNDARY][Location.INTERIOR];\r\n\t\t\tthis.matrix[Location.BOUNDARY][Location.BOUNDARY] = other.matrix[Location.BOUNDARY][Location.BOUNDARY];\r\n\t\t\tthis.matrix[Location.BOUNDARY][Location.EXTERIOR] = other.matrix[Location.BOUNDARY][Location.EXTERIOR];\r\n\t\t\tthis.matrix[Location.EXTERIOR][Location.INTERIOR] = other.matrix[Location.EXTERIOR][Location.INTERIOR];\r\n\t\t\tthis.matrix[Location.EXTERIOR][Location.BOUNDARY] = other.matrix[Location.EXTERIOR][Location.BOUNDARY];\r\n\t\t\tthis.matrix[Location.EXTERIOR][Location.EXTERIOR] = other.matrix[Location.EXTERIOR][Location.EXTERIOR];\r\n\t\t}\r\n\t}\r\n}\r\nextend(IntersectionMatrix.prototype, {\r\n\tisIntersects: function () {\r\n\t\treturn !this.isDisjoint();\r\n\t},\r\n\tisCovers: function () {\r\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);\r\n\t\treturn hasPointInCommon && this.matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\r\n\t},\r\n\tisCoveredBy: function () {\r\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]);\r\n\t\treturn hasPointInCommon && this.matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\r\n\t},\r\n\tset: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet dimensionSymbols = arguments[0];\r\n\t\t\tfor (var i = 0; i < dimensionSymbols.length; i++) {\r\n\t\t\t\tvar row = Math.trunc(i / 3);\r\n\t\t\t\tvar col = i % 3;\r\n\t\t\t\tthis.matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i));\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet row = arguments[0], column = arguments[1], dimensionValue = arguments[2];\r\n\t\t\tthis.matrix[row][column] = dimensionValue;\r\n\t\t}\r\n\t},\r\n\tisContains: function () {\r\n\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && this.matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\r\n\t},\r\n\tsetAtLeast: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet minimumDimensionSymbols = arguments[0];\r\n\t\t\tfor (var i = 0; i < minimumDimensionSymbols.length; i++) {\r\n\t\t\t\tvar row = Math.trunc(i / 3);\r\n\t\t\t\tvar col = i % 3;\r\n\t\t\t\tthis.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet row = arguments[0], column = arguments[1], minimumDimensionValue = arguments[2];\r\n\t\t\tif (this.matrix[row][column] < minimumDimensionValue) {\r\n\t\t\t\tthis.matrix[row][column] = minimumDimensionValue;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tsetAtLeastIfValid: function (row, column, minimumDimensionValue) {\r\n\t\tif (row >= 0 && column >= 0) {\r\n\t\t\tthis.setAtLeast(row, column, minimumDimensionValue);\r\n\t\t}\r\n\t},\r\n\tisWithin: function () {\r\n\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && this.matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\r\n\t},\r\n\tisTouches: function (dimensionOfGeometryA, dimensionOfGeometryB) {\r\n\t\tif (dimensionOfGeometryA > dimensionOfGeometryB) {\r\n\t\t\treturn this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA);\r\n\t\t}\r\n\t\tif (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) {\r\n\t\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this.matrix[Location.BOUNDARY][Location.BOUNDARY]));\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tisOverlaps: function (dimensionOfGeometryA, dimensionOfGeometryB) {\r\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) {\r\n\t\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);\r\n\t\t}\r\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\r\n\t\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tisEquals: function (dimensionOfGeometryA, dimensionOfGeometryB) {\r\n\t\tif (dimensionOfGeometryA !== dimensionOfGeometryB) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && this.matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar buf = new StringBuffer(\"123456789\");\r\n\t\tfor (var ai = 0; ai < 3; ai++) {\r\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\r\n\t\t\t\tbuf.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this.matrix[ai][bi]));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t},\r\n\tsetAll: function (dimensionValue) {\r\n\t\tfor (var ai = 0; ai < 3; ai++) {\r\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\r\n\t\t\t\tthis.matrix[ai][bi] = dimensionValue;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tget: function (row, column) {\r\n\t\treturn this.matrix[row][column];\r\n\t},\r\n\ttranspose: function () {\r\n\t\tvar temp = this.matrix[1][0];\r\n\t\tthis.matrix[1][0] = this.matrix[0][1];\r\n\t\tthis.matrix[0][1] = temp;\r\n\t\ttemp = this.matrix[2][0];\r\n\t\tthis.matrix[2][0] = this.matrix[0][2];\r\n\t\tthis.matrix[0][2] = temp;\r\n\t\ttemp = this.matrix[2][1];\r\n\t\tthis.matrix[2][1] = this.matrix[1][2];\r\n\t\tthis.matrix[1][2] = temp;\r\n\t\treturn this;\r\n\t},\r\n\tmatches: function (requiredDimensionSymbols) {\r\n\t\tif (requiredDimensionSymbols.length !== 9) {\r\n\t\t\tthrow new IllegalArgumentException(\"Should be length 9: \" + requiredDimensionSymbols);\r\n\t\t}\r\n\t\tfor (var ai = 0; ai < 3; ai++) {\r\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\r\n\t\t\t\tif (!IntersectionMatrix.matches(this.matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tadd: function (im) {\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\t\tthis.setAtLeast(i, j, im.get(i, j));\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisDisjoint: function () {\r\n\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this.matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE;\r\n\t},\r\n\tisCrosses: function (dimensionOfGeometryA, dimensionOfGeometryB) {\r\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) {\r\n\t\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.EXTERIOR]);\r\n\t\t}\r\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) {\r\n\t\t\treturn IntersectionMatrix.isTrue(this.matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this.matrix[Location.EXTERIOR][Location.INTERIOR]);\r\n\t\t}\r\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\r\n\t\t\treturn this.matrix[Location.INTERIOR][Location.INTERIOR] === 0;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Cloneable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IntersectionMatrix;\r\n\t}\r\n});\r\nIntersectionMatrix.matches = function () {\r\n\tif (Number.isInteger(arguments[0]) && typeof arguments[1] === \"string\") {\r\n\t\tlet actualDimensionValue = arguments[0], requiredDimensionSymbol = arguments[1];\r\n\t\tif (requiredDimensionSymbol === Dimension.SYM_DONTCARE) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t} else if (typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\r\n\t\tlet actualDimensionSymbols = arguments[0], requiredDimensionSymbols = arguments[1];\r\n\t\tvar m = new IntersectionMatrix(actualDimensionSymbols);\r\n\t\treturn m.matches(requiredDimensionSymbols);\r\n\t}\r\n};\r\nIntersectionMatrix.isTrue = function (actualDimensionValue) {\r\n\tif (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) {\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n};\r\n","import LineString from '../geom/LineString';\r\nimport CGAlgorithms from './CGAlgorithms';\r\nimport Geometry from '../geom/Geometry';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport Point from '../geom/Point';\r\nimport Polygon from '../geom/Polygon';\r\nimport extend from '../../../../extend';\r\nimport GeometryCollection from '../geom/GeometryCollection';\r\nexport default function Centroid() {\r\n\tthis.areaBasePt = null;\r\n\tthis.triangleCent3 = new Coordinate();\r\n\tthis.areasum2 = 0;\r\n\tthis.cg3 = new Coordinate();\r\n\tthis.lineCentSum = new Coordinate();\r\n\tthis.totalLength = 0.0;\r\n\tthis.ptCount = 0;\r\n\tthis.ptCentSum = new Coordinate();\r\n\tlet geom = arguments[0];\r\n\tthis.areaBasePt = null;\r\n\tthis.add(geom);\r\n}\r\nextend(Centroid.prototype, {\r\n\taddPoint: function (pt) {\r\n\t\tthis.ptCount += 1;\r\n\t\tthis.ptCentSum.x += pt.x;\r\n\t\tthis.ptCentSum.y += pt.y;\r\n\t},\r\n\tsetBasePoint: function (basePt) {\r\n\t\tif (this.areaBasePt === null) this.areaBasePt = basePt;\r\n\t},\r\n\taddLineSegments: function (pts) {\r\n\t\tvar lineLen = 0.0;\r\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\r\n\t\t\tvar segmentLen = pts[i].distance(pts[i + 1]);\r\n\t\t\tif (segmentLen === 0.0) continue;\r\n\t\t\tlineLen += segmentLen;\r\n\t\t\tvar midx = (pts[i].x + pts[i + 1].x) / 2;\r\n\t\t\tthis.lineCentSum.x += segmentLen * midx;\r\n\t\t\tvar midy = (pts[i].y + pts[i + 1].y) / 2;\r\n\t\t\tthis.lineCentSum.y += segmentLen * midy;\r\n\t\t}\r\n\t\tthis.totalLength += lineLen;\r\n\t\tif (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0]);\r\n\t},\r\n\taddHole: function (pts) {\r\n\t\tvar isPositiveArea = CGAlgorithms.isCCW(pts);\r\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\r\n\t\t\tthis.addTriangle(this.areaBasePt, pts[i], pts[i + 1], isPositiveArea);\r\n\t\t}\r\n\t\tthis.addLineSegments(pts);\r\n\t},\r\n\tgetCentroid: function () {\r\n\t\tvar cent = new Coordinate();\r\n\t\tif (Math.abs(this.areasum2) > 0.0) {\r\n\t\t\tcent.x = this.cg3.x / 3 / this.areasum2;\r\n\t\t\tcent.y = this.cg3.y / 3 / this.areasum2;\r\n\t\t} else if (this.totalLength > 0.0) {\r\n\t\t\tcent.x = this.lineCentSum.x / this.totalLength;\r\n\t\t\tcent.y = this.lineCentSum.y / this.totalLength;\r\n\t\t} else if (this.ptCount > 0) {\r\n\t\t\tcent.x = this.ptCentSum.x / this.ptCount;\r\n\t\t\tcent.y = this.ptCentSum.y / this.ptCount;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn cent;\r\n\t},\r\n\taddShell: function (pts) {\r\n\t\tif (pts.length > 0) this.setBasePoint(pts[0]);\r\n\t\tvar isPositiveArea = !CGAlgorithms.isCCW(pts);\r\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\r\n\t\t\tthis.addTriangle(this.areaBasePt, pts[i], pts[i + 1], isPositiveArea);\r\n\t\t}\r\n\t\tthis.addLineSegments(pts);\r\n\t},\r\n\taddTriangle: function (p0, p1, p2, isPositiveArea) {\r\n\t\tvar sign = isPositiveArea ? 1.0 : -1.0;\r\n\t\tCentroid.centroid3(p0, p1, p2, this.triangleCent3);\r\n\t\tvar area2 = Centroid.area2(p0, p1, p2);\r\n\t\tthis.cg3.x += sign * area2 * this.triangleCent3.x;\r\n\t\tthis.cg3.y += sign * area2 * this.triangleCent3.y;\r\n\t\tthis.areasum2 += sign * area2;\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments[0] instanceof Polygon) {\r\n\t\t\tlet poly = arguments[0];\r\n\t\t\tthis.addShell(poly.getExteriorRing().getCoordinates());\r\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\r\n\t\t\t\tthis.addHole(poly.getInteriorRingN(i).getCoordinates());\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geom = arguments[0];\r\n\t\t\tif (geom.isEmpty()) return null;\r\n\t\t\tif (geom instanceof Point) {\r\n\t\t\t\tthis.addPoint(geom.getCoordinate());\r\n\t\t\t} else if (geom instanceof LineString) {\r\n\t\t\t\tthis.addLineSegments(geom.getCoordinates());\r\n\t\t\t} else if (geom instanceof Polygon) {\r\n\t\t\t\tvar poly = geom;\r\n\t\t\t\tthis.add(poly);\r\n\t\t\t} else if (geom instanceof GeometryCollection) {\r\n\t\t\t\tvar gc = geom;\r\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\r\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Centroid;\r\n\t}\r\n});\r\nCentroid.area2 = function (p1, p2, p3) {\r\n\treturn (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);\r\n};\r\nCentroid.centroid3 = function (p1, p2, p3, c) {\r\n\tc.x = p1.x + p2.x + p3.x;\r\n\tc.y = p1.y + p2.y + p3.y;\r\n\treturn null;\r\n};\r\nCentroid.getCentroid = function (geom) {\r\n\tvar cent = new Centroid(geom);\r\n\treturn cent.getCentroid();\r\n};\r\n","/**\r\n * @param {string=} message Optional message\r\n * @extends {Error}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function EmptyStackException(message) {\r\n  this.message = message || '';\r\n};\r\nEmptyStackException.prototype = new Error();\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nEmptyStackException.prototype.name = 'EmptyStackException';\r\n","import EmptyStackException from './EmptyStackException'\r\nimport List from './List'\r\n\r\n/**\r\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\r\n *\r\n * @extends {List}\r\n * @constructor\r\n * @private\r\n */\r\nexport default function Stack() {\r\n  /**\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  this.array_ = [];\r\n};\r\nStack.prototype = new List();\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nStack.prototype.add = function(e) {\r\n  this.array_.push(e);\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * @override\r\n */\r\nStack.prototype.get = function(index) {\r\n  if (index < 0 || index >= this.size()) {\r\n    throw new IndexOutOfBoundsException();\r\n  }\r\n\r\n  return this.array_[index];\r\n};\r\n\r\n\r\n/**\r\n * Pushes an item onto the top of this stack.\r\n * @param {Object} e\r\n * @return {Object}\r\n */\r\nStack.prototype.push = function(e) {\r\n  this.array_.push(e);\r\n  return e;\r\n};\r\n\r\n\r\n/**\r\n * Pushes an item onto the top of this stack.\r\n * @param {Object} e\r\n * @return {Object}\r\n */\r\nStack.prototype.pop = function(e) {\r\n  if (this.array_.length === 0) {\r\n    throw new EmptyStackException();\r\n  }\r\n\r\n  return this.array_.pop();\r\n};\r\n\r\n\r\n/**\r\n * Looks at the object at the top of this stack without removing it from the\r\n * stack.\r\n * @return {Object}\r\n */\r\nStack.prototype.peek = function() {\r\n  if (this.array_.length === 0) {\r\n    throw new EmptyStackException();\r\n  }\r\n\r\n  return this.array_[this.array_.length - 1];\r\n};\r\n\r\n\r\n/**\r\n * Tests if this stack is empty.\r\n * @return {boolean} true if and only if this stack contains no items; false\r\n *         otherwise.\r\n */\r\nStack.prototype.empty = function() {\r\n  if (this.array_.length === 0) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @return {boolean}\r\n */\r\nStack.prototype.isEmpty = function() {\r\n  return this.empty();\r\n};\r\n\r\n\r\n/**\r\n * Returns the 1-based position where an object is on this stack. If the object\r\n * o occurs as an item in this stack, this method returns the distance from the\r\n * top of the stack of the occurrence nearest the top of the stack; the topmost\r\n * item on the stack is considered to be at distance 1. The equals method is\r\n * used to compare o to the items in this stack.\r\n *\r\n * NOTE: does not currently actually use equals. (=== is used)\r\n *\r\n * @param {Object} o\r\n * @return {number} the 1-based position from the top of the stack where the\r\n *         object is located; the return value -1 indicates that the object is\r\n *         not on the stack.\r\n */\r\nStack.prototype.search = function(o) {\r\n  return this.array_.indexOf(o);\r\n};\r\n\r\n\r\n/**\r\n * @return {number}\r\n * @export\r\n */\r\nStack.prototype.size = function() {\r\n  return this.array_.length;\r\n};\r\n\r\n\r\n/**\r\n * @return {Array}\r\n */\r\nStack.prototype.toArray = function() {\r\n  var array = [];\r\n\r\n  for (var i = 0, len = this.array_.length; i < len; i++) {\r\n    array.push(this.array_[i]);\r\n  }\r\n\r\n  return array;\r\n};\r\n","import TreeSet from '../../../../java/util/TreeSet';\r\nimport CoordinateFilter from '../geom/CoordinateFilter';\r\nimport extend from '../../../../extend';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function UniqueCoordinateArrayFilter() {\r\n\tthis.treeSet = new TreeSet();\r\n\tthis.list = new ArrayList();\r\n}\r\nextend(UniqueCoordinateArrayFilter.prototype, {\r\n\tfilter: function (coord) {\r\n\t\tif (!this.treeSet.contains(coord)) {\r\n\t\t\tthis.list.add(coord);\r\n\t\t\tthis.treeSet.add(coord);\r\n\t\t}\r\n\t},\r\n\tgetCoordinates: function () {\r\n\t\tvar coordinates = new Array(this.list.size()).fill(null);\r\n\t\treturn this.list.toArray(coordinates);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [CoordinateFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn UniqueCoordinateArrayFilter;\r\n\t}\r\n});\r\nUniqueCoordinateArrayFilter.filterCoordinates = function (coords) {\r\n\tvar filter = new UniqueCoordinateArrayFilter();\r\n\tfor (var i = 0; i < coords.length; i++) {\r\n\t\tfilter.filter(coords[i]);\r\n\t}\r\n\treturn filter.getCoordinates();\r\n};\r\n","import TreeSet from '../../../../java/util/TreeSet';\r\nimport CGAlgorithms from './CGAlgorithms';\r\nimport CoordinateList from '../geom/CoordinateList';\r\nimport Arrays from '../../../../java/util/Arrays';\r\nimport Stack from '../../../../java/util/Stack';\r\nimport extend from '../../../../extend';\r\nimport CoordinateArrays from '../geom/CoordinateArrays';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Comparator from '../../../../java/util/Comparator';\r\nimport UniqueCoordinateArrayFilter from '../util/UniqueCoordinateArrayFilter';\r\nimport Assert from '../util/Assert';\r\nexport default function ConvexHull() {\r\n\tthis.geomFactory = null;\r\n\tthis.inputPts = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet geometry = arguments[0];\r\n\t\tConvexHull.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory());\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet pts = arguments[0], geomFactory = arguments[1];\r\n\t\tthis.inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts);\r\n\t\tthis.geomFactory = geomFactory;\r\n\t}\r\n}\r\nextend(ConvexHull.prototype, {\r\n\tpreSort: function (pts) {\r\n\t\tvar t = null;\r\n\t\tfor (var i = 1; i < pts.length; i++) {\r\n\t\t\tif (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\r\n\t\t\t\tt = pts[0];\r\n\t\t\t\tpts[0] = pts[i];\r\n\t\t\t\tpts[i] = t;\r\n\t\t\t}\r\n\t\t}\r\n\t\tArrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]));\r\n\t\treturn pts;\r\n\t},\r\n\tcomputeOctRing: function (inputPts) {\r\n\t\tvar octPts = this.computeOctPts(inputPts);\r\n\t\tvar coordList = new CoordinateList();\r\n\t\tcoordList.add(octPts, false);\r\n\t\tif (coordList.size() < 3) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tcoordList.closeRing();\r\n\t\treturn coordList.toCoordinateArray();\r\n\t},\r\n\tlineOrPolygon: function (coordinates) {\r\n\t\tcoordinates = this.cleanRing(coordinates);\r\n\t\tif (coordinates.length === 3) {\r\n\t\t\treturn this.geomFactory.createLineString([coordinates[0], coordinates[1]]);\r\n\t\t}\r\n\t\tvar linearRing = this.geomFactory.createLinearRing(coordinates);\r\n\t\treturn this.geomFactory.createPolygon(linearRing, null);\r\n\t},\r\n\tcleanRing: function (original) {\r\n\t\tAssert.equals(original[0], original[original.length - 1]);\r\n\t\tvar cleanedRing = new ArrayList();\r\n\t\tvar previousDistinctCoordinate = null;\r\n\t\tfor (var i = 0; i <= original.length - 2; i++) {\r\n\t\t\tvar currentCoordinate = original[i];\r\n\t\t\tvar nextCoordinate = original[i + 1];\r\n\t\t\tif (currentCoordinate.equals(nextCoordinate)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tcleanedRing.add(currentCoordinate);\r\n\t\t\tpreviousDistinctCoordinate = currentCoordinate;\r\n\t\t}\r\n\t\tcleanedRing.add(original[original.length - 1]);\r\n\t\tvar cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null);\r\n\t\treturn cleanedRing.toArray(cleanedRingCoordinates);\r\n\t},\r\n\tisBetween: function (c1, c2, c3) {\r\n\t\tif (CGAlgorithms.computeOrientation(c1, c2, c3) !== 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (c1.x !== c3.x) {\r\n\t\t\tif (c1.x <= c2.x && c2.x <= c3.x) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (c3.x <= c2.x && c2.x <= c1.x) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (c1.y !== c3.y) {\r\n\t\t\tif (c1.y <= c2.y && c2.y <= c3.y) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (c3.y <= c2.y && c2.y <= c1.y) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\treduce: function (inputPts) {\r\n\t\tvar polyPts = this.computeOctRing(inputPts);\r\n\t\tif (polyPts === null) return inputPts;\r\n\t\tvar reducedSet = new TreeSet();\r\n\t\tfor (var i = 0; i < polyPts.length; i++) {\r\n\t\t\treducedSet.add(polyPts[i]);\r\n\t\t}\r\n\t\tfor (var i = 0; i < inputPts.length; i++) {\r\n\t\t\tif (!CGAlgorithms.isPointInRing(inputPts[i], polyPts)) {\r\n\t\t\t\treducedSet.add(inputPts[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar reducedPts = CoordinateArrays.toCoordinateArray(reducedSet);\r\n\t\tif (reducedPts.length < 3) return this.padArray3(reducedPts);\r\n\t\treturn reducedPts;\r\n\t},\r\n\tgetConvexHull: function () {\r\n\t\tif (this.inputPts.length === 0) {\r\n\t\t\treturn this.geomFactory.createGeometryCollection(null);\r\n\t\t}\r\n\t\tif (this.inputPts.length === 1) {\r\n\t\t\treturn this.geomFactory.createPoint(this.inputPts[0]);\r\n\t\t}\r\n\t\tif (this.inputPts.length === 2) {\r\n\t\t\treturn this.geomFactory.createLineString(this.inputPts);\r\n\t\t}\r\n\t\tvar reducedPts = this.inputPts;\r\n\t\tif (this.inputPts.length > 50) {\r\n\t\t\treducedPts = this.reduce(this.inputPts);\r\n\t\t}\r\n\t\tvar sortedPts = this.preSort(reducedPts);\r\n\t\tvar cHS = this.grahamScan(sortedPts);\r\n\t\tvar cH = this.toCoordinateArray(cHS);\r\n\t\treturn this.lineOrPolygon(cH);\r\n\t},\r\n\tpadArray3: function (pts) {\r\n\t\tvar pad = new Array(3).fill(null);\r\n\t\tfor (var i = 0; i < pad.length; i++) {\r\n\t\t\tif (i < pts.length) {\r\n\t\t\t\tpad[i] = pts[i];\r\n\t\t\t} else pad[i] = pts[0];\r\n\t\t}\r\n\t\treturn pad;\r\n\t},\r\n\tcomputeOctPts: function (inputPts) {\r\n\t\tvar pts = new Array(8).fill(null);\r\n\t\tfor (var j = 0; j < pts.length; j++) {\r\n\t\t\tpts[j] = inputPts[0];\r\n\t\t}\r\n\t\tfor (var i = 1; i < inputPts.length; i++) {\r\n\t\t\tif (inputPts[i].x < pts[0].x) {\r\n\t\t\t\tpts[0] = inputPts[i];\r\n\t\t\t}\r\n\t\t\tif (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) {\r\n\t\t\t\tpts[1] = inputPts[i];\r\n\t\t\t}\r\n\t\t\tif (inputPts[i].y > pts[2].y) {\r\n\t\t\t\tpts[2] = inputPts[i];\r\n\t\t\t}\r\n\t\t\tif (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) {\r\n\t\t\t\tpts[3] = inputPts[i];\r\n\t\t\t}\r\n\t\t\tif (inputPts[i].x > pts[4].x) {\r\n\t\t\t\tpts[4] = inputPts[i];\r\n\t\t\t}\r\n\t\t\tif (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) {\r\n\t\t\t\tpts[5] = inputPts[i];\r\n\t\t\t}\r\n\t\t\tif (inputPts[i].y < pts[6].y) {\r\n\t\t\t\tpts[6] = inputPts[i];\r\n\t\t\t}\r\n\t\t\tif (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) {\r\n\t\t\t\tpts[7] = inputPts[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn pts;\r\n\t},\r\n\ttoCoordinateArray: function (stack) {\r\n\t\tvar coordinates = new Array(stack.size()).fill(null);\r\n\t\tfor (var i = 0; i < stack.size(); i++) {\r\n\t\t\tvar coordinate = stack.get(i);\r\n\t\t\tcoordinates[i] = coordinate;\r\n\t\t}\r\n\t\treturn coordinates;\r\n\t},\r\n\tgrahamScan: function (c) {\r\n\t\tvar p = null;\r\n\t\tvar ps = new Stack();\r\n\t\tp = ps.push(c[0]);\r\n\t\tp = ps.push(c[1]);\r\n\t\tp = ps.push(c[2]);\r\n\t\tfor (var i = 3; i < c.length; i++) {\r\n\t\t\tp = ps.pop();\r\n\t\t\twhile (!ps.empty() && CGAlgorithms.computeOrientation(ps.peek(), p, c[i]) > 0) {\r\n\t\t\t\tp = ps.pop();\r\n\t\t\t}\r\n\t\t\tp = ps.push(p);\r\n\t\t\tp = ps.push(c[i]);\r\n\t\t}\r\n\t\tp = ps.push(c[0]);\r\n\t\treturn ps;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ConvexHull;\r\n\t}\r\n});\r\nConvexHull.extractCoordinates = function (geom) {\r\n\tvar filter = new UniqueCoordinateArrayFilter();\r\n\tgeom.apply(filter);\r\n\treturn filter.getCoordinates();\r\n};\r\nfunction RadialComparator() {\r\n\tthis.origin = null;\r\n\tlet origin = arguments[0];\r\n\tthis.origin = origin;\r\n}\r\nextend(RadialComparator.prototype, {\r\n\tcompare: function (o1, o2) {\r\n\t\tvar p1 = o1;\r\n\t\tvar p2 = o2;\r\n\t\treturn RadialComparator.polarCompare(this.origin, p1, p2);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RadialComparator;\r\n\t}\r\n});\r\nRadialComparator.polarCompare = function (o, p, q) {\r\n\tvar dxp = p.x - o.x;\r\n\tvar dyp = p.y - o.y;\r\n\tvar dxq = q.x - o.x;\r\n\tvar dyq = q.y - o.y;\r\n\tvar orient = CGAlgorithms.computeOrientation(o, p, q);\r\n\tif (orient === CGAlgorithms.COUNTERCLOCKWISE) return 1;\r\n\tif (orient === CGAlgorithms.CLOCKWISE) return -1;\r\n\tvar op = dxp * dxp + dyp * dyp;\r\n\tvar oq = dxq * dxq + dyq * dyq;\r\n\tif (op < oq) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (op > oq) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n};\r\nConvexHull.RadialComparator = RadialComparator;\r\n","import LineString from '../LineString';\r\nimport GeometryFactory from '../GeometryFactory';\r\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\r\nimport Point from '../Point';\r\nimport Polygon from '../Polygon';\r\nimport MultiPoint from '../MultiPoint';\r\nimport LinearRing from '../LinearRing';\r\nimport extend from '../../../../../extend';\r\nimport MultiPolygon from '../MultiPolygon';\r\nimport GeometryCollection from '../GeometryCollection';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport MultiLineString from '../MultiLineString';\r\nexport default function GeometryTransformer() {\r\n\tthis.inputGeom = null;\r\n\tthis.factory = null;\r\n\tthis.pruneEmptyGeometry = true;\r\n\tthis.preserveGeometryCollectionType = true;\r\n\tthis.preserveCollections = false;\r\n\tthis.preserveType = false;\r\n}\r\nextend(GeometryTransformer.prototype, {\r\n\ttransformPoint: function (geom, parent) {\r\n\t\treturn this.factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom));\r\n\t},\r\n\ttransformPolygon: function (geom, parent) {\r\n\t\tvar isAllValidLinearRings = true;\r\n\t\tvar shell = this.transformLinearRing(geom.getExteriorRing(), geom);\r\n\t\tif (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false;\r\n\t\tvar holes = new ArrayList();\r\n\t\tfor (var i = 0; i < geom.getNumInteriorRing(); i++) {\r\n\t\t\tvar hole = this.transformLinearRing(geom.getInteriorRingN(i), geom);\r\n\t\t\tif (hole === null || hole.isEmpty()) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (!(hole instanceof LinearRing)) isAllValidLinearRings = false;\r\n\t\t\tholes.add(hole);\r\n\t\t}\r\n\t\tif (isAllValidLinearRings) return this.factory.createPolygon(shell, holes.toArray([])); else {\r\n\t\t\tvar components = new ArrayList();\r\n\t\t\tif (shell !== null) components.add(shell);\r\n\t\t\tcomponents.addAll(holes);\r\n\t\t\treturn this.factory.buildGeometry(components);\r\n\t\t}\r\n\t},\r\n\tcreateCoordinateSequence: function (coords) {\r\n\t\treturn this.factory.getCoordinateSequenceFactory().create(coords);\r\n\t},\r\n\tgetInputGeometry: function () {\r\n\t\treturn this.inputGeom;\r\n\t},\r\n\ttransformMultiLineString: function (geom, parent) {\r\n\t\tvar transGeomList = new ArrayList();\r\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\r\n\t\t\tvar transformGeom = this.transformLineString(geom.getGeometryN(i), geom);\r\n\t\t\tif (transformGeom === null) continue;\r\n\t\t\tif (transformGeom.isEmpty()) continue;\r\n\t\t\ttransGeomList.add(transformGeom);\r\n\t\t}\r\n\t\treturn this.factory.buildGeometry(transGeomList);\r\n\t},\r\n\ttransformCoordinates: function (coords, parent) {\r\n\t\treturn this.copy(coords);\r\n\t},\r\n\ttransformLineString: function (geom, parent) {\r\n\t\treturn this.factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom));\r\n\t},\r\n\ttransformMultiPoint: function (geom, parent) {\r\n\t\tvar transGeomList = new ArrayList();\r\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\r\n\t\t\tvar transformGeom = this.transformPoint(geom.getGeometryN(i), geom);\r\n\t\t\tif (transformGeom === null) continue;\r\n\t\t\tif (transformGeom.isEmpty()) continue;\r\n\t\t\ttransGeomList.add(transformGeom);\r\n\t\t}\r\n\t\treturn this.factory.buildGeometry(transGeomList);\r\n\t},\r\n\ttransformMultiPolygon: function (geom, parent) {\r\n\t\tvar transGeomList = new ArrayList();\r\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\r\n\t\t\tvar transformGeom = this.transformPolygon(geom.getGeometryN(i), geom);\r\n\t\t\tif (transformGeom === null) continue;\r\n\t\t\tif (transformGeom.isEmpty()) continue;\r\n\t\t\ttransGeomList.add(transformGeom);\r\n\t\t}\r\n\t\treturn this.factory.buildGeometry(transGeomList);\r\n\t},\r\n\tcopy: function (seq) {\r\n\t\treturn seq.copy();\r\n\t},\r\n\ttransformGeometryCollection: function (geom, parent) {\r\n\t\tvar transGeomList = new ArrayList();\r\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\r\n\t\t\tvar transformGeom = this.transform(geom.getGeometryN(i));\r\n\t\t\tif (transformGeom === null) continue;\r\n\t\t\tif (this.pruneEmptyGeometry && transformGeom.isEmpty()) continue;\r\n\t\t\ttransGeomList.add(transformGeom);\r\n\t\t}\r\n\t\tif (this.preserveGeometryCollectionType) return this.factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList));\r\n\t\treturn this.factory.buildGeometry(transGeomList);\r\n\t},\r\n\ttransform: function (inputGeom) {\r\n\t\tthis.inputGeom = inputGeom;\r\n\t\tthis.factory = inputGeom.getFactory();\r\n\t\tif (inputGeom instanceof Point) return this.transformPoint(inputGeom, null);\r\n\t\tif (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null);\r\n\t\tif (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null);\r\n\t\tif (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null);\r\n\t\tif (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null);\r\n\t\tif (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null);\r\n\t\tif (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null);\r\n\t\tif (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null);\r\n\t\tthrow new IllegalArgumentException(\"Unknown Geometry subtype: \" + inputGeom.getClass().getName());\r\n\t},\r\n\ttransformLinearRing: function (geom, parent) {\r\n\t\tvar seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\r\n\t\tif (seq === null) return this.factory.createLinearRing(null);\r\n\t\tvar seqSize = seq.size();\r\n\t\tif (seqSize > 0 && seqSize < 4 && !this.preserveType) return this.factory.createLineString(seq);\r\n\t\treturn this.factory.createLinearRing(seq);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryTransformer;\r\n\t}\r\n});\r\n","import LineString from '../../../geom/LineString';\r\nimport CoordinateList from '../../../geom/CoordinateList';\r\nimport Coordinate from '../../../geom/Coordinate';\r\nimport Double from '../../../../../../java/lang/Double';\r\nimport extend from '../../../../../../extend';\r\nimport LineSegment from '../../../geom/LineSegment';\r\nexport default function LineStringSnapper() {\r\n\tthis.snapTolerance = 0.0;\r\n\tthis.srcPts = null;\r\n\tthis.seg = new LineSegment();\r\n\tthis.allowSnappingToSourceVertices = false;\r\n\tthis._isClosed = false;\r\n\tif (arguments[0] instanceof LineString && typeof arguments[1] === \"number\") {\r\n\t\tlet srcLine = arguments[0], snapTolerance = arguments[1];\r\n\t\tLineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\r\n\t} else if (arguments[0] instanceof Array && typeof arguments[1] === \"number\") {\r\n\t\tlet srcPts = arguments[0], snapTolerance = arguments[1];\r\n\t\tthis.srcPts = srcPts;\r\n\t\tthis._isClosed = LineStringSnapper.isClosed(srcPts);\r\n\t\tthis.snapTolerance = snapTolerance;\r\n\t}\r\n}\r\nextend(LineStringSnapper.prototype, {\r\n\tsnapVertices: function (srcCoords, snapPts) {\r\n\t\tvar end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\r\n\t\tfor (var i = 0; i < end; i++) {\r\n\t\t\tvar srcPt = srcCoords.get(i);\r\n\t\t\tvar snapVert = this.findSnapForVertex(srcPt, snapPts);\r\n\t\t\tif (snapVert !== null) {\r\n\t\t\t\tsrcCoords.set(i, new Coordinate(snapVert));\r\n\t\t\t\tif (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert));\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tfindSnapForVertex: function (pt, snapPts) {\r\n\t\tfor (var i = 0; i < snapPts.length; i++) {\r\n\t\t\tif (pt.equals2D(snapPts[i])) return null;\r\n\t\t\tif (pt.distance(snapPts[i]) < this.snapTolerance) return snapPts[i];\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\tsnapTo: function (snapPts) {\r\n\t\tvar coordList = new CoordinateList(this.srcPts);\r\n\t\tthis.snapVertices(coordList, snapPts);\r\n\t\tthis.snapSegments(coordList, snapPts);\r\n\t\tvar newPts = coordList.toCoordinateArray();\r\n\t\treturn newPts;\r\n\t},\r\n\tsnapSegments: function (srcCoords, snapPts) {\r\n\t\tif (snapPts.length === 0) return null;\r\n\t\tvar distinctPtCount = snapPts.length;\r\n\t\tif (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1;\r\n\t\tfor (var i = 0; i < distinctPtCount; i++) {\r\n\t\t\tvar snapPt = snapPts[i];\r\n\t\t\tvar index = this.findSegmentIndexToSnap(snapPt, srcCoords);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\tsrcCoords.add(index + 1, new Coordinate(snapPt), false);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tfindSegmentIndexToSnap: function (snapPt, srcCoords) {\r\n\t\tvar minDist = Double.MAX_VALUE;\r\n\t\tvar snapIndex = -1;\r\n\t\tfor (var i = 0; i < srcCoords.size() - 1; i++) {\r\n\t\t\tthis.seg.p0 = srcCoords.get(i);\r\n\t\t\tthis.seg.p1 = srcCoords.get(i + 1);\r\n\t\t\tif (this.seg.p0.equals2D(snapPt) || this.seg.p1.equals2D(snapPt)) {\r\n\t\t\t\tif (this.allowSnappingToSourceVertices) continue; else return -1;\r\n\t\t\t}\r\n\t\t\tvar dist = this.seg.distance(snapPt);\r\n\t\t\tif (dist < this.snapTolerance && dist < minDist) {\r\n\t\t\t\tminDist = dist;\r\n\t\t\t\tsnapIndex = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn snapIndex;\r\n\t},\r\n\tsetAllowSnappingToSourceVertices: function (allowSnappingToSourceVertices) {\r\n\t\tthis.allowSnappingToSourceVertices = allowSnappingToSourceVertices;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineStringSnapper;\r\n\t}\r\n});\r\nLineStringSnapper.isClosed = function (pts) {\r\n\tif (pts.length <= 1) return false;\r\n\treturn pts[0].equals2D(pts[pts.length - 1]);\r\n};\r\n","import TreeSet from '../../../../../../java/util/TreeSet';\r\nimport GeometryTransformer from '../../../geom/util/GeometryTransformer';\r\nimport hasInterface from '../../../../../../hasInterface';\r\nimport Double from '../../../../../../java/lang/Double';\r\nimport extend from '../../../../../../extend';\r\nimport LineStringSnapper from './LineStringSnapper';\r\nimport PrecisionModel from '../../../geom/PrecisionModel';\r\nimport Polygonal from '../../../geom/Polygonal';\r\nimport inherits from '../../../../../../inherits';\r\nexport default function GeometrySnapper() {\r\n\tthis.srcGeom = null;\r\n\tlet srcGeom = arguments[0];\r\n\tthis.srcGeom = srcGeom;\r\n}\r\nextend(GeometrySnapper.prototype, {\r\n\tsnapTo: function (snapGeom, snapTolerance) {\r\n\t\tvar snapPts = this.extractTargetCoordinates(snapGeom);\r\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts);\r\n\t\treturn snapTrans.transform(this.srcGeom);\r\n\t},\r\n\tsnapToSelf: function (snapTolerance, cleanResult) {\r\n\t\tvar snapPts = this.extractTargetCoordinates(this.srcGeom);\r\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\r\n\t\tvar snappedGeom = snapTrans.transform(this.srcGeom);\r\n\t\tvar result = snappedGeom;\r\n\t\tif (cleanResult && hasInterface(result, Polygonal)) {\r\n\t\t\tresult = snappedGeom.buffer(0);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tcomputeSnapTolerance: function (ringPts) {\r\n\t\tvar minSegLen = this.computeMinimumSegmentLength(ringPts);\r\n\t\tvar snapTol = minSegLen / 10;\r\n\t\treturn snapTol;\r\n\t},\r\n\textractTargetCoordinates: function (g) {\r\n\t\tvar ptSet = new TreeSet();\r\n\t\tvar pts = g.getCoordinates();\r\n\t\tfor (var i = 0; i < pts.length; i++) {\r\n\t\t\tptSet.add(pts[i]);\r\n\t\t}\r\n\t\treturn ptSet.toArray(new Array(0).fill(null));\r\n\t},\r\n\tcomputeMinimumSegmentLength: function (pts) {\r\n\t\tvar minSegLen = Double.MAX_VALUE;\r\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\r\n\t\t\tvar segLen = pts[i].distance(pts[i + 1]);\r\n\t\t\tif (segLen < minSegLen) minSegLen = segLen;\r\n\t\t}\r\n\t\treturn minSegLen;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometrySnapper;\r\n\t}\r\n});\r\nGeometrySnapper.snap = function (g0, g1, snapTolerance) {\r\n\tvar snapGeom = new Array(2).fill(null);\r\n\tvar snapper0 = new GeometrySnapper(g0);\r\n\tsnapGeom[0] = snapper0.snapTo(g1, snapTolerance);\r\n\tvar snapper1 = new GeometrySnapper(g1);\r\n\tsnapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\r\n\treturn snapGeom;\r\n};\r\nGeometrySnapper.computeOverlaySnapTolerance = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet g = arguments[0];\r\n\t\tvar snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\r\n\t\tvar pm = g.getPrecisionModel();\r\n\t\tif (pm.getType() === PrecisionModel.FIXED) {\r\n\t\t\tvar fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\r\n\t\t\tif (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol;\r\n\t\t}\r\n\t\treturn snapTolerance;\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet g0 = arguments[0], g1 = arguments[1];\r\n\t\treturn Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1));\r\n\t}\r\n};\r\nGeometrySnapper.computeSizeBasedSnapTolerance = function (g) {\r\n\tvar env = g.getEnvelopeInternal();\r\n\tvar minDimension = Math.min(env.getHeight(), env.getWidth());\r\n\tvar snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\r\n\treturn snapTol;\r\n};\r\nGeometrySnapper.snapToSelf = function (geom, snapTolerance, cleanResult) {\r\n\tvar snapper0 = new GeometrySnapper(geom);\r\n\treturn snapper0.snapToSelf(snapTolerance, cleanResult);\r\n};\r\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9;\r\nfunction SnapTransformer() {\r\n\tGeometryTransformer.apply(this);\r\n\tthis.snapTolerance = null;\r\n\tthis.snapPts = null;\r\n\tthis.isSelfSnap = false;\r\n\tif (arguments.length === 2) {\r\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1];\r\n\t\tthis.snapTolerance = snapTolerance;\r\n\t\tthis.snapPts = snapPts;\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1], isSelfSnap = arguments[2];\r\n\t\tthis.snapTolerance = snapTolerance;\r\n\t\tthis.snapPts = snapPts;\r\n\t\tthis.isSelfSnap = isSelfSnap;\r\n\t}\r\n}\r\ninherits(SnapTransformer, GeometryTransformer);\r\nextend(SnapTransformer.prototype, {\r\n\tsnapLine: function (srcPts, snapPts) {\r\n\t\tvar snapper = new LineStringSnapper(srcPts, this.snapTolerance);\r\n\t\tsnapper.setAllowSnappingToSourceVertices(this.isSelfSnap);\r\n\t\treturn snapper.snapTo(snapPts);\r\n\t},\r\n\ttransformCoordinates: function (coords, parent) {\r\n\t\tvar srcPts = coords.toCoordinateArray();\r\n\t\tvar newPts = this.snapLine(srcPts, this.snapPts);\r\n\t\treturn this.factory.getCoordinateSequenceFactory().create(newPts);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SnapTransformer;\r\n\t}\r\n});\r\n","import Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nexport default function CommonBits() {\r\n\tthis.isFirst = true;\r\n\tthis.commonMantissaBitsCount = 53;\r\n\tthis.commonBits = 0;\r\n\tthis.commonSignExp = null;\r\n}\r\nextend(CommonBits.prototype, {\r\n\tgetCommon: function () {\r\n\t\treturn Double.longBitsToDouble(this.commonBits);\r\n\t},\r\n\tadd: function (num) {\r\n\t\tvar numBits = Double.doubleToLongBits(num);\r\n\t\tif (this.isFirst) {\r\n\t\t\tthis.commonBits = numBits;\r\n\t\t\tthis.commonSignExp = CommonBits.signExpBits(this.commonBits);\r\n\t\t\tthis.isFirst = false;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar numSignExp = CommonBits.signExpBits(numBits);\r\n\t\tif (numSignExp !== this.commonSignExp) {\r\n\t\t\tthis.commonBits = 0;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tthis.commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this.commonBits, numBits);\r\n\t\tthis.commonBits = CommonBits.zeroLowerBits(this.commonBits, 64 - (12 + this.commonMantissaBitsCount));\r\n\t},\r\n\ttoString: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet bits = arguments[0];\r\n\t\t\tvar x = Double.longBitsToDouble(bits);\r\n\t\t\tvar numStr = Long.toBinaryString(bits);\r\n\t\t\tvar padStr = \"0000000000000000000000000000000000000000000000000000000000000000\" + numStr;\r\n\t\t\tvar bitStr = padStr.substring(padStr.length - 64);\r\n\t\t\tvar str = bitStr.substring(0, 1) + \"  \" + bitStr.substring(1, 12) + \"(exp) \" + bitStr.substring(12) + \" [ \" + x + \" ]\";\r\n\t\t\treturn str;\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CommonBits;\r\n\t}\r\n});\r\nCommonBits.getBit = function (bits, i) {\r\n\tvar mask = 1 << i;\r\n\treturn (bits & mask) !== 0 ? 1 : 0;\r\n};\r\nCommonBits.signExpBits = function (num) {\r\n\treturn num >> 52;\r\n};\r\nCommonBits.zeroLowerBits = function (bits, nBits) {\r\n\tvar invMask = (1 << nBits) - 1;\r\n\tvar mask = ~invMask;\r\n\tvar zeroed = bits & mask;\r\n\treturn zeroed;\r\n};\r\nCommonBits.numCommonMostSigMantissaBits = function (num1, num2) {\r\n\tvar count = 0;\r\n\tfor (var i = 52; i >= 0; i--) {\r\n\t\tif (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count;\r\n\t\tcount++;\r\n\t}\r\n\treturn 52;\r\n};\r\n","import CommonBits from './CommonBits';\r\nimport CoordinateFilter from '../geom/CoordinateFilter';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter';\r\nexport default function CommonBitsRemover() {\r\n\tthis.commonCoord = null;\r\n\tthis.ccFilter = new CommonCoordinateFilter();\r\n}\r\nextend(CommonBitsRemover.prototype, {\r\n\taddCommonBits: function (geom) {\r\n\t\tvar trans = new Translater(this.commonCoord);\r\n\t\tgeom.apply(trans);\r\n\t\tgeom.geometryChanged();\r\n\t},\r\n\tremoveCommonBits: function (geom) {\r\n\t\tif (this.commonCoord.x === 0.0 && this.commonCoord.y === 0.0) return geom;\r\n\t\tvar invCoord = new Coordinate(this.commonCoord);\r\n\t\tinvCoord.x = -invCoord.x;\r\n\t\tinvCoord.y = -invCoord.y;\r\n\t\tvar trans = new Translater(invCoord);\r\n\t\tgeom.apply(trans);\r\n\t\tgeom.geometryChanged();\r\n\t\treturn geom;\r\n\t},\r\n\tgetCommonCoordinate: function () {\r\n\t\treturn this.commonCoord;\r\n\t},\r\n\tadd: function (geom) {\r\n\t\tgeom.apply(this.ccFilter);\r\n\t\tthis.commonCoord = this.ccFilter.getCommonCoordinate();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CommonBitsRemover;\r\n\t}\r\n});\r\nfunction CommonCoordinateFilter() {\r\n\tthis.commonBitsX = new CommonBits();\r\n\tthis.commonBitsY = new CommonBits();\r\n}\r\nextend(CommonCoordinateFilter.prototype, {\r\n\tfilter: function (coord) {\r\n\t\tthis.commonBitsX.add(coord.x);\r\n\t\tthis.commonBitsY.add(coord.y);\r\n\t},\r\n\tgetCommonCoordinate: function () {\r\n\t\treturn new Coordinate(this.commonBitsX.getCommon(), this.commonBitsY.getCommon());\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [CoordinateFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CommonCoordinateFilter;\r\n\t}\r\n});\r\nfunction Translater() {\r\n\tthis.trans = null;\r\n\tlet trans = arguments[0];\r\n\tthis.trans = trans;\r\n}\r\nextend(Translater.prototype, {\r\n\tfilter: function (seq, i) {\r\n\t\tvar xp = seq.getOrdinate(i, 0) + this.trans.x;\r\n\t\tvar yp = seq.getOrdinate(i, 1) + this.trans.y;\r\n\t\tseq.setOrdinate(i, 0, xp);\r\n\t\tseq.setOrdinate(i, 1, yp);\r\n\t},\r\n\tisDone: function () {\r\n\t\treturn false;\r\n\t},\r\n\tisGeometryChanged: function () {\r\n\t\treturn true;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [CoordinateSequenceFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Translater;\r\n\t}\r\n});\r\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter;\r\nCommonBitsRemover.Translater = Translater;\r\n","import Iterator from '../../../../java/util/Iterator';\r\nimport NoSuchElementException from '../../../../java/util/NoSuchElementException';\r\nimport extend from '../../../../extend';\r\nimport GeometryCollection from './GeometryCollection';\r\nexport default function GeometryCollectionIterator() {\r\n\tthis.parent = null;\r\n\tthis.atStart = null;\r\n\tthis.max = null;\r\n\tthis.index = null;\r\n\tthis.subcollectionIterator = null;\r\n\tlet parent = arguments[0];\r\n\tthis.parent = parent;\r\n\tthis.atStart = true;\r\n\tthis.index = 0;\r\n\tthis.max = parent.getNumGeometries();\r\n}\r\nextend(GeometryCollectionIterator.prototype, {\r\n\tnext: function () {\r\n\t\tif (this.atStart) {\r\n\t\t\tthis.atStart = false;\r\n\t\t\tif (GeometryCollectionIterator.isAtomic(this.parent)) this.index++;\r\n\t\t\treturn this.parent;\r\n\t\t}\r\n\t\tif (this.subcollectionIterator !== null) {\r\n\t\t\tif (this.subcollectionIterator.hasNext()) {\r\n\t\t\t\treturn this.subcollectionIterator.next();\r\n\t\t\t} else {\r\n\t\t\t\tthis.subcollectionIterator = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.index >= this.max) {\r\n\t\t\tthrow new NoSuchElementException();\r\n\t\t}\r\n\t\tvar obj = this.parent.getGeometryN(this.index++);\r\n\t\tif (obj instanceof GeometryCollection) {\r\n\t\t\tthis.subcollectionIterator = new GeometryCollectionIterator(obj);\r\n\t\t\treturn this.subcollectionIterator.next();\r\n\t\t}\r\n\t\treturn obj;\r\n\t},\r\n\tremove: function () {\r\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\r\n\t},\r\n\thasNext: function () {\r\n\t\tif (this.atStart) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (this.subcollectionIterator !== null) {\r\n\t\t\tif (this.subcollectionIterator.hasNext()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthis.subcollectionIterator = null;\r\n\t\t}\r\n\t\tif (this.index >= this.max) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Iterator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryCollectionIterator;\r\n\t}\r\n});\r\nGeometryCollectionIterator.isAtomic = function (geom) {\r\n\treturn !(geom instanceof GeometryCollection);\r\n};\r\n","import Location from '../geom/Location';\r\nimport LineString from '../geom/LineString';\r\nimport CGAlgorithms from './CGAlgorithms';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport Point from '../geom/Point';\r\nimport Polygon from '../geom/Polygon';\r\nimport BoundaryNodeRule from './BoundaryNodeRule';\r\nimport extend from '../../../../extend';\r\nimport MultiPolygon from '../geom/MultiPolygon';\r\nimport GeometryCollectionIterator from '../geom/GeometryCollectionIterator';\r\nimport GeometryCollection from '../geom/GeometryCollection';\r\nimport MultiLineString from '../geom/MultiLineString';\r\nexport default function PointLocator() {\r\n\tthis.boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\r\n\tthis.isIn = null;\r\n\tthis.numBoundaries = null;\r\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\r\n\t\tlet boundaryRule = arguments[0];\r\n\t\tif (boundaryRule === null) throw new IllegalArgumentException(\"Rule must be non-null\");\r\n\t\tthis.boundaryRule = boundaryRule;\r\n\t}\r\n}\r\nextend(PointLocator.prototype, {\r\n\tlocateInternal: function () {\r\n\t\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\r\n\t\t\tlet p = arguments[0], poly = arguments[1];\r\n\t\t\tif (poly.isEmpty()) return Location.EXTERIOR;\r\n\t\t\tvar shell = poly.getExteriorRing();\r\n\t\t\tvar shellLoc = this.locateInPolygonRing(p, shell);\r\n\t\t\tif (shellLoc === Location.EXTERIOR) return Location.EXTERIOR;\r\n\t\t\tif (shellLoc === Location.BOUNDARY) return Location.BOUNDARY;\r\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\r\n\t\t\t\tvar hole = poly.getInteriorRingN(i);\r\n\t\t\t\tvar holeLoc = this.locateInPolygonRing(p, hole);\r\n\t\t\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\r\n\t\t\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\r\n\t\t\t}\r\n\t\t\treturn Location.INTERIOR;\r\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\r\n\t\t\tlet p = arguments[0], l = arguments[1];\r\n\t\t\tif (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\r\n\t\t\tvar pt = l.getCoordinates();\r\n\t\t\tif (!l.isClosed()) {\r\n\t\t\t\tif (p.equals(pt[0]) || p.equals(pt[pt.length - 1])) {\r\n\t\t\t\t\treturn Location.BOUNDARY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (CGAlgorithms.isOnLine(p, pt)) return Location.INTERIOR;\r\n\t\t\treturn Location.EXTERIOR;\r\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\r\n\t\t\tlet p = arguments[0], pt = arguments[1];\r\n\t\t\tvar ptCoord = pt.getCoordinate();\r\n\t\t\tif (ptCoord.equals2D(p)) return Location.INTERIOR;\r\n\t\t\treturn Location.EXTERIOR;\r\n\t\t}\r\n\t},\r\n\tlocateInPolygonRing: function (p, ring) {\r\n\t\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\r\n\t\treturn CGAlgorithms.locatePointInRing(p, ring.getCoordinates());\r\n\t},\r\n\tintersects: function (p, geom) {\r\n\t\treturn this.locate(p, geom) !== Location.EXTERIOR;\r\n\t},\r\n\tupdateLocationInfo: function (loc) {\r\n\t\tif (loc === Location.INTERIOR) this.isIn = true;\r\n\t\tif (loc === Location.BOUNDARY) this.numBoundaries++;\r\n\t},\r\n\tcomputeLocation: function (p, geom) {\r\n\t\tif (geom instanceof Point) {\r\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\r\n\t\t}\r\n\t\tif (geom instanceof LineString) {\r\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\r\n\t\t} else if (geom instanceof Polygon) {\r\n\t\t\tthis.updateLocationInfo(this.locateInternal(p, geom));\r\n\t\t} else if (geom instanceof MultiLineString) {\r\n\t\t\tvar ml = geom;\r\n\t\t\tfor (var i = 0; i < ml.getNumGeometries(); i++) {\r\n\t\t\t\tvar l = ml.getGeometryN(i);\r\n\t\t\t\tthis.updateLocationInfo(this.locateInternal(p, l));\r\n\t\t\t}\r\n\t\t} else if (geom instanceof MultiPolygon) {\r\n\t\t\tvar mpoly = geom;\r\n\t\t\tfor (var i = 0; i < mpoly.getNumGeometries(); i++) {\r\n\t\t\t\tvar poly = mpoly.getGeometryN(i);\r\n\t\t\t\tthis.updateLocationInfo(this.locateInternal(p, poly));\r\n\t\t\t}\r\n\t\t} else if (geom instanceof GeometryCollection) {\r\n\t\t\tvar geomi = new GeometryCollectionIterator(geom);\r\n\t\t\twhile (geomi.hasNext()) {\r\n\t\t\t\tvar g2 = geomi.next();\r\n\t\t\t\tif (g2 !== geom) this.computeLocation(p, g2);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tlocate: function (p, geom) {\r\n\t\tif (geom.isEmpty()) return Location.EXTERIOR;\r\n\t\tif (geom instanceof LineString) {\r\n\t\t\treturn this.locateInternal(p, geom);\r\n\t\t} else if (geom instanceof Polygon) {\r\n\t\t\treturn this.locateInternal(p, geom);\r\n\t\t}\r\n\t\tthis.isIn = false;\r\n\t\tthis.numBoundaries = 0;\r\n\t\tthis.computeLocation(p, geom);\r\n\t\tif (this.boundaryRule.isInBoundary(this.numBoundaries)) return Location.BOUNDARY;\r\n\t\tif (this.numBoundaries > 0 || this.isIn) return Location.INTERIOR;\r\n\t\treturn Location.EXTERIOR;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PointLocator;\r\n\t}\r\n});\r\n","import Coordinate from '../geom/Coordinate';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nexport default function Octant() {}\r\nextend(Octant.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Octant;\r\n\t}\r\n});\r\nOctant.octant = function () {\r\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\r\n\t\tlet dx = arguments[0], dy = arguments[1];\r\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for point ( \" + dx + \", \" + dy + \" )\");\r\n\t\tvar adx = Math.abs(dx);\r\n\t\tvar ady = Math.abs(dy);\r\n\t\tif (dx >= 0) {\r\n\t\t\tif (dy >= 0) {\r\n\t\t\t\tif (adx >= ady) return 0; else return 1;\r\n\t\t\t} else {\r\n\t\t\t\tif (adx >= ady) return 7; else return 6;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (dy >= 0) {\r\n\t\t\t\tif (adx >= ady) return 3; else return 2;\r\n\t\t\t} else {\r\n\t\t\t\tif (adx >= ady) return 4; else return 5;\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\r\n\t\tlet p0 = arguments[0], p1 = arguments[1];\r\n\t\tvar dx = p1.x - p0.x;\r\n\t\tvar dy = p1.y - p0.y;\r\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for two identical points \" + p0);\r\n\t\treturn Octant.octant(dx, dy);\r\n\t}\r\n};\r\n","import extend from '../../../../extend';\r\nexport default function SegmentString() {}\r\nextend(SegmentString.prototype, {\r\n\tgetCoordinates: function () {},\r\n\tsize: function () {},\r\n\tgetCoordinate: function (i) {},\r\n\tisClosed: function () {},\r\n\tsetData: function (data) {},\r\n\tgetData: function () {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SegmentString;\r\n\t}\r\n});\r\n","import WKTWriter from '../io/WKTWriter';\r\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\r\nimport Octant from './Octant';\r\nimport extend from '../../../../extend';\r\nimport SegmentString from './SegmentString';\r\nexport default function BasicSegmentString() {\r\n\tthis.pts = null;\r\n\tthis.data = null;\r\n\tlet pts = arguments[0], data = arguments[1];\r\n\tthis.pts = pts;\r\n\tthis.data = data;\r\n}\r\nextend(BasicSegmentString.prototype, {\r\n\tgetCoordinates: function () {\r\n\t\treturn this.pts;\r\n\t},\r\n\tsize: function () {\r\n\t\treturn this.pts.length;\r\n\t},\r\n\tgetCoordinate: function (i) {\r\n\t\treturn this.pts[i];\r\n\t},\r\n\tisClosed: function () {\r\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\r\n\t},\r\n\tgetSegmentOctant: function (index) {\r\n\t\tif (index === this.pts.length - 1) return -1;\r\n\t\treturn Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1));\r\n\t},\r\n\tsetData: function (data) {\r\n\t\tthis.data = data;\r\n\t},\r\n\tgetData: function () {\r\n\t\treturn this.data;\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.pts));\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [SegmentString];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BasicSegmentString;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nexport default function Boundable() {}\r\nextend(Boundable.prototype, {\r\n\tgetBounds: function () {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Boundable;\r\n\t}\r\n});\r\n","import Boundable from './Boundable';\r\nimport extend from '../../../../../extend';\r\nimport Serializable from '../../../../../java/io/Serializable';\r\nexport default function ItemBoundable() {\r\n\tthis.bounds = null;\r\n\tthis.item = null;\r\n\tlet bounds = arguments[0], item = arguments[1];\r\n\tthis.bounds = bounds;\r\n\tthis.item = item;\r\n}\r\nextend(ItemBoundable.prototype, {\r\n\tgetItem: function () {\r\n\t\treturn this.item;\r\n\t},\r\n\tgetBounds: function () {\r\n\t\treturn this.bounds;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Boundable, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ItemBoundable;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function PriorityQueue() {\r\n\tthis._size = null;\r\n\tthis.items = null;\r\n\tthis._size = 0;\r\n\tthis.items = new ArrayList();\r\n\tthis.items.add(null);\r\n}\r\nextend(PriorityQueue.prototype, {\r\n\tpoll: function () {\r\n\t\tif (this.isEmpty()) return null;\r\n\t\tvar minItem = this.items.get(1);\r\n\t\tthis.items.set(1, this.items.get(this._size));\r\n\t\tthis._size -= 1;\r\n\t\tthis.reorder(1);\r\n\t\treturn minItem;\r\n\t},\r\n\tsize: function () {\r\n\t\treturn this._size;\r\n\t},\r\n\treorder: function (hole) {\r\n\t\tvar child = null;\r\n\t\tvar tmp = this.items.get(hole);\r\n\t\tfor (; hole * 2 <= this._size; hole = child) {\r\n\t\t\tchild = hole * 2;\r\n\t\t\tif (child !== this._size && this.items.get(child + 1).compareTo(this.items.get(child)) < 0) child++;\r\n\t\t\tif (this.items.get(child).compareTo(tmp) < 0) this.items.set(hole, this.items.get(child)); else break;\r\n\t\t}\r\n\t\tthis.items.set(hole, tmp);\r\n\t},\r\n\tclear: function () {\r\n\t\tthis._size = 0;\r\n\t\tthis.items.clear();\r\n\t},\r\n\tisEmpty: function () {\r\n\t\treturn this._size === 0;\r\n\t},\r\n\tadd: function (x) {\r\n\t\tthis.items.add(null);\r\n\t\tthis._size += 1;\r\n\t\tvar hole = this._size;\r\n\t\tthis.items.set(0, x);\r\n\t\tfor (; x.compareTo(this.items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\r\n\t\t\tthis.items.set(hole, this.items.get(Math.trunc(hole / 2)));\r\n\t\t}\r\n\t\tthis.items.set(hole, x);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PriorityQueue;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nexport default function ItemVisitor() {}\r\nextend(ItemVisitor.prototype, {\r\n\tvisitItem: function (item) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ItemVisitor;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nexport default function SpatialIndex() {}\r\nextend(SpatialIndex.prototype, {\r\n\tinsert: function (itemEnv, item) {},\r\n\tremove: function (itemEnv, item) {},\r\n\tquery: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet searchEnv = arguments[0];\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SpatialIndex;\r\n\t}\r\n});\r\n","import Boundable from './Boundable';\r\nimport extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Serializable from '../../../../../java/io/Serializable';\r\nimport Assert from '../../util/Assert';\r\nexport default function AbstractNode() {\r\n\tthis.childBoundables = new ArrayList();\r\n\tthis.bounds = null;\r\n\tthis.level = null;\r\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\r\n\t\tlet level = arguments[0];\r\n\t\tthis.level = level;\r\n\t}\r\n}\r\nextend(AbstractNode.prototype, {\r\n\tgetLevel: function () {\r\n\t\treturn this.level;\r\n\t},\r\n\tsize: function () {\r\n\t\treturn this.childBoundables.size();\r\n\t},\r\n\tgetChildBoundables: function () {\r\n\t\treturn this.childBoundables;\r\n\t},\r\n\taddChildBoundable: function (childBoundable) {\r\n\t\tAssert.isTrue(this.bounds === null);\r\n\t\tthis.childBoundables.add(childBoundable);\r\n\t},\r\n\tisEmpty: function () {\r\n\t\treturn this.childBoundables.isEmpty();\r\n\t},\r\n\tgetBounds: function () {\r\n\t\tif (this.bounds === null) {\r\n\t\t\tthis.bounds = this.computeBounds();\r\n\t\t}\r\n\t\treturn this.bounds;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Boundable, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn AbstractNode;\r\n\t}\r\n});\r\nAbstractNode.serialVersionUID = 6493722185909573708;\r\n","import IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\r\nimport AbstractNode from './AbstractNode';\r\nimport extend from '../../../../../extend';\r\nimport Comparable from '../../../../../java/lang/Comparable';\r\nexport default function BoundablePair() {\r\n\tthis.boundable1 = null;\r\n\tthis.boundable2 = null;\r\n\tthis._distance = null;\r\n\tthis.itemDistance = null;\r\n\tlet boundable1 = arguments[0], boundable2 = arguments[1], itemDistance = arguments[2];\r\n\tthis.boundable1 = boundable1;\r\n\tthis.boundable2 = boundable2;\r\n\tthis.itemDistance = itemDistance;\r\n\tthis._distance = this.distance();\r\n}\r\nextend(BoundablePair.prototype, {\r\n\texpandToQueue: function (priQ, minDistance) {\r\n\t\tvar isComp1 = BoundablePair.isComposite(this.boundable1);\r\n\t\tvar isComp2 = BoundablePair.isComposite(this.boundable2);\r\n\t\tif (isComp1 && isComp2) {\r\n\t\t\tif (BoundablePair.area(this.boundable1) > BoundablePair.area(this.boundable2)) {\r\n\t\t\t\tthis.expand(this.boundable1, this.boundable2, priQ, minDistance);\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\tthis.expand(this.boundable2, this.boundable1, priQ, minDistance);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t} else if (isComp1) {\r\n\t\t\tthis.expand(this.boundable1, this.boundable2, priQ, minDistance);\r\n\t\t\treturn null;\r\n\t\t} else if (isComp2) {\r\n\t\t\tthis.expand(this.boundable2, this.boundable1, priQ, minDistance);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tthrow new IllegalArgumentException(\"neither boundable is composite\");\r\n\t},\r\n\tisLeaves: function () {\r\n\t\treturn !(BoundablePair.isComposite(this.boundable1) || BoundablePair.isComposite(this.boundable2));\r\n\t},\r\n\tcompareTo: function (o) {\r\n\t\tvar nd = o;\r\n\t\tif (this._distance < nd._distance) return -1;\r\n\t\tif (this._distance > nd._distance) return 1;\r\n\t\treturn 0;\r\n\t},\r\n\texpand: function (bndComposite, bndOther, priQ, minDistance) {\r\n\t\tvar children = bndComposite.getChildBoundables();\r\n\t\tfor (var i = children.iterator(); i.hasNext(); ) {\r\n\t\t\tvar child = i.next();\r\n\t\t\tvar bp = new BoundablePair(child, bndOther, this.itemDistance);\r\n\t\t\tif (bp.getDistance() < minDistance) {\r\n\t\t\t\tpriQ.add(bp);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetBoundable: function (i) {\r\n\t\tif (i === 0) return this.boundable1;\r\n\t\treturn this.boundable2;\r\n\t},\r\n\tgetDistance: function () {\r\n\t\treturn this._distance;\r\n\t},\r\n\tdistance: function () {\r\n\t\tif (this.isLeaves()) {\r\n\t\t\treturn this.itemDistance.distance(this.boundable1, this.boundable2);\r\n\t\t}\r\n\t\treturn this.boundable1.getBounds().distance(this.boundable2.getBounds());\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BoundablePair;\r\n\t}\r\n});\r\nBoundablePair.area = function (b) {\r\n\treturn b.getBounds().getArea();\r\n};\r\nBoundablePair.isComposite = function (item) {\r\n\treturn item instanceof AbstractNode;\r\n};\r\n","import ItemBoundable from './ItemBoundable';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport ItemVisitor from '../ItemVisitor';\r\nimport AbstractNode from './AbstractNode';\r\nimport extend from '../../../../../extend';\r\nimport Collections from '../../../../../java/util/Collections';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Serializable from '../../../../../java/io/Serializable';\r\nimport Assert from '../../util/Assert';\r\nimport List from '../../../../../java/util/List';\r\nexport default function AbstractSTRtree() {\r\n\tthis.root = null;\r\n\tthis.built = false;\r\n\tthis.itemBoundables = new ArrayList();\r\n\tthis.nodeCapacity = null;\r\n\tif (arguments.length === 0) {\r\n\t\tAbstractSTRtree.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY);\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet nodeCapacity = arguments[0];\r\n\t\tAssert.isTrue(nodeCapacity > 1, \"Node capacity must be greater than 1\");\r\n\t\tthis.nodeCapacity = nodeCapacity;\r\n\t}\r\n}\r\nextend(AbstractSTRtree.prototype, {\r\n\tgetNodeCapacity: function () {\r\n\t\treturn this.nodeCapacity;\r\n\t},\r\n\tlastNode: function (nodes) {\r\n\t\treturn nodes.get(nodes.size() - 1);\r\n\t},\r\n\tsize: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tthis.build();\r\n\t\t\treturn this.size(this.root);\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet node = arguments[0];\r\n\t\t\tvar size = 0;\r\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar childBoundable = i.next();\r\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\r\n\t\t\t\t\tsize += this.size(childBoundable);\r\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\r\n\t\t\t\t\tsize += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn size;\r\n\t\t}\r\n\t},\r\n\tremoveItem: function (node, item) {\r\n\t\tvar childToRemove = null;\r\n\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\r\n\t\t\tvar childBoundable = i.next();\r\n\t\t\tif (childBoundable instanceof ItemBoundable) {\r\n\t\t\t\tif (childBoundable.getItem() === item) childToRemove = childBoundable;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (childToRemove !== null) {\r\n\t\t\tnode.getChildBoundables().remove(childToRemove);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\titemsTree: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tthis.build();\r\n\t\t\tvar valuesTree = this.itemsTree(this.root);\r\n\t\t\tif (valuesTree === null) return new ArrayList();\r\n\t\t\treturn valuesTree;\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet node = arguments[0];\r\n\t\t\tvar valuesTreeForNode = new ArrayList();\r\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar childBoundable = i.next();\r\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\r\n\t\t\t\t\tvar valuesTreeForChild = this.itemsTree(childBoundable);\r\n\t\t\t\t\tif (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild);\r\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\r\n\t\t\t\t\tvaluesTreeForNode.add(childBoundable.getItem());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAssert.shouldNeverReachHere();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (valuesTreeForNode.size() <= 0) return null;\r\n\t\t\treturn valuesTreeForNode;\r\n\t\t}\r\n\t},\r\n\tinsert: function (bounds, item) {\r\n\t\tAssert.isTrue(!this.built, \"Cannot insert items into an STR packed R-tree after it has been built.\");\r\n\t\tthis.itemBoundables.add(new ItemBoundable(bounds, item));\r\n\t},\r\n\tboundablesAtLevel: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet level = arguments[0];\r\n\t\t\tvar boundables = new ArrayList();\r\n\t\t\tthis.boundablesAtLevel(level, this.root, boundables);\r\n\t\t\treturn boundables;\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet level = arguments[0], top = arguments[1], boundables = arguments[2];\r\n\t\t\tAssert.isTrue(level > -2);\r\n\t\t\tif (top.getLevel() === level) {\r\n\t\t\t\tboundables.add(top);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tfor (var i = top.getChildBoundables().iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar boundable = i.next();\r\n\t\t\t\tif (boundable instanceof AbstractNode) {\r\n\t\t\t\t\tthis.boundablesAtLevel(level, boundable, boundables);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAssert.isTrue(boundable instanceof ItemBoundable);\r\n\t\t\t\t\tif (level === -1) {\r\n\t\t\t\t\t\tboundables.add(boundable);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tquery: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet searchBounds = arguments[0];\r\n\t\t\tthis.build();\r\n\t\t\tvar matches = new ArrayList();\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\treturn matches;\r\n\t\t\t}\r\n\t\t\tif (this.getIntersectsOp().intersects(this.root.getBounds(), searchBounds)) {\r\n\t\t\t\tthis.query(searchBounds, this.root, matches);\r\n\t\t\t}\r\n\t\t\treturn matches;\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet searchBounds = arguments[0], visitor = arguments[1];\r\n\t\t\tthis.build();\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (this.getIntersectsOp().intersects(this.root.getBounds(), searchBounds)) {\r\n\t\t\t\tthis.query(searchBounds, this.root, visitor);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tif (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\r\n\t\t\t\tlet searchBounds = arguments[0], node = arguments[1], visitor = arguments[2];\r\n\t\t\t\tvar childBoundables = node.getChildBoundables();\r\n\t\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\r\n\t\t\t\t\tvar childBoundable = childBoundables.get(i);\r\n\t\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (childBoundable instanceof AbstractNode) {\r\n\t\t\t\t\t\tthis.query(searchBounds, childBoundable, visitor);\r\n\t\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\r\n\t\t\t\t\t\tvisitor.visitItem(childBoundable.getItem());\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tAssert.shouldNeverReachHere();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\r\n\t\t\t\tlet searchBounds = arguments[0], node = arguments[1], matches = arguments[2];\r\n\t\t\t\tvar childBoundables = node.getChildBoundables();\r\n\t\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\r\n\t\t\t\t\tvar childBoundable = childBoundables.get(i);\r\n\t\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (childBoundable instanceof AbstractNode) {\r\n\t\t\t\t\t\tthis.query(searchBounds, childBoundable, matches);\r\n\t\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\r\n\t\t\t\t\t\tmatches.add(childBoundable.getItem());\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tAssert.shouldNeverReachHere();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tbuild: function () {\r\n\t\tif (this.built) return null;\r\n\t\tthis.root = this.itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this.itemBoundables, -1);\r\n\t\tthis.itemBoundables = null;\r\n\t\tthis.built = true;\r\n\t},\r\n\tgetRoot: function () {\r\n\t\tthis.build();\r\n\t\treturn this.root;\r\n\t},\r\n\tremove: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet searchBounds = arguments[0], item = arguments[1];\r\n\t\t\tthis.build();\r\n\t\t\tif (this.getIntersectsOp().intersects(this.root.getBounds(), searchBounds)) {\r\n\t\t\t\treturn this.remove(searchBounds, this.root, item);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], item = arguments[2];\r\n\t\t\tvar found = this.removeItem(node, item);\r\n\t\t\tif (found) return true;\r\n\t\t\tvar childToPrune = null;\r\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar childBoundable = i.next();\r\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\r\n\t\t\t\t\tfound = this.remove(searchBounds, childBoundable, item);\r\n\t\t\t\t\tif (found) {\r\n\t\t\t\t\t\tchildToPrune = childBoundable;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (childToPrune !== null) {\r\n\t\t\t\tif (childToPrune.getChildBoundables().isEmpty()) {\r\n\t\t\t\t\tnode.getChildBoundables().remove(childToPrune);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn found;\r\n\t\t}\r\n\t},\r\n\tcreateHigherLevels: function (boundablesOfALevel, level) {\r\n\t\tAssert.isTrue(!boundablesOfALevel.isEmpty());\r\n\t\tvar parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\r\n\t\tif (parentBoundables.size() === 1) {\r\n\t\t\treturn parentBoundables.get(0);\r\n\t\t}\r\n\t\treturn this.createHigherLevels(parentBoundables, level + 1);\r\n\t},\r\n\tdepth: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (this.isEmpty()) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tthis.build();\r\n\t\t\treturn this.depth(this.root);\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet node = arguments[0];\r\n\t\t\tvar maxChildDepth = 0;\r\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar childBoundable = i.next();\r\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\r\n\t\t\t\t\tvar childDepth = this.depth(childBoundable);\r\n\t\t\t\t\tif (childDepth > maxChildDepth) maxChildDepth = childDepth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn maxChildDepth + 1;\r\n\t\t}\r\n\t},\r\n\tcreateParentBoundables: function (childBoundables, newLevel) {\r\n\t\tAssert.isTrue(!childBoundables.isEmpty());\r\n\t\tvar parentBoundables = new ArrayList();\r\n\t\tparentBoundables.add(this.createNode(newLevel));\r\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\r\n\t\tCollections.sort(sortedChildBoundables, this.getComparator());\r\n\t\tfor (var i = sortedChildBoundables.iterator(); i.hasNext(); ) {\r\n\t\t\tvar childBoundable = i.next();\r\n\t\t\tif (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) {\r\n\t\t\t\tparentBoundables.add(this.createNode(newLevel));\r\n\t\t\t}\r\n\t\t\tthis.lastNode(parentBoundables).addChildBoundable(childBoundable);\r\n\t\t}\r\n\t\treturn parentBoundables;\r\n\t},\r\n\tisEmpty: function () {\r\n\t\tif (!this.built) return this.itemBoundables.isEmpty();\r\n\t\treturn this.root.isEmpty();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn AbstractSTRtree;\r\n\t}\r\n});\r\nAbstractSTRtree.compareDoubles = function (a, b) {\r\n\treturn a > b ? 1 : a < b ? -1 : 0;\r\n};\r\nfunction IntersectsOp() {}\r\nAbstractSTRtree.IntersectsOp = IntersectsOp;\r\nAbstractSTRtree.serialVersionUID = -3886435814360241337;\r\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10;\r\n","import extend from '../../../../../extend';\r\nexport default function ItemDistance() {}\r\nextend(ItemDistance.prototype, {\r\n\tdistance: function (item1, item2) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ItemDistance;\r\n\t}\r\n});\r\n","import ItemBoundable from './ItemBoundable';\r\nimport PriorityQueue from '../../util/PriorityQueue';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport ItemVisitor from '../ItemVisitor';\r\nimport SpatialIndex from '../SpatialIndex';\r\nimport AbstractNode from './AbstractNode';\r\nimport Double from '../../../../../java/lang/Double';\r\nimport extend from '../../../../../extend';\r\nimport Collections from '../../../../../java/util/Collections';\r\nimport BoundablePair from './BoundablePair';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Comparator from '../../../../../java/util/Comparator';\r\nimport Serializable from '../../../../../java/io/Serializable';\r\nimport Envelope from '../../geom/Envelope';\r\nimport Assert from '../../util/Assert';\r\nimport inherits from '../../../../../inherits';\r\nimport List from '../../../../../java/util/List';\r\nimport AbstractSTRtree from './AbstractSTRtree';\r\nimport ItemDistance from './ItemDistance';\r\nexport default function STRtree() {\r\n\tif (arguments.length === 0) {\r\n\t\tSTRtree.call(this, STRtree.DEFAULT_NODE_CAPACITY);\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet nodeCapacity = arguments[0];\r\n\t\tAbstractSTRtree.call(this, nodeCapacity);\r\n\t}\r\n}\r\ninherits(STRtree, AbstractSTRtree);\r\nextend(STRtree.prototype, {\r\n\tcreateParentBoundablesFromVerticalSlices: function (verticalSlices, newLevel) {\r\n\t\tAssert.isTrue(verticalSlices.length > 0);\r\n\t\tvar parentBoundables = new ArrayList();\r\n\t\tfor (var i = 0; i < verticalSlices.length; i++) {\r\n\t\t\tparentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\r\n\t\t}\r\n\t\treturn parentBoundables;\r\n\t},\r\n\tcreateNode: function (level) {\r\n\t\treturn new STRtreeNode(level);\r\n\t},\r\n\tsize: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn AbstractSTRtree.prototype.size.call(this);\r\n\t\t} else return AbstractSTRtree.prototype.size.apply(this, arguments);\r\n\t},\r\n\tinsert: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\r\n\t\t\tif (itemEnv.isNull()) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tAbstractSTRtree.prototype.insert.call(this, itemEnv, item);\r\n\t\t} else return AbstractSTRtree.prototype.insert.apply(this, arguments);\r\n\t},\r\n\tgetIntersectsOp: function () {\r\n\t\treturn STRtree.intersectsOp;\r\n\t},\r\n\tverticalSlices: function (childBoundables, sliceCount) {\r\n\t\tvar sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\r\n\t\tvar slices = new Array(sliceCount).fill(null);\r\n\t\tvar i = childBoundables.iterator();\r\n\t\tfor (var j = 0; j < sliceCount; j++) {\r\n\t\t\tslices[j] = new ArrayList();\r\n\t\t\tvar boundablesAddedToSlice = 0;\r\n\t\t\twhile (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\r\n\t\t\t\tvar childBoundable = i.next();\r\n\t\t\t\tslices[j].add(childBoundable);\r\n\t\t\t\tboundablesAddedToSlice++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn slices;\r\n\t},\r\n\tquery: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet searchEnv = arguments[0];\r\n\t\t\treturn AbstractSTRtree.prototype.query.call(this, searchEnv);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\r\n\t\t\tAbstractSTRtree.prototype.query.call(this, searchEnv, visitor);\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tif (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\r\n\t\t\t\tlet searchBounds = arguments[0], node = arguments[1], visitor = arguments[2];\r\n\t\t\t\tAbstractSTRtree.prototype.query.call(this, searchBounds, node, visitor);\r\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\r\n\t\t\t\tlet searchBounds = arguments[0], node = arguments[1], matches = arguments[2];\r\n\t\t\t\tAbstractSTRtree.prototype.query.call(this, searchBounds, node, matches);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetComparator: function () {\r\n\t\treturn STRtree.yComparator;\r\n\t},\r\n\tcreateParentBoundablesFromVerticalSlice: function (childBoundables, newLevel) {\r\n\t\treturn AbstractSTRtree.prototype.createParentBoundables.call(this, childBoundables, newLevel);\r\n\t},\r\n\tremove: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\r\n\t\t\treturn AbstractSTRtree.prototype.remove.call(this, itemEnv, item);\r\n\t\t} else return AbstractSTRtree.prototype.remove.apply(this, arguments);\r\n\t},\r\n\tdepth: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn AbstractSTRtree.prototype.depth.call(this);\r\n\t\t} else return AbstractSTRtree.prototype.depth.apply(this, arguments);\r\n\t},\r\n\tcreateParentBoundables: function (childBoundables, newLevel) {\r\n\t\tAssert.isTrue(!childBoundables.isEmpty());\r\n\t\tvar minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\r\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\r\n\t\tCollections.sort(sortedChildBoundables, STRtree.xComparator);\r\n\t\tvar verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\r\n\t\treturn this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel);\r\n\t},\r\n\tnearestNeighbour: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (hasInterface(arguments[0], ItemDistance)) {\r\n\t\t\t\tlet itemDist = arguments[0];\r\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\r\n\t\t\t\treturn this.nearestNeighbour(bp);\r\n\t\t\t} else if (arguments[0] instanceof BoundablePair) {\r\n\t\t\t\tlet initBndPair = arguments[0];\r\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tif (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\r\n\t\t\t\tlet tree = arguments[0], itemDist = arguments[1];\r\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist);\r\n\t\t\t\treturn this.nearestNeighbour(bp);\r\n\t\t\t} else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\") {\r\n\t\t\t\tlet initBndPair = arguments[0], maxDistance = arguments[1];\r\n\t\t\t\tvar distanceLowerBound = maxDistance;\r\n\t\t\t\tvar minPair = null;\r\n\t\t\t\tvar priQ = new PriorityQueue();\r\n\t\t\t\tpriQ.add(initBndPair);\r\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound > 0.0) {\r\n\t\t\t\t\tvar bndPair = priQ.poll();\r\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\r\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) break;\r\n\t\t\t\t\tif (bndPair.isLeaves()) {\r\n\t\t\t\t\t\tdistanceLowerBound = currentDistance;\r\n\t\t\t\t\t\tminPair = bndPair;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()];\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet env = arguments[0], item = arguments[1], itemDist = arguments[2];\r\n\t\t\tvar bnd = new ItemBoundable(env, item);\r\n\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, itemDist);\r\n\t\t\treturn this.nearestNeighbour(bp)[0];\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [SpatialIndex, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn STRtree;\r\n\t}\r\n});\r\nSTRtree.centreX = function (e) {\r\n\treturn STRtree.avg(e.getMinX(), e.getMaxX());\r\n};\r\nSTRtree.avg = function (a, b) {\r\n\treturn (a + b) / 2;\r\n};\r\nSTRtree.centreY = function (e) {\r\n\treturn STRtree.avg(e.getMinY(), e.getMaxY());\r\n};\r\nfunction STRtreeNode() {\r\n\tlet level = arguments[0];\r\n\tAbstractNode.call(this, level);\r\n}\r\ninherits(STRtreeNode, AbstractNode);\r\nextend(STRtreeNode.prototype, {\r\n\tcomputeBounds: function () {\r\n\t\tvar bounds = null;\r\n\t\tfor (var i = this.getChildBoundables().iterator(); i.hasNext(); ) {\r\n\t\t\tvar childBoundable = i.next();\r\n\t\t\tif (bounds === null) {\r\n\t\t\t\tbounds = new Envelope(childBoundable.getBounds());\r\n\t\t\t} else {\r\n\t\t\t\tbounds.expandToInclude(childBoundable.getBounds());\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bounds;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn STRtreeNode;\r\n\t}\r\n});\r\nSTRtree.STRtreeNode = STRtreeNode;\r\nSTRtree.serialVersionUID = 259274702368956900;\r\nSTRtree.xComparator = {\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparator];\r\n\t},\r\n\tcompare: function (o1, o2) {\r\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()));\r\n\t}\r\n};\r\nSTRtree.yComparator = {\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparator];\r\n\t},\r\n\tcompare: function (o1, o2) {\r\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()));\r\n\t}\r\n};\r\nSTRtree.intersectsOp = {\r\n\tinterfaces_: function () {\r\n\t\treturn [IntersectsOp];\r\n\t},\r\n\tintersects: function (aBounds, bBounds) {\r\n\t\treturn aBounds.intersects(bBounds);\r\n\t}\r\n};\r\nSTRtree.DEFAULT_NODE_CAPACITY = 10;\r\n","import extend from '../../../../extend';\r\nimport Assert from '../util/Assert';\r\nexport default function SegmentPointComparator() {}\r\nextend(SegmentPointComparator.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SegmentPointComparator;\r\n\t}\r\n});\r\nSegmentPointComparator.relativeSign = function (x0, x1) {\r\n\tif (x0 < x1) return -1;\r\n\tif (x0 > x1) return 1;\r\n\treturn 0;\r\n};\r\nSegmentPointComparator.compare = function (octant, p0, p1) {\r\n\tif (p0.equals2D(p1)) return 0;\r\n\tvar xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\r\n\tvar ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\r\n\tswitch (octant) {\r\n\t\tcase 0:\r\n\t\t\treturn SegmentPointComparator.compareValue(xSign, ySign);\r\n\t\tcase 1:\r\n\t\t\treturn SegmentPointComparator.compareValue(ySign, xSign);\r\n\t\tcase 2:\r\n\t\t\treturn SegmentPointComparator.compareValue(ySign, -xSign);\r\n\t\tcase 3:\r\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, ySign);\r\n\t\tcase 4:\r\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, -ySign);\r\n\t\tcase 5:\r\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, -xSign);\r\n\t\tcase 6:\r\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, xSign);\r\n\t\tcase 7:\r\n\t\t\treturn SegmentPointComparator.compareValue(xSign, -ySign);\r\n\t}\r\n\tAssert.shouldNeverReachHere(\"invalid octant value\");\r\n\treturn 0;\r\n};\r\nSegmentPointComparator.compareValue = function (compareSign0, compareSign1) {\r\n\tif (compareSign0 < 0) return -1;\r\n\tif (compareSign0 > 0) return 1;\r\n\tif (compareSign1 < 0) return -1;\r\n\tif (compareSign1 > 0) return 1;\r\n\treturn 0;\r\n};\r\n","import Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport SegmentPointComparator from './SegmentPointComparator';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nexport default function SegmentNode() {\r\n\tthis.segString = null;\r\n\tthis.coord = null;\r\n\tthis.segmentIndex = null;\r\n\tthis.segmentOctant = null;\r\n\tthis._isInterior = null;\r\n\tlet segString = arguments[0], coord = arguments[1], segmentIndex = arguments[2], segmentOctant = arguments[3];\r\n\tthis.segString = segString;\r\n\tthis.coord = new Coordinate(coord);\r\n\tthis.segmentIndex = segmentIndex;\r\n\tthis.segmentOctant = segmentOctant;\r\n\tthis._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\r\n}\r\nextend(SegmentNode.prototype, {\r\n\tgetCoordinate: function () {\r\n\t\treturn this.coord;\r\n\t},\r\n\tprint: function (out) {\r\n\t\tout.print(this.coord);\r\n\t\tout.print(\" seg # = \" + this.segmentIndex);\r\n\t},\r\n\tcompareTo: function (obj) {\r\n\t\tvar other = obj;\r\n\t\tif (this.segmentIndex < other.segmentIndex) return -1;\r\n\t\tif (this.segmentIndex > other.segmentIndex) return 1;\r\n\t\tif (this.coord.equals2D(other.coord)) return 0;\r\n\t\treturn SegmentPointComparator.compare(this.segmentOctant, this.coord, other.coord);\r\n\t},\r\n\tisEndPoint: function (maxSegmentIndex) {\r\n\t\tif (this.segmentIndex === 0 && !this._isInterior) return true;\r\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\r\n\t\treturn false;\r\n\t},\r\n\tisInterior: function () {\r\n\t\treturn this._isInterior;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SegmentNode;\r\n\t}\r\n});\r\n","import CoordinateList from '../geom/CoordinateList';\r\nimport SegmentNode from './SegmentNode';\r\nimport Iterator from '../../../../java/util/Iterator';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport NodedSegmentString from './NodedSegmentString';\r\nimport extend from '../../../../extend';\r\nimport Integer from '../../../../java/lang/Integer';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport RuntimeException from '../../../../java/lang/RuntimeException';\r\nimport Assert from '../util/Assert';\r\nimport TreeMap from '../../../../java/util/TreeMap';\r\nexport default function SegmentNodeList() {\r\n\tthis.nodeMap = new TreeMap();\r\n\tthis.edge = null;\r\n\tlet edge = arguments[0];\r\n\tthis.edge = edge;\r\n}\r\nextend(SegmentNodeList.prototype, {\r\n\tgetSplitCoordinates: function () {\r\n\t\tvar coordList = new CoordinateList();\r\n\t\tthis.addEndpoints();\r\n\t\tvar it = this.iterator();\r\n\t\tvar eiPrev = it.next();\r\n\t\twhile (it.hasNext()) {\r\n\t\t\tvar ei = it.next();\r\n\t\t\tthis.addEdgeCoordinates(eiPrev, ei, coordList);\r\n\t\t\teiPrev = ei;\r\n\t\t}\r\n\t\treturn coordList.toCoordinateArray();\r\n\t},\r\n\taddCollapsedNodes: function () {\r\n\t\tvar collapsedVertexIndexes = new ArrayList();\r\n\t\tthis.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\r\n\t\tthis.findCollapsesFromExistingVertices(collapsedVertexIndexes);\r\n\t\tfor (var it = collapsedVertexIndexes.iterator(); it.hasNext(); ) {\r\n\t\t\tvar vertexIndex = it.next().intValue();\r\n\t\t\tthis.add(this.edge.getCoordinate(vertexIndex), vertexIndex);\r\n\t\t}\r\n\t},\r\n\tprint: function (out) {\r\n\t\tout.println(\"Intersections:\");\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar ei = it.next();\r\n\t\t\tei.print(out);\r\n\t\t}\r\n\t},\r\n\tfindCollapsesFromExistingVertices: function (collapsedVertexIndexes) {\r\n\t\tfor (var i = 0; i < this.edge.size() - 2; i++) {\r\n\t\t\tvar p0 = this.edge.getCoordinate(i);\r\n\t\t\tvar p1 = this.edge.getCoordinate(i + 1);\r\n\t\t\tvar p2 = this.edge.getCoordinate(i + 2);\r\n\t\t\tif (p0.equals2D(p2)) {\r\n\t\t\t\tcollapsedVertexIndexes.add(new Integer(i + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\taddEdgeCoordinates: function (ei0, ei1, coordList) {\r\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\r\n\t\tvar lastSegStartPt = this.edge.getCoordinate(ei1.segmentIndex);\r\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\r\n\t\tif (!useIntPt1) {\r\n\t\t\tnpts--;\r\n\t\t}\r\n\t\tvar ipt = 0;\r\n\t\tcoordList.add(new Coordinate(ei0.coord), false);\r\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\r\n\t\t\tcoordList.add(this.edge.getCoordinate(i));\r\n\t\t}\r\n\t\tif (useIntPt1) {\r\n\t\t\tcoordList.add(new Coordinate(ei1.coord));\r\n\t\t}\r\n\t},\r\n\titerator: function () {\r\n\t\treturn this.nodeMap.values().iterator();\r\n\t},\r\n\taddSplitEdges: function (edgeList) {\r\n\t\tthis.addEndpoints();\r\n\t\tthis.addCollapsedNodes();\r\n\t\tvar it = this.iterator();\r\n\t\tvar eiPrev = it.next();\r\n\t\twhile (it.hasNext()) {\r\n\t\t\tvar ei = it.next();\r\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\r\n\t\t\tedgeList.add(newEdge);\r\n\t\t\teiPrev = ei;\r\n\t\t}\r\n\t},\r\n\tfindCollapseIndex: function (ei0, ei1, collapsedVertexIndex) {\r\n\t\tif (!ei0.coord.equals2D(ei1.coord)) return false;\r\n\t\tvar numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\r\n\t\tif (!ei1.isInterior()) {\r\n\t\t\tnumVerticesBetween--;\r\n\t\t}\r\n\t\tif (numVerticesBetween === 1) {\r\n\t\t\tcollapsedVertexIndex[0] = ei0.segmentIndex + 1;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tfindCollapsesFromInsertedNodes: function (collapsedVertexIndexes) {\r\n\t\tvar collapsedVertexIndex = new Array(1).fill(null);\r\n\t\tvar it = this.iterator();\r\n\t\tvar eiPrev = it.next();\r\n\t\twhile (it.hasNext()) {\r\n\t\t\tvar ei = it.next();\r\n\t\t\tvar isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\r\n\t\t\tif (isCollapsed) collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]));\r\n\t\t\teiPrev = ei;\r\n\t\t}\r\n\t},\r\n\tgetEdge: function () {\r\n\t\treturn this.edge;\r\n\t},\r\n\taddEndpoints: function () {\r\n\t\tvar maxSegIndex = this.edge.size() - 1;\r\n\t\tthis.add(this.edge.getCoordinate(0), 0);\r\n\t\tthis.add(this.edge.getCoordinate(maxSegIndex), maxSegIndex);\r\n\t},\r\n\tcreateSplitEdge: function (ei0, ei1) {\r\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\r\n\t\tvar lastSegStartPt = this.edge.getCoordinate(ei1.segmentIndex);\r\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\r\n\t\tif (!useIntPt1) {\r\n\t\t\tnpts--;\r\n\t\t}\r\n\t\tvar pts = new Array(npts).fill(null);\r\n\t\tvar ipt = 0;\r\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\r\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\r\n\t\t\tpts[ipt++] = this.edge.getCoordinate(i);\r\n\t\t}\r\n\t\tif (useIntPt1) pts[ipt] = new Coordinate(ei1.coord);\r\n\t\treturn new NodedSegmentString(pts, this.edge.getData());\r\n\t},\r\n\tadd: function (intPt, segmentIndex) {\r\n\t\tvar eiNew = new SegmentNode(this.edge, intPt, segmentIndex, this.edge.getSegmentOctant(segmentIndex));\r\n\t\tvar ei = this.nodeMap.get(eiNew);\r\n\t\tif (ei !== null) {\r\n\t\t\tAssert.isTrue(ei.coord.equals2D(intPt), \"Found equal nodes with different coordinates\");\r\n\t\t\treturn ei;\r\n\t\t}\r\n\t\tthis.nodeMap.put(eiNew, eiNew);\r\n\t\treturn eiNew;\r\n\t},\r\n\tcheckSplitEdgesCorrectness: function (splitEdges) {\r\n\t\tvar edgePts = this.edge.getCoordinates();\r\n\t\tvar split0 = splitEdges.get(0);\r\n\t\tvar pt0 = split0.getCoordinate(0);\r\n\t\tif (!pt0.equals2D(edgePts[0])) throw new RuntimeException(\"bad split edge start point at \" + pt0);\r\n\t\tvar splitn = splitEdges.get(splitEdges.size() - 1);\r\n\t\tvar splitnPts = splitn.getCoordinates();\r\n\t\tvar ptn = splitnPts[splitnPts.length - 1];\r\n\t\tif (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException(\"bad split edge end point at \" + ptn);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SegmentNodeList;\r\n\t}\r\n});\r\nfunction NodeVertexIterator() {\r\n\tthis.nodeList = null;\r\n\tthis.edge = null;\r\n\tthis.nodeIt = null;\r\n\tthis.currNode = null;\r\n\tthis.nextNode = null;\r\n\tthis.currSegIndex = 0;\r\n\tlet nodeList = arguments[0];\r\n\tthis.nodeList = nodeList;\r\n\tthis.edge = nodeList.getEdge();\r\n\tthis.nodeIt = nodeList.iterator();\r\n\tthis.readNextNode();\r\n}\r\nextend(NodeVertexIterator.prototype, {\r\n\tnext: function () {\r\n\t\tif (this.currNode === null) {\r\n\t\t\tthis.currNode = this.nextNode;\r\n\t\t\tthis.currSegIndex = this.currNode.segmentIndex;\r\n\t\t\tthis.readNextNode();\r\n\t\t\treturn this.currNode;\r\n\t\t}\r\n\t\tif (this.nextNode === null) return null;\r\n\t\tif (this.nextNode.segmentIndex === this.currNode.segmentIndex) {\r\n\t\t\tthis.currNode = this.nextNode;\r\n\t\t\tthis.currSegIndex = this.currNode.segmentIndex;\r\n\t\t\tthis.readNextNode();\r\n\t\t\treturn this.currNode;\r\n\t\t}\r\n\t\tif (this.nextNode.segmentIndex > this.currNode.segmentIndex) {}\r\n\t\treturn null;\r\n\t},\r\n\tremove: function () {\r\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\r\n\t},\r\n\thasNext: function () {\r\n\t\tif (this.nextNode === null) return false;\r\n\t\treturn true;\r\n\t},\r\n\treadNextNode: function () {\r\n\t\tif (this.nodeIt.hasNext()) this.nextNode = this.nodeIt.next(); else this.nextNode = null;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Iterator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodeVertexIterator;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport SegmentString from './SegmentString';\r\nexport default function NodableSegmentString() {}\r\nextend(NodableSegmentString.prototype, {\r\n\taddIntersection: function (intPt, segmentIndex) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [SegmentString];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodableSegmentString;\r\n\t}\r\n});\r\n","import SegmentNodeList from './SegmentNodeList';\r\nimport WKTWriter from '../io/WKTWriter';\r\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport Octant from './Octant';\r\nimport extend from '../../../../extend';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport NodableSegmentString from './NodableSegmentString';\r\nexport default function NodedSegmentString() {\r\n\tthis.nodeList = new SegmentNodeList(this);\r\n\tthis.pts = null;\r\n\tthis.data = null;\r\n\tlet pts = arguments[0], data = arguments[1];\r\n\tthis.pts = pts;\r\n\tthis.data = data;\r\n}\r\nextend(NodedSegmentString.prototype, {\r\n\tgetCoordinates: function () {\r\n\t\treturn this.pts;\r\n\t},\r\n\tsize: function () {\r\n\t\treturn this.pts.length;\r\n\t},\r\n\tgetCoordinate: function (i) {\r\n\t\treturn this.pts[i];\r\n\t},\r\n\tisClosed: function () {\r\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\r\n\t},\r\n\tgetSegmentOctant: function (index) {\r\n\t\tif (index === this.pts.length - 1) return -1;\r\n\t\treturn this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1));\r\n\t},\r\n\tsetData: function (data) {\r\n\t\tthis.data = data;\r\n\t},\r\n\tsafeOctant: function (p0, p1) {\r\n\t\tif (p0.equals2D(p1)) return 0;\r\n\t\treturn Octant.octant(p0, p1);\r\n\t},\r\n\tgetData: function () {\r\n\t\treturn this.data;\r\n\t},\r\n\taddIntersection: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet intPt = arguments[0], segmentIndex = arguments[1];\r\n\t\t\tthis.addIntersectionNode(intPt, segmentIndex);\r\n\t\t} else if (arguments.length === 4) {\r\n\t\t\tlet li = arguments[0], segmentIndex = arguments[1], geomIndex = arguments[2], intIndex = arguments[3];\r\n\t\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\r\n\t\t\tthis.addIntersection(intPt, segmentIndex);\r\n\t\t}\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.pts));\r\n\t},\r\n\tgetNodeList: function () {\r\n\t\treturn this.nodeList;\r\n\t},\r\n\taddIntersectionNode: function (intPt, segmentIndex) {\r\n\t\tvar normalizedSegmentIndex = segmentIndex;\r\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\r\n\t\tif (nextSegIndex < this.pts.length) {\r\n\t\t\tvar nextPt = this.pts[nextSegIndex];\r\n\t\t\tif (intPt.equals2D(nextPt)) {\r\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar ei = this.nodeList.add(intPt, normalizedSegmentIndex);\r\n\t\treturn ei;\r\n\t},\r\n\taddIntersections: function (li, segmentIndex, geomIndex) {\r\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\r\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [NodableSegmentString];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodedSegmentString;\r\n\t}\r\n});\r\nNodedSegmentString.getNodedSubstrings = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet segStrings = arguments[0];\r\n\t\tvar resultEdgelist = new ArrayList();\r\n\t\tNodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\r\n\t\treturn resultEdgelist;\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet segStrings = arguments[0], resultEdgelist = arguments[1];\r\n\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\r\n\t\t\tvar ss = i.next();\r\n\t\t\tss.getNodeList().addSplitEdges(resultEdgelist);\r\n\t\t}\r\n\t}\r\n};\r\n","import extend from '../../../../../extend';\r\nimport LineSegment from '../../geom/LineSegment';\r\nimport Envelope from '../../geom/Envelope';\r\nexport default function MonotoneChainOverlapAction() {\r\n\tthis.tempEnv1 = new Envelope();\r\n\tthis.tempEnv2 = new Envelope();\r\n\tthis.overlapSeg1 = new LineSegment();\r\n\tthis.overlapSeg2 = new LineSegment();\r\n}\r\nextend(MonotoneChainOverlapAction.prototype, {\r\n\toverlap: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet seg1 = arguments[0], seg2 = arguments[1];\r\n\t\t} else if (arguments.length === 4) {\r\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\r\n\t\t\tmc1.getLineSegment(start1, this.overlapSeg1);\r\n\t\t\tmc2.getLineSegment(start2, this.overlapSeg2);\r\n\t\t\tthis.overlap(this.overlapSeg1, this.overlapSeg2);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MonotoneChainOverlapAction;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport Envelope from '../../geom/Envelope';\r\nexport default function MonotoneChain() {\r\n\tthis.pts = null;\r\n\tthis.start = null;\r\n\tthis.end = null;\r\n\tthis.env = null;\r\n\tthis.context = null;\r\n\tthis.id = null;\r\n\tlet pts = arguments[0], start = arguments[1], end = arguments[2], context = arguments[3];\r\n\tthis.pts = pts;\r\n\tthis.start = start;\r\n\tthis.end = end;\r\n\tthis.context = context;\r\n}\r\nextend(MonotoneChain.prototype, {\r\n\tgetLineSegment: function (index, ls) {\r\n\t\tls.p0 = this.pts[index];\r\n\t\tls.p1 = this.pts[index + 1];\r\n\t},\r\n\tcomputeSelect: function (searchEnv, start0, end0, mcs) {\r\n\t\tvar p0 = this.pts[start0];\r\n\t\tvar p1 = this.pts[end0];\r\n\t\tmcs.tempEnv1.init(p0, p1);\r\n\t\tif (end0 - start0 === 1) {\r\n\t\t\tmcs.select(this, start0);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (!searchEnv.intersects(mcs.tempEnv1)) return null;\r\n\t\tvar mid = Math.trunc((start0 + end0) / 2);\r\n\t\tif (start0 < mid) {\r\n\t\t\tthis.computeSelect(searchEnv, start0, mid, mcs);\r\n\t\t}\r\n\t\tif (mid < end0) {\r\n\t\t\tthis.computeSelect(searchEnv, mid, end0, mcs);\r\n\t\t}\r\n\t},\r\n\tgetCoordinates: function () {\r\n\t\tvar coord = new Array(this.end - this.start + 1).fill(null);\r\n\t\tvar index = 0;\r\n\t\tfor (var i = this.start; i <= this.end; i++) {\r\n\t\t\tcoord[index++] = this.pts[i];\r\n\t\t}\r\n\t\treturn coord;\r\n\t},\r\n\tcomputeOverlaps: function (mc, mco) {\r\n\t\tthis.computeOverlapsInternal(this.start, this.end, mc, mc.start, mc.end, mco);\r\n\t},\r\n\tsetId: function (id) {\r\n\t\tthis.id = id;\r\n\t},\r\n\tselect: function (searchEnv, mcs) {\r\n\t\tthis.computeSelect(searchEnv, this.start, this.end, mcs);\r\n\t},\r\n\tgetEnvelope: function () {\r\n\t\tif (this.env === null) {\r\n\t\t\tvar p0 = this.pts[this.start];\r\n\t\t\tvar p1 = this.pts[this.end];\r\n\t\t\tthis.env = new Envelope(p0, p1);\r\n\t\t}\r\n\t\treturn this.env;\r\n\t},\r\n\tgetEndIndex: function () {\r\n\t\treturn this.end;\r\n\t},\r\n\tgetStartIndex: function () {\r\n\t\treturn this.start;\r\n\t},\r\n\tgetContext: function () {\r\n\t\treturn this.context;\r\n\t},\r\n\tgetId: function () {\r\n\t\treturn this.id;\r\n\t},\r\n\tcomputeOverlapsInternal: function (start0, end0, mc, start1, end1, mco) {\r\n\t\tvar p00 = this.pts[start0];\r\n\t\tvar p01 = this.pts[end0];\r\n\t\tvar p10 = mc.pts[start1];\r\n\t\tvar p11 = mc.pts[end1];\r\n\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\r\n\t\t\tmco.overlap(this, start0, mc, start1);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tmco.tempEnv1.init(p00, p01);\r\n\t\tmco.tempEnv2.init(p10, p11);\r\n\t\tif (!mco.tempEnv1.intersects(mco.tempEnv2)) return null;\r\n\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\r\n\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\r\n\t\tif (start0 < mid0) {\r\n\t\t\tif (start1 < mid1) this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco);\r\n\t\t\tif (mid1 < end1) this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco);\r\n\t\t}\r\n\t\tif (mid0 < end0) {\r\n\t\t\tif (start1 < mid1) this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco);\r\n\t\t\tif (mid1 < end1) this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MonotoneChain;\r\n\t}\r\n});\r\n","import Coordinate from '../geom/Coordinate';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nexport default function Quadrant() {}\r\nextend(Quadrant.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Quadrant;\r\n\t}\r\n});\r\nQuadrant.isNorthern = function (quad) {\r\n\treturn quad === Quadrant.NE || quad === Quadrant.NW;\r\n};\r\nQuadrant.isOpposite = function (quad1, quad2) {\r\n\tif (quad1 === quad2) return false;\r\n\tvar diff = (quad1 - quad2 + 4) % 4;\r\n\tif (diff === 2) return true;\r\n\treturn false;\r\n};\r\nQuadrant.commonHalfPlane = function (quad1, quad2) {\r\n\tif (quad1 === quad2) return quad1;\r\n\tvar diff = (quad1 - quad2 + 4) % 4;\r\n\tif (diff === 2) return -1;\r\n\tvar min = quad1 < quad2 ? quad1 : quad2;\r\n\tvar max = quad1 > quad2 ? quad1 : quad2;\r\n\tif (min === 0 && max === 3) return 3;\r\n\treturn min;\r\n};\r\nQuadrant.isInHalfPlane = function (quad, halfPlane) {\r\n\tif (halfPlane === Quadrant.SE) {\r\n\t\treturn quad === Quadrant.SE || quad === Quadrant.SW;\r\n\t}\r\n\treturn quad === halfPlane || quad === halfPlane + 1;\r\n};\r\nQuadrant.quadrant = function () {\r\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\r\n\t\tlet dx = arguments[0], dy = arguments[1];\r\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the quadrant for point ( \" + dx + \", \" + dy + \" )\");\r\n\t\tif (dx >= 0.0) {\r\n\t\t\tif (dy >= 0.0) return Quadrant.NE; else return Quadrant.SE;\r\n\t\t} else {\r\n\t\t\tif (dy >= 0.0) return Quadrant.NW; else return Quadrant.SW;\r\n\t\t}\r\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\r\n\t\tlet p0 = arguments[0], p1 = arguments[1];\r\n\t\tif (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException(\"Cannot compute the quadrant for two identical points \" + p0);\r\n\t\tif (p1.x >= p0.x) {\r\n\t\t\tif (p1.y >= p0.y) return Quadrant.NE; else return Quadrant.SE;\r\n\t\t} else {\r\n\t\t\tif (p1.y >= p0.y) return Quadrant.NW; else return Quadrant.SW;\r\n\t\t}\r\n\t}\r\n};\r\nQuadrant.NE = 0;\r\nQuadrant.NW = 1;\r\nQuadrant.SW = 2;\r\nQuadrant.SE = 3;\r\n","import MonotoneChain from './MonotoneChain';\r\nimport extend from '../../../../../extend';\r\nimport Integer from '../../../../../java/lang/Integer';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Quadrant from '../../geomgraph/Quadrant';\r\nexport default function MonotoneChainBuilder() {}\r\nextend(MonotoneChainBuilder.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MonotoneChainBuilder;\r\n\t}\r\n});\r\nMonotoneChainBuilder.getChainStartIndices = function (pts) {\r\n\tvar start = 0;\r\n\tvar startIndexList = new ArrayList();\r\n\tstartIndexList.add(new Integer(start));\r\n\tdo {\r\n\t\tvar last = MonotoneChainBuilder.findChainEnd(pts, start);\r\n\t\tstartIndexList.add(new Integer(last));\r\n\t\tstart = last;\r\n\t} while (start < pts.length - 1);\r\n\tvar startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\r\n\treturn startIndex;\r\n};\r\nMonotoneChainBuilder.findChainEnd = function (pts, start) {\r\n\tvar safeStart = start;\r\n\twhile (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\r\n\t\tsafeStart++;\r\n\t}\r\n\tif (safeStart >= pts.length - 1) {\r\n\t\treturn pts.length - 1;\r\n\t}\r\n\tvar chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\r\n\tvar last = start + 1;\r\n\twhile (last < pts.length) {\r\n\t\tif (!pts[last - 1].equals2D(pts[last])) {\r\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\r\n\t\t\tif (quad !== chainQuad) break;\r\n\t\t}\r\n\t\tlast++;\r\n\t}\r\n\treturn last - 1;\r\n};\r\nMonotoneChainBuilder.getChains = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet pts = arguments[0];\r\n\t\treturn MonotoneChainBuilder.getChains(pts, null);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet pts = arguments[0], context = arguments[1];\r\n\t\tvar mcList = new ArrayList();\r\n\t\tvar startIndex = MonotoneChainBuilder.getChainStartIndices(pts);\r\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\r\n\t\t\tvar mc = new MonotoneChain(pts, startIndex[i], startIndex[i + 1], context);\r\n\t\t\tmcList.add(mc);\r\n\t\t}\r\n\t\treturn mcList;\r\n\t}\r\n};\r\nMonotoneChainBuilder.toIntArray = function (list) {\r\n\tvar array = new Array(list.size()).fill(null);\r\n\tfor (var i = 0; i < array.length; i++) {\r\n\t\tarray[i] = list.get(i).intValue();\r\n\t}\r\n\treturn array;\r\n};\r\n","import extend from '../../../../extend';\r\nexport default function Noder() {}\r\nextend(Noder.prototype, {\r\n\tcomputeNodes: function (segStrings) {},\r\n\tgetNodedSubstrings: function () {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Noder;\r\n\t}\r\n});\r\n","import Noder from './Noder';\r\nimport extend from '../../../../extend';\r\nexport default function SinglePassNoder() {\r\n\tthis.segInt = null;\r\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\r\n\t\tlet segInt = arguments[0];\r\n\t\tthis.setSegmentIntersector(segInt);\r\n\t}\r\n}\r\nextend(SinglePassNoder.prototype, {\r\n\tsetSegmentIntersector: function (segInt) {\r\n\t\tthis.segInt = segInt;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Noder];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SinglePassNoder;\r\n\t}\r\n});\r\n","import STRtree from '../index/strtree/STRtree';\r\nimport NodedSegmentString from './NodedSegmentString';\r\nimport MonotoneChainOverlapAction from '../index/chain/MonotoneChainOverlapAction';\r\nimport extend from '../../../../extend';\r\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport inherits from '../../../../inherits';\r\nimport SinglePassNoder from './SinglePassNoder';\r\nexport default function MCIndexNoder() {\r\n\tthis.monoChains = new ArrayList();\r\n\tthis.index = new STRtree();\r\n\tthis.idCounter = 0;\r\n\tthis.nodedSegStrings = null;\r\n\tthis.nOverlaps = 0;\r\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\r\n\t\tlet si = arguments[0];\r\n\t\tSinglePassNoder.call(this, si);\r\n\t}\r\n}\r\ninherits(MCIndexNoder, SinglePassNoder);\r\nextend(MCIndexNoder.prototype, {\r\n\tgetMonotoneChains: function () {\r\n\t\treturn this.monoChains;\r\n\t},\r\n\tgetNodedSubstrings: function () {\r\n\t\treturn NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);\r\n\t},\r\n\tgetIndex: function () {\r\n\t\treturn this.index;\r\n\t},\r\n\tadd: function (segStr) {\r\n\t\tvar segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\r\n\t\tfor (var i = segChains.iterator(); i.hasNext(); ) {\r\n\t\t\tvar mc = i.next();\r\n\t\t\tmc.setId(this.idCounter++);\r\n\t\t\tthis.index.insert(mc.getEnvelope(), mc);\r\n\t\t\tthis.monoChains.add(mc);\r\n\t\t}\r\n\t},\r\n\tcomputeNodes: function (inputSegStrings) {\r\n\t\tthis.nodedSegStrings = inputSegStrings;\r\n\t\tfor (var i = inputSegStrings.iterator(); i.hasNext(); ) {\r\n\t\t\tthis.add(i.next());\r\n\t\t}\r\n\t\tthis.intersectChains();\r\n\t},\r\n\tintersectChains: function () {\r\n\t\tvar overlapAction = new SegmentOverlapAction(this.segInt);\r\n\t\tfor (var i = this.monoChains.iterator(); i.hasNext(); ) {\r\n\t\t\tvar queryChain = i.next();\r\n\t\t\tvar overlapChains = this.index.query(queryChain.getEnvelope());\r\n\t\t\tfor (var j = overlapChains.iterator(); j.hasNext(); ) {\r\n\t\t\t\tvar testChain = j.next();\r\n\t\t\t\tif (testChain.getId() > queryChain.getId()) {\r\n\t\t\t\t\tqueryChain.computeOverlaps(testChain, overlapAction);\r\n\t\t\t\t\tthis.nOverlaps++;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.segInt.isDone()) return null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MCIndexNoder;\r\n\t}\r\n});\r\nfunction SegmentOverlapAction() {\r\n\tMonotoneChainOverlapAction.apply(this);\r\n\tthis.si = null;\r\n\tlet si = arguments[0];\r\n\tthis.si = si;\r\n}\r\ninherits(SegmentOverlapAction, MonotoneChainOverlapAction);\r\nextend(SegmentOverlapAction.prototype, {\r\n\toverlap: function () {\r\n\t\tif (arguments.length === 4) {\r\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\r\n\t\t\tvar ss1 = mc1.getContext();\r\n\t\t\tvar ss2 = mc2.getContext();\r\n\t\t\tthis.si.processIntersections(ss1, start1, ss2, start2);\r\n\t\t} else return MonotoneChainOverlapAction.prototype.overlap.apply(this, arguments);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SegmentOverlapAction;\r\n\t}\r\n});\r\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction;\r\n","import Coordinate from './Coordinate';\r\nimport extend from '../../../../extend';\r\nimport RuntimeException from '../../../../java/lang/RuntimeException';\r\nimport inherits from '../../../../inherits';\r\nexport default function TopologyException() {\r\n\tthis.pt = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet msg = arguments[0];\r\n\t\tRuntimeException.call(this, msg);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet msg = arguments[0], pt = arguments[1];\r\n\t\tRuntimeException.call(this, TopologyException.msgWithCoord(msg, pt));\r\n\t\tthis.name = 'TopologyException';\r\n\t\tthis.pt = new Coordinate(pt);\r\n\t}\r\n}\r\ninherits(TopologyException, RuntimeException);\r\nextend(TopologyException.prototype, {\r\n\tgetCoordinate: function () {\r\n\t\treturn this.pt;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TopologyException;\r\n\t}\r\n});\r\nTopologyException.msgWithCoord = function (msg, pt) {\r\n\tif (pt !== null) return msg + \" [ \" + pt + \" ]\";\r\n\treturn msg;\r\n};\r\n","import extend from '../../../../extend';\r\nexport default function SegmentIntersector() {}\r\nextend(SegmentIntersector.prototype, {\r\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {},\r\n\tisDone: function () {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SegmentIntersector;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport SegmentIntersector from './SegmentIntersector';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function InteriorIntersectionFinder() {\r\n\tthis.findAllIntersections = false;\r\n\tthis.isCheckEndSegmentsOnly = false;\r\n\tthis.li = null;\r\n\tthis.interiorIntersection = null;\r\n\tthis.intSegments = null;\r\n\tthis.intersections = new ArrayList();\r\n\tthis.intersectionCount = 0;\r\n\tthis.keepIntersections = true;\r\n\tlet li = arguments[0];\r\n\tthis.li = li;\r\n\tthis.interiorIntersection = null;\r\n}\r\nextend(InteriorIntersectionFinder.prototype, {\r\n\tgetInteriorIntersection: function () {\r\n\t\treturn this.interiorIntersection;\r\n\t},\r\n\tsetCheckEndSegmentsOnly: function (isCheckEndSegmentsOnly) {\r\n\t\tthis.isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\r\n\t},\r\n\tgetIntersectionSegments: function () {\r\n\t\treturn this.intSegments;\r\n\t},\r\n\tcount: function () {\r\n\t\treturn this.intersectionCount;\r\n\t},\r\n\tgetIntersections: function () {\r\n\t\treturn this.intersections;\r\n\t},\r\n\tsetFindAllIntersections: function (findAllIntersections) {\r\n\t\tthis.findAllIntersections = findAllIntersections;\r\n\t},\r\n\tsetKeepIntersections: function (keepIntersections) {\r\n\t\tthis.keepIntersections = keepIntersections;\r\n\t},\r\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\r\n\t\tif (!this.findAllIntersections && this.hasIntersection()) return null;\r\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\r\n\t\tif (this.isCheckEndSegmentsOnly) {\r\n\t\t\tvar isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\r\n\t\t\tif (!isEndSegPresent) return null;\r\n\t\t}\r\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\r\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\r\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\r\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\r\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\r\n\t\tif (this.li.hasIntersection()) {\r\n\t\t\tif (this.li.isInteriorIntersection()) {\r\n\t\t\t\tthis.intSegments = new Array(4).fill(null);\r\n\t\t\t\tthis.intSegments[0] = p00;\r\n\t\t\t\tthis.intSegments[1] = p01;\r\n\t\t\t\tthis.intSegments[2] = p10;\r\n\t\t\t\tthis.intSegments[3] = p11;\r\n\t\t\t\tthis.interiorIntersection = this.li.getIntersection(0);\r\n\t\t\t\tif (this.keepIntersections) this.intersections.add(this.interiorIntersection);\r\n\t\t\t\tthis.intersectionCount++;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisEndSegment: function (segStr, index) {\r\n\t\tif (index === 0) return true;\r\n\t\tif (index >= segStr.size() - 2) return true;\r\n\t\treturn false;\r\n\t},\r\n\thasIntersection: function () {\r\n\t\treturn this.interiorIntersection !== null;\r\n\t},\r\n\tisDone: function () {\r\n\t\tif (this.findAllIntersections) return false;\r\n\t\treturn this.interiorIntersection !== null;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [SegmentIntersector];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn InteriorIntersectionFinder;\r\n\t}\r\n});\r\nInteriorIntersectionFinder.createAllIntersectionsFinder = function (li) {\r\n\tvar finder = new InteriorIntersectionFinder(li);\r\n\tfinder.setFindAllIntersections(true);\r\n\treturn finder;\r\n};\r\nInteriorIntersectionFinder.createAnyIntersectionFinder = function (li) {\r\n\treturn new InteriorIntersectionFinder(li);\r\n};\r\nInteriorIntersectionFinder.createIntersectionCounter = function (li) {\r\n\tvar finder = new InteriorIntersectionFinder(li);\r\n\tfinder.setFindAllIntersections(true);\r\n\tfinder.setKeepIntersections(false);\r\n\treturn finder;\r\n};\r\n","import WKTWriter from '../io/WKTWriter';\r\nimport MCIndexNoder from './MCIndexNoder';\r\nimport TopologyException from '../geom/TopologyException';\r\nimport extend from '../../../../extend';\r\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\r\nimport InteriorIntersectionFinder from './InteriorIntersectionFinder';\r\nexport default function FastNodingValidator() {\r\n\tthis.li = new RobustLineIntersector();\r\n\tthis.segStrings = null;\r\n\tthis.findAllIntersections = false;\r\n\tthis.segInt = null;\r\n\tthis._isValid = true;\r\n\tlet segStrings = arguments[0];\r\n\tthis.segStrings = segStrings;\r\n}\r\nextend(FastNodingValidator.prototype, {\r\n\texecute: function () {\r\n\t\tif (this.segInt !== null) return null;\r\n\t\tthis.checkInteriorIntersections();\r\n\t},\r\n\tgetIntersections: function () {\r\n\t\treturn this.segInt.getIntersections();\r\n\t},\r\n\tisValid: function () {\r\n\t\tthis.execute();\r\n\t\treturn this._isValid;\r\n\t},\r\n\tsetFindAllIntersections: function (findAllIntersections) {\r\n\t\tthis.findAllIntersections = findAllIntersections;\r\n\t},\r\n\tcheckInteriorIntersections: function () {\r\n\t\tthis._isValid = true;\r\n\t\tthis.segInt = new InteriorIntersectionFinder(this.li);\r\n\t\tthis.segInt.setFindAllIntersections(this.findAllIntersections);\r\n\t\tvar noder = new MCIndexNoder();\r\n\t\tnoder.setSegmentIntersector(this.segInt);\r\n\t\tnoder.computeNodes(this.segStrings);\r\n\t\tif (this.segInt.hasIntersection()) {\r\n\t\t\tthis._isValid = false;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tcheckValid: function () {\r\n\t\tthis.execute();\r\n\t\tif (!this._isValid) throw new TopologyException(this.getErrorMessage(), this.segInt.getInteriorIntersection());\r\n\t},\r\n\tgetErrorMessage: function () {\r\n\t\tif (this._isValid) return \"no intersections found\";\r\n\t\tvar intSegs = this.segInt.getIntersectionSegments();\r\n\t\treturn \"found non-noded intersection between \" + WKTWriter.toLineString(intSegs[0], intSegs[1]) + \" and \" + WKTWriter.toLineString(intSegs[2], intSegs[3]);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn FastNodingValidator;\r\n\t}\r\n});\r\nFastNodingValidator.computeIntersections = function (segStrings) {\r\n\tvar nv = new FastNodingValidator(segStrings);\r\n\tnv.setFindAllIntersections(true);\r\n\tnv.isValid();\r\n\treturn nv.getIntersections();\r\n};\r\n","import BasicSegmentString from '../noding/BasicSegmentString';\r\nimport extend from '../../../../extend';\r\nimport FastNodingValidator from '../noding/FastNodingValidator';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function EdgeNodingValidator() {\r\n\tthis.nv = null;\r\n\tlet edges = arguments[0];\r\n\tthis.nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\r\n}\r\nextend(EdgeNodingValidator.prototype, {\r\n\tcheckValid: function () {\r\n\t\tthis.nv.checkValid();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeNodingValidator;\r\n\t}\r\n});\r\nEdgeNodingValidator.toSegmentStrings = function (edges) {\r\n\tvar segStrings = new ArrayList();\r\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\r\n\t\tvar e = i.next();\r\n\t\tsegStrings.add(new BasicSegmentString(e.getCoordinates(), e));\r\n\t}\r\n\treturn segStrings;\r\n};\r\nEdgeNodingValidator.checkValid = function (edges) {\r\n\tvar validator = new EdgeNodingValidator(edges);\r\n\tvalidator.checkValid();\r\n};\r\n","import GeometryFactory from '../GeometryFactory';\r\nimport extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nexport default function GeometryCollectionMapper() {\r\n\tthis.mapOp = null;\r\n\tlet mapOp = arguments[0];\r\n\tthis.mapOp = mapOp;\r\n}\r\nextend(GeometryCollectionMapper.prototype, {\r\n\tmap: function (gc) {\r\n\t\tvar mapped = new ArrayList();\r\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\r\n\t\t\tvar g = this.mapOp.map(gc.getGeometryN(i));\r\n\t\t\tif (!g.isEmpty()) mapped.add(g);\r\n\t\t}\r\n\t\treturn gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped));\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryCollectionMapper;\r\n\t}\r\n});\r\nGeometryCollectionMapper.map = function (gc, op) {\r\n\tvar mapper = new GeometryCollectionMapper(op);\r\n\treturn mapper.map(gc);\r\n};\r\n","import extend from '../../../../extend';\r\nexport default function Position() {}\r\nextend(Position.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Position;\r\n\t}\r\n});\r\nPosition.opposite = function (position) {\r\n\tif (position === Position.LEFT) return Position.RIGHT;\r\n\tif (position === Position.RIGHT) return Position.LEFT;\r\n\treturn position;\r\n};\r\nPosition.ON = 0;\r\nPosition.LEFT = 1;\r\nPosition.RIGHT = 2;\r\n","import StringBuffer from '../../../../java/lang/StringBuffer';\r\nimport Location from '../geom/Location';\r\nimport Position from './Position';\r\nimport extend from '../../../../extend';\r\nexport default function TopologyLocation() {\r\n\tthis.location = null;\r\n\tif (arguments.length === 1) {\r\n\t\tif (arguments[0] instanceof Array) {\r\n\t\t\tlet location = arguments[0];\r\n\t\t\tthis.init(location.length);\r\n\t\t} else if (Number.isInteger(arguments[0])) {\r\n\t\t\tlet on = arguments[0];\r\n\t\t\tthis.init(1);\r\n\t\t\tthis.location[Position.ON] = on;\r\n\t\t} else if (arguments[0] instanceof TopologyLocation) {\r\n\t\t\tlet gl = arguments[0];\r\n\t\t\tthis.init(gl.location.length);\r\n\t\t\tif (gl !== null) {\r\n\t\t\t\tfor (var i = 0; i < this.location.length; i++) {\r\n\t\t\t\t\tthis.location[i] = gl.location[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet on = arguments[0], left = arguments[1], right = arguments[2];\r\n\t\tthis.init(3);\r\n\t\tthis.location[Position.ON] = on;\r\n\t\tthis.location[Position.LEFT] = left;\r\n\t\tthis.location[Position.RIGHT] = right;\r\n\t}\r\n}\r\nextend(TopologyLocation.prototype, {\r\n\tsetAllLocations: function (locValue) {\r\n\t\tfor (var i = 0; i < this.location.length; i++) {\r\n\t\t\tthis.location[i] = locValue;\r\n\t\t}\r\n\t},\r\n\tisNull: function () {\r\n\t\tfor (var i = 0; i < this.location.length; i++) {\r\n\t\t\tif (this.location[i] !== Location.NONE) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tsetAllLocationsIfNull: function (locValue) {\r\n\t\tfor (var i = 0; i < this.location.length; i++) {\r\n\t\t\tif (this.location[i] === Location.NONE) this.location[i] = locValue;\r\n\t\t}\r\n\t},\r\n\tisLine: function () {\r\n\t\treturn this.location.length === 1;\r\n\t},\r\n\tmerge: function (gl) {\r\n\t\tif (gl.location.length > this.location.length) {\r\n\t\t\tvar newLoc = new Array(3).fill(null);\r\n\t\t\tnewLoc[Position.ON] = this.location[Position.ON];\r\n\t\t\tnewLoc[Position.LEFT] = Location.NONE;\r\n\t\t\tnewLoc[Position.RIGHT] = Location.NONE;\r\n\t\t\tthis.location = newLoc;\r\n\t\t}\r\n\t\tfor (var i = 0; i < this.location.length; i++) {\r\n\t\t\tif (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i];\r\n\t\t}\r\n\t},\r\n\tgetLocations: function () {\r\n\t\treturn this.location;\r\n\t},\r\n\tflip: function () {\r\n\t\tif (this.location.length <= 1) return null;\r\n\t\tvar temp = this.location[Position.LEFT];\r\n\t\tthis.location[Position.LEFT] = this.location[Position.RIGHT];\r\n\t\tthis.location[Position.RIGHT] = temp;\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar buf = new StringBuffer();\r\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]));\r\n\t\tbuf.append(Location.toLocationSymbol(this.location[Position.ON]));\r\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]));\r\n\t\treturn buf.toString();\r\n\t},\r\n\tsetLocations: function (on, left, right) {\r\n\t\tthis.location[Position.ON] = on;\r\n\t\tthis.location[Position.LEFT] = left;\r\n\t\tthis.location[Position.RIGHT] = right;\r\n\t},\r\n\tget: function (posIndex) {\r\n\t\tif (posIndex < this.location.length) return this.location[posIndex];\r\n\t\treturn Location.NONE;\r\n\t},\r\n\tisArea: function () {\r\n\t\treturn this.location.length > 1;\r\n\t},\r\n\tisAnyNull: function () {\r\n\t\tfor (var i = 0; i < this.location.length; i++) {\r\n\t\t\tif (this.location[i] === Location.NONE) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tsetLocation: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet locValue = arguments[0];\r\n\t\t\tthis.setLocation(Position.ON, locValue);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet locIndex = arguments[0], locValue = arguments[1];\r\n\t\t\tthis.location[locIndex] = locValue;\r\n\t\t}\r\n\t},\r\n\tinit: function (size) {\r\n\t\tthis.location = new Array(size).fill(null);\r\n\t\tthis.setAllLocations(Location.NONE);\r\n\t},\r\n\tisEqualOnSide: function (le, locIndex) {\r\n\t\treturn this.location[locIndex] === le.location[locIndex];\r\n\t},\r\n\tallPositionsEqual: function (loc) {\r\n\t\tfor (var i = 0; i < this.location.length; i++) {\r\n\t\t\tif (this.location[i] !== loc) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TopologyLocation;\r\n\t}\r\n});\r\n","import StringBuffer from '../../../../java/lang/StringBuffer';\r\nimport Location from '../geom/Location';\r\nimport Position from './Position';\r\nimport extend from '../../../../extend';\r\nimport TopologyLocation from './TopologyLocation';\r\nexport default function Label() {\r\n\tthis.elt = new Array(2).fill(null);\r\n\tif (arguments.length === 1) {\r\n\t\tif (Number.isInteger(arguments[0])) {\r\n\t\t\tlet onLoc = arguments[0];\r\n\t\t\tthis.elt[0] = new TopologyLocation(onLoc);\r\n\t\t\tthis.elt[1] = new TopologyLocation(onLoc);\r\n\t\t} else if (arguments[0] instanceof Label) {\r\n\t\t\tlet lbl = arguments[0];\r\n\t\t\tthis.elt[0] = new TopologyLocation(lbl.elt[0]);\r\n\t\t\tthis.elt[1] = new TopologyLocation(lbl.elt[1]);\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1];\r\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE);\r\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE);\r\n\t\tthis.elt[geomIndex].setLocation(onLoc);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet onLoc = arguments[0], leftLoc = arguments[1], rightLoc = arguments[2];\r\n\t\tthis.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc);\r\n\t\tthis.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc);\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1], leftLoc = arguments[2], rightLoc = arguments[3];\r\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\r\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\r\n\t\tthis.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc);\r\n\t}\r\n}\r\nextend(Label.prototype, {\r\n\tgetGeometryCount: function () {\r\n\t\tvar count = 0;\r\n\t\tif (!this.elt[0].isNull()) count++;\r\n\t\tif (!this.elt[1].isNull()) count++;\r\n\t\treturn count;\r\n\t},\r\n\tsetAllLocations: function (geomIndex, location) {\r\n\t\tthis.elt[geomIndex].setAllLocations(location);\r\n\t},\r\n\tisNull: function (geomIndex) {\r\n\t\treturn this.elt[geomIndex].isNull();\r\n\t},\r\n\tsetAllLocationsIfNull: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet location = arguments[0];\r\n\t\t\tthis.setAllLocationsIfNull(0, location);\r\n\t\t\tthis.setAllLocationsIfNull(1, location);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\r\n\t\t\tthis.elt[geomIndex].setAllLocationsIfNull(location);\r\n\t\t}\r\n\t},\r\n\tisLine: function (geomIndex) {\r\n\t\treturn this.elt[geomIndex].isLine();\r\n\t},\r\n\tmerge: function (lbl) {\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tif (this.elt[i] === null && lbl.elt[i] !== null) {\r\n\t\t\t\tthis.elt[i] = new TopologyLocation(lbl.elt[i]);\r\n\t\t\t} else {\r\n\t\t\t\tthis.elt[i].merge(lbl.elt[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tflip: function () {\r\n\t\tthis.elt[0].flip();\r\n\t\tthis.elt[1].flip();\r\n\t},\r\n\tgetLocation: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet geomIndex = arguments[0];\r\n\t\t\treturn this.elt[geomIndex].get(Position.ON);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\r\n\t\t\treturn this.elt[geomIndex].get(posIndex);\r\n\t\t}\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar buf = new StringBuffer();\r\n\t\tif (this.elt[0] !== null) {\r\n\t\t\tbuf.append(\"A:\");\r\n\t\t\tbuf.append(this.elt[0].toString());\r\n\t\t}\r\n\t\tif (this.elt[1] !== null) {\r\n\t\t\tbuf.append(\" B:\");\r\n\t\t\tbuf.append(this.elt[1].toString());\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t},\r\n\tisArea: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn this.elt[0].isArea() || this.elt[1].isArea();\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet geomIndex = arguments[0];\r\n\t\t\treturn this.elt[geomIndex].isArea();\r\n\t\t}\r\n\t},\r\n\tisAnyNull: function (geomIndex) {\r\n\t\treturn this.elt[geomIndex].isAnyNull();\r\n\t},\r\n\tsetLocation: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\r\n\t\t\tthis.elt[geomIndex].setLocation(Position.ON, location);\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\r\n\t\t\tthis.elt[geomIndex].setLocation(posIndex, location);\r\n\t\t}\r\n\t},\r\n\tisEqualOnSide: function (lbl, side) {\r\n\t\treturn this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side);\r\n\t},\r\n\tallPositionsEqual: function (geomIndex, loc) {\r\n\t\treturn this.elt[geomIndex].allPositionsEqual(loc);\r\n\t},\r\n\ttoLine: function (geomIndex) {\r\n\t\tif (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Label;\r\n\t}\r\n});\r\nLabel.toLineLabel = function (label) {\r\n\tvar lineLabel = new Label(Location.NONE);\r\n\tfor (var i = 0; i < 2; i++) {\r\n\t\tlineLabel.setLocation(i, label.getLocation(i));\r\n\t}\r\n\treturn lineLabel;\r\n};\r\n","import Location from '../geom/Location';\r\nimport CGAlgorithms from '../algorithm/CGAlgorithms';\r\nimport Position from './Position';\r\nimport TopologyException from '../geom/TopologyException';\r\nimport extend from '../../../../extend';\r\nimport Label from './Label';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Assert from '../util/Assert';\r\nexport default function EdgeRing() {\r\n\tthis.startDe = null;\r\n\tthis.maxNodeDegree = -1;\r\n\tthis.edges = new ArrayList();\r\n\tthis.pts = new ArrayList();\r\n\tthis.label = new Label(Location.NONE);\r\n\tthis.ring = null;\r\n\tthis._isHole = null;\r\n\tthis.shell = null;\r\n\tthis.holes = new ArrayList();\r\n\tthis.geometryFactory = null;\r\n\tlet start = arguments[0], geometryFactory = arguments[1];\r\n\tthis.geometryFactory = geometryFactory;\r\n\tthis.computePoints(start);\r\n\tthis.computeRing();\r\n}\r\nextend(EdgeRing.prototype, {\r\n\tcomputeRing: function () {\r\n\t\tif (this.ring !== null) return null;\r\n\t\tvar coord = new Array(this.pts.size()).fill(null);\r\n\t\tfor (var i = 0; i < this.pts.size(); i++) {\r\n\t\t\tcoord[i] = this.pts.get(i);\r\n\t\t}\r\n\t\tthis.ring = this.geometryFactory.createLinearRing(coord);\r\n\t\tthis._isHole = CGAlgorithms.isCCW(this.ring.getCoordinates());\r\n\t},\r\n\tisIsolated: function () {\r\n\t\treturn this.label.getGeometryCount() === 1;\r\n\t},\r\n\tcomputePoints: function (start) {\r\n\t\tthis.startDe = start;\r\n\t\tvar de = start;\r\n\t\tvar isFirstEdge = true;\r\n\t\tdo {\r\n\t\t\tif (de === null) throw new TopologyException(\"Found null DirectedEdge\");\r\n\t\t\tif (de.getEdgeRing() === this) throw new TopologyException(\"Directed Edge visited twice during ring-building at \" + de.getCoordinate());\r\n\t\t\tthis.edges.add(de);\r\n\t\t\tvar label = de.getLabel();\r\n\t\t\tAssert.isTrue(label.isArea());\r\n\t\t\tthis.mergeLabel(label);\r\n\t\t\tthis.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\r\n\t\t\tisFirstEdge = false;\r\n\t\t\tthis.setEdgeRing(de, this);\r\n\t\t\tde = this.getNext(de);\r\n\t\t} while (de !== this.startDe);\r\n\t},\r\n\tgetLinearRing: function () {\r\n\t\treturn this.ring;\r\n\t},\r\n\tgetCoordinate: function (i) {\r\n\t\treturn this.pts.get(i);\r\n\t},\r\n\tcomputeMaxNodeDegree: function () {\r\n\t\tthis.maxNodeDegree = 0;\r\n\t\tvar de = this.startDe;\r\n\t\tdo {\r\n\t\t\tvar node = de.getNode();\r\n\t\t\tvar degree = node.getEdges().getOutgoingDegree(this);\r\n\t\t\tif (degree > this.maxNodeDegree) this.maxNodeDegree = degree;\r\n\t\t\tde = this.getNext(de);\r\n\t\t} while (de !== this.startDe);\r\n\t\tthis.maxNodeDegree *= 2;\r\n\t},\r\n\taddPoints: function (edge, isForward, isFirstEdge) {\r\n\t\tvar edgePts = edge.getCoordinates();\r\n\t\tif (isForward) {\r\n\t\t\tvar startIndex = 1;\r\n\t\t\tif (isFirstEdge) startIndex = 0;\r\n\t\t\tfor (var i = startIndex; i < edgePts.length; i++) {\r\n\t\t\t\tthis.pts.add(edgePts[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar startIndex = edgePts.length - 2;\r\n\t\t\tif (isFirstEdge) startIndex = edgePts.length - 1;\r\n\t\t\tfor (var i = startIndex; i >= 0; i--) {\r\n\t\t\t\tthis.pts.add(edgePts[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisHole: function () {\r\n\t\treturn this._isHole;\r\n\t},\r\n\tsetInResult: function () {\r\n\t\tvar de = this.startDe;\r\n\t\tdo {\r\n\t\t\tde.getEdge().setInResult(true);\r\n\t\t\tde = de.getNext();\r\n\t\t} while (de !== this.startDe);\r\n\t},\r\n\tcontainsPoint: function (p) {\r\n\t\tvar shell = this.getLinearRing();\r\n\t\tvar env = shell.getEnvelopeInternal();\r\n\t\tif (!env.contains(p)) return false;\r\n\t\tif (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) return false;\r\n\t\tfor (var i = this.holes.iterator(); i.hasNext(); ) {\r\n\t\t\tvar hole = i.next();\r\n\t\t\tif (hole.containsPoint(p)) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\taddHole: function (ring) {\r\n\t\tthis.holes.add(ring);\r\n\t},\r\n\tisShell: function () {\r\n\t\treturn this.shell === null;\r\n\t},\r\n\tgetLabel: function () {\r\n\t\treturn this.label;\r\n\t},\r\n\tgetEdges: function () {\r\n\t\treturn this.edges;\r\n\t},\r\n\tgetMaxNodeDegree: function () {\r\n\t\tif (this.maxNodeDegree < 0) this.computeMaxNodeDegree();\r\n\t\treturn this.maxNodeDegree;\r\n\t},\r\n\tgetShell: function () {\r\n\t\treturn this.shell;\r\n\t},\r\n\tmergeLabel: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet deLabel = arguments[0];\r\n\t\t\tthis.mergeLabel(deLabel, 0);\r\n\t\t\tthis.mergeLabel(deLabel, 1);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet deLabel = arguments[0], geomIndex = arguments[1];\r\n\t\t\tvar loc = deLabel.getLocation(geomIndex, Position.RIGHT);\r\n\t\t\tif (loc === Location.NONE) return null;\r\n\t\t\tif (this.label.getLocation(geomIndex) === Location.NONE) {\r\n\t\t\t\tthis.label.setLocation(geomIndex, loc);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tsetShell: function (shell) {\r\n\t\tthis.shell = shell;\r\n\t\tif (shell !== null) shell.addHole(this);\r\n\t},\r\n\ttoPolygon: function (geometryFactory) {\r\n\t\tvar holeLR = new Array(this.holes.size()).fill(null);\r\n\t\tfor (var i = 0; i < this.holes.size(); i++) {\r\n\t\t\tholeLR[i] = this.holes.get(i).getLinearRing();\r\n\t\t}\r\n\t\tvar poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\r\n\t\treturn poly;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeRing;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport EdgeRing from '../../geomgraph/EdgeRing';\r\nimport inherits from '../../../../../inherits';\r\nexport default function MinimalEdgeRing() {\r\n\tlet start = arguments[0], geometryFactory = arguments[1];\r\n\tEdgeRing.call(this, start, geometryFactory);\r\n}\r\ninherits(MinimalEdgeRing, EdgeRing);\r\nextend(MinimalEdgeRing.prototype, {\r\n\tsetEdgeRing: function (de, er) {\r\n\t\tde.setMinEdgeRing(er);\r\n\t},\r\n\tgetNext: function (de) {\r\n\t\treturn de.getNextMin();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MinimalEdgeRing;\r\n\t}\r\n});\r\n","import MinimalEdgeRing from './MinimalEdgeRing';\r\nimport extend from '../../../../../extend';\r\nimport EdgeRing from '../../geomgraph/EdgeRing';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport inherits from '../../../../../inherits';\r\nexport default function MaximalEdgeRing() {\r\n\tlet start = arguments[0], geometryFactory = arguments[1];\r\n\tEdgeRing.call(this, start, geometryFactory);\r\n}\r\ninherits(MaximalEdgeRing, EdgeRing);\r\nextend(MaximalEdgeRing.prototype, {\r\n\tbuildMinimalRings: function () {\r\n\t\tvar minEdgeRings = new ArrayList();\r\n\t\tvar de = this.startDe;\r\n\t\tdo {\r\n\t\t\tif (de.getMinEdgeRing() === null) {\r\n\t\t\t\tvar minEr = new MinimalEdgeRing(de, this.geometryFactory);\r\n\t\t\t\tminEdgeRings.add(minEr);\r\n\t\t\t}\r\n\t\t\tde = de.getNext();\r\n\t\t} while (de !== this.startDe);\r\n\t\treturn minEdgeRings;\r\n\t},\r\n\tsetEdgeRing: function (de, er) {\r\n\t\tde.setEdgeRing(er);\r\n\t},\r\n\tlinkDirectedEdgesForMinimalEdgeRings: function () {\r\n\t\tvar de = this.startDe;\r\n\t\tdo {\r\n\t\t\tvar node = de.getNode();\r\n\t\t\tnode.getEdges().linkMinimalDirectedEdges(this);\r\n\t\t\tde = de.getNext();\r\n\t\t} while (de !== this.startDe);\r\n\t},\r\n\tgetNext: function (de) {\r\n\t\treturn de.getNext();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MaximalEdgeRing;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport Assert from '../util/Assert';\r\nexport default function GraphComponent() {\r\n\tthis.label = null;\r\n\tthis._isInResult = false;\r\n\tthis._isCovered = false;\r\n\tthis._isCoveredSet = false;\r\n\tthis._isVisited = false;\r\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\r\n\t\tlet label = arguments[0];\r\n\t\tthis.label = label;\r\n\t}\r\n}\r\nextend(GraphComponent.prototype, {\r\n\tsetVisited: function (isVisited) {\r\n\t\tthis._isVisited = isVisited;\r\n\t},\r\n\tsetInResult: function (isInResult) {\r\n\t\tthis._isInResult = isInResult;\r\n\t},\r\n\tisCovered: function () {\r\n\t\treturn this._isCovered;\r\n\t},\r\n\tisCoveredSet: function () {\r\n\t\treturn this._isCoveredSet;\r\n\t},\r\n\tsetLabel: function (label) {\r\n\t\tthis.label = label;\r\n\t},\r\n\tgetLabel: function () {\r\n\t\treturn this.label;\r\n\t},\r\n\tsetCovered: function (isCovered) {\r\n\t\tthis._isCovered = isCovered;\r\n\t\tthis._isCoveredSet = true;\r\n\t},\r\n\tupdateIM: function (im) {\r\n\t\tAssert.isTrue(this.label.getGeometryCount() >= 2, \"found partial label\");\r\n\t\tthis.computeIM(im);\r\n\t},\r\n\tisInResult: function () {\r\n\t\treturn this._isInResult;\r\n\t},\r\n\tisVisited: function () {\r\n\t\treturn this._isVisited;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GraphComponent;\r\n\t}\r\n});\r\n","import Location from '../geom/Location';\r\nimport extend from '../../../../extend';\r\nimport Label from './Label';\r\nimport inherits from '../../../../inherits';\r\nimport GraphComponent from './GraphComponent';\r\nexport default function Node() {\r\n\tGraphComponent.apply(this);\r\n\tthis.coord = null;\r\n\tthis.edges = null;\r\n\tlet coord = arguments[0], edges = arguments[1];\r\n\tthis.coord = coord;\r\n\tthis.edges = edges;\r\n\tthis.label = new Label(0, Location.NONE);\r\n}\r\ninherits(Node, GraphComponent);\r\nextend(Node.prototype, {\r\n\tisIncidentEdgeInResult: function () {\r\n\t\tfor (var it = this.getEdges().getEdges().iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tif (de.getEdge().isInResult()) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tisIsolated: function () {\r\n\t\treturn this.label.getGeometryCount() === 1;\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.coord;\r\n\t},\r\n\tprint: function (out) {\r\n\t\tout.println(\"node \" + this.coord + \" lbl: \" + this.label);\r\n\t},\r\n\tcomputeIM: function (im) {},\r\n\tcomputeMergedLocation: function (label2, eltIndex) {\r\n\t\tvar loc = Location.NONE;\r\n\t\tloc = this.label.getLocation(eltIndex);\r\n\t\tif (!label2.isNull(eltIndex)) {\r\n\t\t\tvar nLoc = label2.getLocation(eltIndex);\r\n\t\t\tif (loc !== Location.BOUNDARY) loc = nLoc;\r\n\t\t}\r\n\t\treturn loc;\r\n\t},\r\n\tsetLabel: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet argIndex = arguments[0], onLocation = arguments[1];\r\n\t\t\tif (this.label === null) {\r\n\t\t\t\tthis.label = new Label(argIndex, onLocation);\r\n\t\t\t} else this.label.setLocation(argIndex, onLocation);\r\n\t\t} else return GraphComponent.prototype.setLabel.apply(this, arguments);\r\n\t},\r\n\tgetEdges: function () {\r\n\t\treturn this.edges;\r\n\t},\r\n\tmergeLabel: function () {\r\n\t\tif (arguments[0] instanceof Node) {\r\n\t\t\tlet n = arguments[0];\r\n\t\t\tthis.mergeLabel(n.label);\r\n\t\t} else if (arguments[0] instanceof Label) {\r\n\t\t\tlet label2 = arguments[0];\r\n\t\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\t\tvar loc = this.computeMergedLocation(label2, i);\r\n\t\t\t\tvar thisLoc = this.label.getLocation(i);\r\n\t\t\t\tif (thisLoc === Location.NONE) this.label.setLocation(i, loc);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tadd: function (e) {\r\n\t\tthis.edges.insert(e);\r\n\t\te.setNode(this);\r\n\t},\r\n\tsetLabelBoundary: function (argIndex) {\r\n\t\tif (this.label === null) return null;\r\n\t\tvar loc = Location.NONE;\r\n\t\tif (this.label !== null) loc = this.label.getLocation(argIndex);\r\n\t\tvar newLoc = null;\r\n\t\tswitch (loc) {\r\n\t\t\tcase Location.BOUNDARY:\r\n\t\t\t\tnewLoc = Location.INTERIOR;\r\n\t\t\t\tbreak;\r\n\t\t\tcase Location.INTERIOR:\r\n\t\t\t\tnewLoc = Location.BOUNDARY;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tnewLoc = Location.BOUNDARY;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.label.setLocation(argIndex, newLoc);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Node;\r\n\t}\r\n});\r\n","import Location from '../geom/Location';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport Node from './Node';\r\nimport extend from '../../../../extend';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport TreeMap from '../../../../java/util/TreeMap';\r\nexport default function NodeMap() {\r\n\tthis.nodeMap = new TreeMap();\r\n\tthis.nodeFact = null;\r\n\tlet nodeFact = arguments[0];\r\n\tthis.nodeFact = nodeFact;\r\n}\r\nextend(NodeMap.prototype, {\r\n\tfind: function (coord) {\r\n\t\treturn this.nodeMap.get(coord);\r\n\t},\r\n\taddNode: function () {\r\n\t\tif (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet coord = arguments[0];\r\n\t\t\tvar node = this.nodeMap.get(coord);\r\n\t\t\tif (node === null) {\r\n\t\t\t\tnode = this.nodeFact.createNode(coord);\r\n\t\t\t\tthis.nodeMap.put(coord, node);\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t} else if (arguments[0] instanceof Node) {\r\n\t\t\tlet n = arguments[0];\r\n\t\t\tvar node = this.nodeMap.get(n.getCoordinate());\r\n\t\t\tif (node === null) {\r\n\t\t\t\tthis.nodeMap.put(n.getCoordinate(), n);\r\n\t\t\t\treturn n;\r\n\t\t\t}\r\n\t\t\tnode.mergeLabel(n);\r\n\t\t\treturn node;\r\n\t\t}\r\n\t},\r\n\tprint: function (out) {\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar n = it.next();\r\n\t\t\tn.print(out);\r\n\t\t}\r\n\t},\r\n\titerator: function () {\r\n\t\treturn this.nodeMap.values().iterator();\r\n\t},\r\n\tvalues: function () {\r\n\t\treturn this.nodeMap.values();\r\n\t},\r\n\tgetBoundaryNodes: function (geomIndex) {\r\n\t\tvar bdyNodes = new ArrayList();\r\n\t\tfor (var i = this.iterator(); i.hasNext(); ) {\r\n\t\t\tvar node = i.next();\r\n\t\t\tif (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node);\r\n\t\t}\r\n\t\treturn bdyNodes;\r\n\t},\r\n\tadd: function (e) {\r\n\t\tvar p = e.getCoordinate();\r\n\t\tvar n = this.addNode(p);\r\n\t\tn.add(e);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodeMap;\r\n\t}\r\n});\r\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\r\nimport extend from '../../../../extend';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nimport Quadrant from './Quadrant';\r\nimport Assert from '../util/Assert';\r\nexport default function EdgeEnd() {\r\n\tthis.edge = null;\r\n\tthis.label = null;\r\n\tthis.node = null;\r\n\tthis.p0 = null;\r\n\tthis.p1 = null;\r\n\tthis.dx = null;\r\n\tthis.dy = null;\r\n\tthis.quadrant = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet edge = arguments[0];\r\n\t\tthis.edge = edge;\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2];\r\n\t\tEdgeEnd.call(this, edge, p0, p1, null);\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2], label = arguments[3];\r\n\t\tEdgeEnd.call(this, edge);\r\n\t\tthis.init(p0, p1);\r\n\t\tthis.label = label;\r\n\t}\r\n}\r\nextend(EdgeEnd.prototype, {\r\n\tcompareDirection: function (e) {\r\n\t\tif (this.dx === e.dx && this.dy === e.dy) return 0;\r\n\t\tif (this.quadrant > e.quadrant) return 1;\r\n\t\tif (this.quadrant < e.quadrant) return -1;\r\n\t\treturn CGAlgorithms.computeOrientation(e.p0, e.p1, this.p1);\r\n\t},\r\n\tgetDy: function () {\r\n\t\treturn this.dy;\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.p0;\r\n\t},\r\n\tsetNode: function (node) {\r\n\t\tthis.node = node;\r\n\t},\r\n\tprint: function (out) {\r\n\t\tvar angle = Math.atan2(this.dy, this.dx);\r\n\t\tvar className = this.getClass().getName();\r\n\t\tvar lastDotPos = className.lastIndexOf('.');\r\n\t\tvar name = className.substring(lastDotPos + 1);\r\n\t\tout.print(\"  \" + name + \": \" + this.p0 + \" - \" + this.p1 + \" \" + this.quadrant + \":\" + angle + \"   \" + this.label);\r\n\t},\r\n\tcompareTo: function (obj) {\r\n\t\tvar e = obj;\r\n\t\treturn this.compareDirection(e);\r\n\t},\r\n\tgetDirectedCoordinate: function () {\r\n\t\treturn this.p1;\r\n\t},\r\n\tgetDx: function () {\r\n\t\treturn this.dx;\r\n\t},\r\n\tgetLabel: function () {\r\n\t\treturn this.label;\r\n\t},\r\n\tgetEdge: function () {\r\n\t\treturn this.edge;\r\n\t},\r\n\tgetQuadrant: function () {\r\n\t\treturn this.quadrant;\r\n\t},\r\n\tgetNode: function () {\r\n\t\treturn this.node;\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar angle = Math.atan2(this.dy, this.dx);\r\n\t\tvar className = this.getClass().getName();\r\n\t\tvar lastDotPos = className.lastIndexOf('.');\r\n\t\tvar name = className.substring(lastDotPos + 1);\r\n\t\treturn \"  \" + name + \": \" + this.p0 + \" - \" + this.p1 + \" \" + this.quadrant + \":\" + angle + \"   \" + this.label;\r\n\t},\r\n\tcomputeLabel: function (boundaryNodeRule) {},\r\n\tinit: function (p0, p1) {\r\n\t\tthis.p0 = p0;\r\n\t\tthis.p1 = p1;\r\n\t\tthis.dx = p1.x - p0.x;\r\n\t\tthis.dy = p1.y - p0.y;\r\n\t\tthis.quadrant = Quadrant.quadrant(this.dx, this.dy);\r\n\t\tAssert.isTrue(!(this.dx === 0 && this.dy === 0), \"EdgeEnd with identical endpoints found\");\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeEnd;\r\n\t}\r\n});\r\n","import Location from '../geom/Location';\r\nimport EdgeEnd from './EdgeEnd';\r\nimport Position from './Position';\r\nimport TopologyException from '../geom/TopologyException';\r\nimport extend from '../../../../extend';\r\nimport Label from './Label';\r\nimport inherits from '../../../../inherits';\r\nexport default function DirectedEdge() {\r\n\tthis._isForward = null;\r\n\tthis._isInResult = false;\r\n\tthis._isVisited = false;\r\n\tthis.sym = null;\r\n\tthis.next = null;\r\n\tthis.nextMin = null;\r\n\tthis.edgeRing = null;\r\n\tthis.minEdgeRing = null;\r\n\tthis.depth = [0, -999, -999];\r\n\tlet edge = arguments[0], isForward = arguments[1];\r\n\tEdgeEnd.call(this, edge);\r\n\tthis._isForward = isForward;\r\n\tif (isForward) {\r\n\t\tthis.init(edge.getCoordinate(0), edge.getCoordinate(1));\r\n\t} else {\r\n\t\tvar n = edge.getNumPoints() - 1;\r\n\t\tthis.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\r\n\t}\r\n\tthis.computeDirectedLabel();\r\n}\r\ninherits(DirectedEdge, EdgeEnd);\r\nextend(DirectedEdge.prototype, {\r\n\tgetNextMin: function () {\r\n\t\treturn this.nextMin;\r\n\t},\r\n\tgetDepth: function (position) {\r\n\t\treturn this.depth[position];\r\n\t},\r\n\tsetVisited: function (isVisited) {\r\n\t\tthis._isVisited = isVisited;\r\n\t},\r\n\tcomputeDirectedLabel: function () {\r\n\t\tthis.label = new Label(this.edge.getLabel());\r\n\t\tif (!this._isForward) this.label.flip();\r\n\t},\r\n\tgetNext: function () {\r\n\t\treturn this.next;\r\n\t},\r\n\tsetDepth: function (position, depthVal) {\r\n\t\tif (this.depth[position] !== -999) {\r\n\t\t\tif (this.depth[position] !== depthVal) throw new TopologyException(\"assigned depths do not match\", this.getCoordinate());\r\n\t\t}\r\n\t\tthis.depth[position] = depthVal;\r\n\t},\r\n\tisInteriorAreaEdge: function () {\r\n\t\tvar isInteriorAreaEdge = true;\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tif (!(this.label.isArea(i) && this.label.getLocation(i, Position.LEFT) === Location.INTERIOR && this.label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\r\n\t\t\t\tisInteriorAreaEdge = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn isInteriorAreaEdge;\r\n\t},\r\n\tsetNextMin: function (nextMin) {\r\n\t\tthis.nextMin = nextMin;\r\n\t},\r\n\tprint: function (out) {\r\n\t\tEdgeEnd.prototype.print.call(this, out);\r\n\t\tout.print(\" \" + this.depth[Position.LEFT] + \"/\" + this.depth[Position.RIGHT]);\r\n\t\tout.print(\" (\" + this.getDepthDelta() + \")\");\r\n\t\tif (this._isInResult) out.print(\" inResult\");\r\n\t},\r\n\tsetMinEdgeRing: function (minEdgeRing) {\r\n\t\tthis.minEdgeRing = minEdgeRing;\r\n\t},\r\n\tisLineEdge: function () {\r\n\t\tvar isLine = this.label.isLine(0) || this.label.isLine(1);\r\n\t\tvar isExteriorIfArea0 = !this.label.isArea(0) || this.label.allPositionsEqual(0, Location.EXTERIOR);\r\n\t\tvar isExteriorIfArea1 = !this.label.isArea(1) || this.label.allPositionsEqual(1, Location.EXTERIOR);\r\n\t\treturn isLine && isExteriorIfArea0 && isExteriorIfArea1;\r\n\t},\r\n\tsetEdgeRing: function (edgeRing) {\r\n\t\tthis.edgeRing = edgeRing;\r\n\t},\r\n\tgetMinEdgeRing: function () {\r\n\t\treturn this.minEdgeRing;\r\n\t},\r\n\tgetDepthDelta: function () {\r\n\t\tvar depthDelta = this.edge.getDepthDelta();\r\n\t\tif (!this._isForward) depthDelta = -depthDelta;\r\n\t\treturn depthDelta;\r\n\t},\r\n\tsetInResult: function (isInResult) {\r\n\t\tthis._isInResult = isInResult;\r\n\t},\r\n\tgetSym: function () {\r\n\t\treturn this.sym;\r\n\t},\r\n\tisForward: function () {\r\n\t\treturn this._isForward;\r\n\t},\r\n\tgetEdge: function () {\r\n\t\treturn this.edge;\r\n\t},\r\n\tprintEdge: function (out) {\r\n\t\tthis.print(out);\r\n\t\tout.print(\" \");\r\n\t\tif (this._isForward) this.edge.print(out); else this.edge.printReverse(out);\r\n\t},\r\n\tsetSym: function (de) {\r\n\t\tthis.sym = de;\r\n\t},\r\n\tsetVisitedEdge: function (isVisited) {\r\n\t\tthis.setVisited(isVisited);\r\n\t\tthis.sym.setVisited(isVisited);\r\n\t},\r\n\tsetEdgeDepths: function (position, depth) {\r\n\t\tvar depthDelta = this.getEdge().getDepthDelta();\r\n\t\tif (!this._isForward) depthDelta = -depthDelta;\r\n\t\tvar directionFactor = 1;\r\n\t\tif (position === Position.LEFT) directionFactor = -1;\r\n\t\tvar oppositePos = Position.opposite(position);\r\n\t\tvar delta = depthDelta * directionFactor;\r\n\t\tvar oppositeDepth = depth + delta;\r\n\t\tthis.setDepth(position, depth);\r\n\t\tthis.setDepth(oppositePos, oppositeDepth);\r\n\t},\r\n\tgetEdgeRing: function () {\r\n\t\treturn this.edgeRing;\r\n\t},\r\n\tisInResult: function () {\r\n\t\treturn this._isInResult;\r\n\t},\r\n\tsetNext: function (next) {\r\n\t\tthis.next = next;\r\n\t},\r\n\tisVisited: function () {\r\n\t\treturn this._isVisited;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DirectedEdge;\r\n\t}\r\n});\r\nDirectedEdge.depthFactor = function (currLocation, nextLocation) {\r\n\tif (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1; else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1;\r\n\treturn 0;\r\n};\r\n","import Node from './Node';\r\nimport extend from '../../../../extend';\r\nexport default function NodeFactory() {}\r\nextend(NodeFactory.prototype, {\r\n\tcreateNode: function (coord) {\r\n\t\treturn new Node(coord, null);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodeFactory;\r\n\t}\r\n});\r\n","import Location from '../geom/Location';\r\nimport CGAlgorithms from '../algorithm/CGAlgorithms';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport Node from './Node';\r\nimport extend from '../../../../extend';\r\nimport NodeMap from './NodeMap';\r\nimport DirectedEdge from './DirectedEdge';\r\nimport System from '../../../../java/lang/System';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Quadrant from './Quadrant';\r\nimport NodeFactory from './NodeFactory';\r\nexport default function PlanarGraph() {\r\n\tthis.edges = new ArrayList();\r\n\tthis.nodes = null;\r\n\tthis.edgeEndList = new ArrayList();\r\n\tif (arguments.length === 0) {\r\n\t\tthis.nodes = new NodeMap(new NodeFactory());\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet nodeFact = arguments[0];\r\n\t\tthis.nodes = new NodeMap(nodeFact);\r\n\t}\r\n}\r\nextend(PlanarGraph.prototype, {\r\n\tprintEdges: function (out) {\r\n\t\tout.println(\"Edges:\");\r\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\r\n\t\t\tout.println(\"edge \" + i + \":\");\r\n\t\t\tvar e = this.edges.get(i);\r\n\t\t\te.print(out);\r\n\t\t\te.eiList.print(out);\r\n\t\t}\r\n\t},\r\n\tfind: function (coord) {\r\n\t\treturn this.nodes.find(coord);\r\n\t},\r\n\taddNode: function () {\r\n\t\tif (arguments[0] instanceof Node) {\r\n\t\t\tlet node = arguments[0];\r\n\t\t\treturn this.nodes.addNode(node);\r\n\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet coord = arguments[0];\r\n\t\t\treturn this.nodes.addNode(coord);\r\n\t\t}\r\n\t},\r\n\tgetNodeIterator: function () {\r\n\t\treturn this.nodes.iterator();\r\n\t},\r\n\tlinkResultDirectedEdges: function () {\r\n\t\tfor (var nodeit = this.nodes.iterator(); nodeit.hasNext(); ) {\r\n\t\t\tvar node = nodeit.next();\r\n\t\t\tnode.getEdges().linkResultDirectedEdges();\r\n\t\t}\r\n\t},\r\n\tdebugPrintln: function (o) {\r\n\t\tSystem.out.println(o);\r\n\t},\r\n\tisBoundaryNode: function (geomIndex, coord) {\r\n\t\tvar node = this.nodes.find(coord);\r\n\t\tif (node === null) return false;\r\n\t\tvar label = node.getLabel();\r\n\t\tif (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true;\r\n\t\treturn false;\r\n\t},\r\n\tlinkAllDirectedEdges: function () {\r\n\t\tfor (var nodeit = this.nodes.iterator(); nodeit.hasNext(); ) {\r\n\t\t\tvar node = nodeit.next();\r\n\t\t\tnode.getEdges().linkAllDirectedEdges();\r\n\t\t}\r\n\t},\r\n\tmatchInSameDirection: function (p0, p1, ep0, ep1) {\r\n\t\tif (!p0.equals(ep0)) return false;\r\n\t\tif (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true;\r\n\t\treturn false;\r\n\t},\r\n\tgetEdgeEnds: function () {\r\n\t\treturn this.edgeEndList;\r\n\t},\r\n\tdebugPrint: function (o) {\r\n\t\tSystem.out.print(o);\r\n\t},\r\n\tgetEdgeIterator: function () {\r\n\t\treturn this.edges.iterator();\r\n\t},\r\n\tfindEdgeInSameDirection: function (p0, p1) {\r\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\r\n\t\t\tvar e = this.edges.get(i);\r\n\t\t\tvar eCoord = e.getCoordinates();\r\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e;\r\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e;\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\tinsertEdge: function (e) {\r\n\t\tthis.edges.add(e);\r\n\t},\r\n\tfindEdgeEnd: function (e) {\r\n\t\tfor (var i = this.getEdgeEnds().iterator(); i.hasNext(); ) {\r\n\t\t\tvar ee = i.next();\r\n\t\t\tif (ee.getEdge() === e) return ee;\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\taddEdges: function (edgesToAdd) {\r\n\t\tfor (var it = edgesToAdd.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tthis.edges.add(e);\r\n\t\t\tvar de1 = new DirectedEdge(e, true);\r\n\t\t\tvar de2 = new DirectedEdge(e, false);\r\n\t\t\tde1.setSym(de2);\r\n\t\t\tde2.setSym(de1);\r\n\t\t\tthis.add(de1);\r\n\t\t\tthis.add(de2);\r\n\t\t}\r\n\t},\r\n\tadd: function (e) {\r\n\t\tthis.nodes.add(e);\r\n\t\tthis.edgeEndList.add(e);\r\n\t},\r\n\tgetNodes: function () {\r\n\t\treturn this.nodes.values();\r\n\t},\r\n\tfindEdge: function (p0, p1) {\r\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\r\n\t\t\tvar e = this.edges.get(i);\r\n\t\t\tvar eCoord = e.getCoordinates();\r\n\t\t\tif (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e;\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PlanarGraph;\r\n\t}\r\n});\r\nPlanarGraph.linkResultDirectedEdges = function (nodes) {\r\n\tfor (var nodeit = nodes.iterator(); nodeit.hasNext(); ) {\r\n\t\tvar node = nodeit.next();\r\n\t\tnode.getEdges().linkResultDirectedEdges();\r\n\t}\r\n};\r\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport TopologyException from '../../geom/TopologyException';\r\nimport extend from '../../../../../extend';\r\nimport MaximalEdgeRing from './MaximalEdgeRing';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Assert from '../../util/Assert';\r\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\r\nexport default function PolygonBuilder() {\r\n\tthis.geometryFactory = null;\r\n\tthis.shellList = new ArrayList();\r\n\tlet geometryFactory = arguments[0];\r\n\tthis.geometryFactory = geometryFactory;\r\n}\r\nextend(PolygonBuilder.prototype, {\r\n\tsortShellsAndHoles: function (edgeRings, shellList, freeHoleList) {\r\n\t\tfor (var it = edgeRings.iterator(); it.hasNext(); ) {\r\n\t\t\tvar er = it.next();\r\n\t\t\tif (er.isHole()) {\r\n\t\t\t\tfreeHoleList.add(er);\r\n\t\t\t} else {\r\n\t\t\t\tshellList.add(er);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputePolygons: function (shellList) {\r\n\t\tvar resultPolyList = new ArrayList();\r\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar er = it.next();\r\n\t\t\tvar poly = er.toPolygon(this.geometryFactory);\r\n\t\t\tresultPolyList.add(poly);\r\n\t\t}\r\n\t\treturn resultPolyList;\r\n\t},\r\n\tplaceFreeHoles: function (shellList, freeHoleList) {\r\n\t\tfor (var it = freeHoleList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar hole = it.next();\r\n\t\t\tif (hole.getShell() === null) {\r\n\t\t\t\tvar shell = this.findEdgeRingContaining(hole, shellList);\r\n\t\t\t\tif (shell === null) throw new TopologyException(\"unable to assign hole to a shell\", hole.getCoordinate(0));\r\n\t\t\t\thole.setShell(shell);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tbuildMinimalEdgeRings: function (maxEdgeRings, shellList, freeHoleList) {\r\n\t\tvar edgeRings = new ArrayList();\r\n\t\tfor (var it = maxEdgeRings.iterator(); it.hasNext(); ) {\r\n\t\t\tvar er = it.next();\r\n\t\t\tif (er.getMaxNodeDegree() > 2) {\r\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\r\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\r\n\t\t\t\tvar shell = this.findShell(minEdgeRings);\r\n\t\t\t\tif (shell !== null) {\r\n\t\t\t\t\tthis.placePolygonHoles(shell, minEdgeRings);\r\n\t\t\t\t\tshellList.add(shell);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfreeHoleList.addAll(minEdgeRings);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tedgeRings.add(er);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn edgeRings;\r\n\t},\r\n\tcontainsPoint: function (p) {\r\n\t\tfor (var it = this.shellList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar er = it.next();\r\n\t\t\tif (er.containsPoint(p)) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tbuildMaximalEdgeRings: function (dirEdges) {\r\n\t\tvar maxEdgeRings = new ArrayList();\r\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tif (de.isInResult() && de.getLabel().isArea()) {\r\n\t\t\t\tif (de.getEdgeRing() === null) {\r\n\t\t\t\t\tvar er = new MaximalEdgeRing(de, this.geometryFactory);\r\n\t\t\t\t\tmaxEdgeRings.add(er);\r\n\t\t\t\t\ter.setInResult();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxEdgeRings;\r\n\t},\r\n\tplacePolygonHoles: function (shell, minEdgeRings) {\r\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\r\n\t\t\tvar er = it.next();\r\n\t\t\tif (er.isHole()) {\r\n\t\t\t\ter.setShell(shell);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetPolygons: function () {\r\n\t\tvar resultPolyList = this.computePolygons(this.shellList);\r\n\t\treturn resultPolyList;\r\n\t},\r\n\tfindEdgeRingContaining: function (testEr, shellList) {\r\n\t\tvar testRing = testEr.getLinearRing();\r\n\t\tvar testEnv = testRing.getEnvelopeInternal();\r\n\t\tvar testPt = testRing.getCoordinateN(0);\r\n\t\tvar minShell = null;\r\n\t\tvar minEnv = null;\r\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar tryShell = it.next();\r\n\t\t\tvar tryRing = tryShell.getLinearRing();\r\n\t\t\tvar tryEnv = tryRing.getEnvelopeInternal();\r\n\t\t\tif (minShell !== null) minEnv = minShell.getLinearRing().getEnvelopeInternal();\r\n\t\t\tvar isContained = false;\r\n\t\t\tif (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) isContained = true;\r\n\t\t\tif (isContained) {\r\n\t\t\t\tif (minShell === null || minEnv.contains(tryEnv)) {\r\n\t\t\t\t\tminShell = tryShell;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn minShell;\r\n\t},\r\n\tfindShell: function (minEdgeRings) {\r\n\t\tvar shellCount = 0;\r\n\t\tvar shell = null;\r\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\r\n\t\t\tvar er = it.next();\r\n\t\t\tif (!er.isHole()) {\r\n\t\t\t\tshell = er;\r\n\t\t\t\tshellCount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tAssert.isTrue(shellCount <= 1, \"found two shells in MinimalEdgeRing list\");\r\n\t\treturn shell;\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet graph = arguments[0];\r\n\t\t\tthis.add(graph.getEdgeEnds(), graph.getNodes());\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet dirEdges = arguments[0], nodes = arguments[1];\r\n\t\t\tPlanarGraph.linkResultDirectedEdges(nodes);\r\n\t\t\tvar maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\r\n\t\t\tvar freeHoleList = new ArrayList();\r\n\t\t\tvar edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this.shellList, freeHoleList);\r\n\t\t\tthis.sortShellsAndHoles(edgeRings, this.shellList, freeHoleList);\r\n\t\t\tthis.placeFreeHoles(this.shellList, freeHoleList);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PolygonBuilder;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Assert from '../../util/Assert';\r\nimport OverlayOp from './OverlayOp';\r\nexport default function LineBuilder() {\r\n\tthis.op = null;\r\n\tthis.geometryFactory = null;\r\n\tthis.ptLocator = null;\r\n\tthis.lineEdgesList = new ArrayList();\r\n\tthis.resultLineList = new ArrayList();\r\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\r\n\tthis.op = op;\r\n\tthis.geometryFactory = geometryFactory;\r\n\tthis.ptLocator = ptLocator;\r\n}\r\nextend(LineBuilder.prototype, {\r\n\tcollectLines: function (opCode) {\r\n\t\tfor (var it = this.op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tthis.collectLineEdge(de, opCode, this.lineEdgesList);\r\n\t\t\tthis.collectBoundaryTouchEdge(de, opCode, this.lineEdgesList);\r\n\t\t}\r\n\t},\r\n\tlabelIsolatedLine: function (e, targetIndex) {\r\n\t\tvar loc = this.ptLocator.locate(e.getCoordinate(), this.op.getArgGeometry(targetIndex));\r\n\t\te.getLabel().setLocation(targetIndex, loc);\r\n\t},\r\n\tbuild: function (opCode) {\r\n\t\tthis.findCoveredLineEdges();\r\n\t\tthis.collectLines(opCode);\r\n\t\tthis.buildLines(opCode);\r\n\t\treturn this.resultLineList;\r\n\t},\r\n\tcollectLineEdge: function (de, opCode, edges) {\r\n\t\tvar label = de.getLabel();\r\n\t\tvar e = de.getEdge();\r\n\t\tif (de.isLineEdge()) {\r\n\t\t\tif (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\r\n\t\t\t\tedges.add(e);\r\n\t\t\t\tde.setVisitedEdge(true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tfindCoveredLineEdges: function () {\r\n\t\tfor (var nodeit = this.op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\r\n\t\t\tvar node = nodeit.next();\r\n\t\t\tnode.getEdges().findCoveredLineEdges();\r\n\t\t}\r\n\t\tfor (var it = this.op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tvar e = de.getEdge();\r\n\t\t\tif (de.isLineEdge() && !e.isCoveredSet()) {\r\n\t\t\t\tvar isCovered = this.op.isCoveredByA(de.getCoordinate());\r\n\t\t\t\te.setCovered(isCovered);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tlabelIsolatedLines: function (edgesList) {\r\n\t\tfor (var it = edgesList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tvar label = e.getLabel();\r\n\t\t\tif (e.isIsolated()) {\r\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedLine(e, 0); else this.labelIsolatedLine(e, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tbuildLines: function (opCode) {\r\n\t\tfor (var it = this.lineEdgesList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tvar label = e.getLabel();\r\n\t\t\tvar line = this.geometryFactory.createLineString(e.getCoordinates());\r\n\t\t\tthis.resultLineList.add(line);\r\n\t\t\te.setInResult(true);\r\n\t\t}\r\n\t},\r\n\tcollectBoundaryTouchEdge: function (de, opCode, edges) {\r\n\t\tvar label = de.getLabel();\r\n\t\tif (de.isLineEdge()) return null;\r\n\t\tif (de.isVisited()) return null;\r\n\t\tif (de.isInteriorAreaEdge()) return null;\r\n\t\tif (de.getEdge().isInResult()) return null;\r\n\t\tAssert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\r\n\t\tif (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\r\n\t\t\tedges.add(de.getEdge());\r\n\t\t\tde.setVisitedEdge(true);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineBuilder;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport OverlayOp from './OverlayOp';\r\nexport default function PointBuilder() {\r\n\tthis.op = null;\r\n\tthis.geometryFactory = null;\r\n\tthis.resultPointList = new ArrayList();\r\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\r\n\tthis.op = op;\r\n\tthis.geometryFactory = geometryFactory;\r\n}\r\nextend(PointBuilder.prototype, {\r\n\tfilterCoveredNodeToPoint: function (n) {\r\n\t\tvar coord = n.getCoordinate();\r\n\t\tif (!this.op.isCoveredByLA(coord)) {\r\n\t\t\tvar pt = this.geometryFactory.createPoint(coord);\r\n\t\t\tthis.resultPointList.add(pt);\r\n\t\t}\r\n\t},\r\n\textractNonCoveredResultNodes: function (opCode) {\r\n\t\tfor (var nodeit = this.op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\r\n\t\t\tvar n = nodeit.next();\r\n\t\t\tif (n.isInResult()) continue;\r\n\t\t\tif (n.isIncidentEdgeInResult()) continue;\r\n\t\t\tif (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\r\n\t\t\t\tvar label = n.getLabel();\r\n\t\t\t\tif (OverlayOp.isResultOfOp(label, opCode)) {\r\n\t\t\t\t\tthis.filterCoveredNodeToPoint(n);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tbuild: function (opCode) {\r\n\t\tthis.extractNonCoveredResultNodes(opCode);\r\n\t\treturn this.resultPointList;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PointBuilder;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nexport default function PointOnGeometryLocator() {}\r\nextend(PointOnGeometryLocator.prototype, {\r\n\tlocate: function (p) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PointOnGeometryLocator;\r\n\t}\r\n});\r\n","import Location from '../../geom/Location';\r\nimport CGAlgorithms from '../CGAlgorithms';\r\nimport Polygon from '../../geom/Polygon';\r\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\r\nimport extend from '../../../../../extend';\r\nimport GeometryCollectionIterator from '../../geom/GeometryCollectionIterator';\r\nimport GeometryCollection from '../../geom/GeometryCollection';\r\nexport default function SimplePointInAreaLocator() {\r\n\tthis.geom = null;\r\n\tlet geom = arguments[0];\r\n\tthis.geom = geom;\r\n}\r\nextend(SimplePointInAreaLocator.prototype, {\r\n\tlocate: function (p) {\r\n\t\treturn SimplePointInAreaLocator.locate(p, this.geom);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [PointOnGeometryLocator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SimplePointInAreaLocator;\r\n\t}\r\n});\r\nSimplePointInAreaLocator.isPointInRing = function (p, ring) {\r\n\tif (!ring.getEnvelopeInternal().intersects(p)) return false;\r\n\treturn CGAlgorithms.isPointInRing(p, ring.getCoordinates());\r\n};\r\nSimplePointInAreaLocator.containsPointInPolygon = function (p, poly) {\r\n\tif (poly.isEmpty()) return false;\r\n\tvar shell = poly.getExteriorRing();\r\n\tif (!SimplePointInAreaLocator.isPointInRing(p, shell)) return false;\r\n\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\r\n\t\tvar hole = poly.getInteriorRingN(i);\r\n\t\tif (SimplePointInAreaLocator.isPointInRing(p, hole)) return false;\r\n\t}\r\n\treturn true;\r\n};\r\nSimplePointInAreaLocator.containsPoint = function (p, geom) {\r\n\tif (geom instanceof Polygon) {\r\n\t\treturn SimplePointInAreaLocator.containsPointInPolygon(p, geom);\r\n\t} else if (geom instanceof GeometryCollection) {\r\n\t\tvar geomi = new GeometryCollectionIterator(geom);\r\n\t\twhile (geomi.hasNext()) {\r\n\t\t\tvar g2 = geomi.next();\r\n\t\t\tif (g2 !== geom) if (SimplePointInAreaLocator.containsPoint(p, g2)) return true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\nSimplePointInAreaLocator.locate = function (p, geom) {\r\n\tif (geom.isEmpty()) return Location.EXTERIOR;\r\n\tif (SimplePointInAreaLocator.containsPoint(p, geom)) return Location.INTERIOR;\r\n\treturn Location.EXTERIOR;\r\n};\r\n","import StringBuffer from '../../../../java/lang/StringBuffer';\r\nimport Location from '../geom/Location';\r\nimport Position from './Position';\r\nimport TopologyException from '../geom/TopologyException';\r\nimport extend from '../../../../extend';\r\nimport System from '../../../../java/lang/System';\r\nimport SimplePointInAreaLocator from '../algorithm/locate/SimplePointInAreaLocator';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Assert from '../util/Assert';\r\nimport TreeMap from '../../../../java/util/TreeMap';\r\nexport default function EdgeEndStar() {\r\n\tthis.edgeMap = new TreeMap();\r\n\tthis.edgeList = null;\r\n\tthis.ptInAreaLocation = [Location.NONE, Location.NONE];\r\n}\r\nextend(EdgeEndStar.prototype, {\r\n\tgetNextCW: function (ee) {\r\n\t\tthis.getEdges();\r\n\t\tvar i = this.edgeList.indexOf(ee);\r\n\t\tvar iNextCW = i - 1;\r\n\t\tif (i === 0) iNextCW = this.edgeList.size() - 1;\r\n\t\treturn this.edgeList.get(iNextCW);\r\n\t},\r\n\tpropagateSideLabels: function (geomIndex) {\r\n\t\tvar startLoc = Location.NONE;\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tvar label = e.getLabel();\r\n\t\t\tif (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT);\r\n\t\t}\r\n\t\tif (startLoc === Location.NONE) return null;\r\n\t\tvar currLoc = startLoc;\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tvar label = e.getLabel();\r\n\t\t\tif (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc);\r\n\t\t\tif (label.isArea(geomIndex)) {\r\n\t\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\r\n\t\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\r\n\t\t\t\tif (rightLoc !== Location.NONE) {\r\n\t\t\t\t\tif (rightLoc !== currLoc) throw new TopologyException(\"side location conflict\", e.getCoordinate());\r\n\t\t\t\t\tif (leftLoc === Location.NONE) {\r\n\t\t\t\t\t\tAssert.shouldNeverReachHere(\"found single null side (at \" + e.getCoordinate() + \")\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrLoc = leftLoc;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAssert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, \"found single null side\");\r\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.RIGHT, currLoc);\r\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.LEFT, currLoc);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\tvar it = this.iterator();\r\n\t\tif (!it.hasNext()) return null;\r\n\t\tvar e = it.next();\r\n\t\treturn e.getCoordinate();\r\n\t},\r\n\tprint: function (out) {\r\n\t\tSystem.out.println(\"EdgeEndStar:   \" + this.getCoordinate());\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\te.print(out);\r\n\t\t}\r\n\t},\r\n\tisAreaLabelsConsistent: function (geomGraph) {\r\n\t\tthis.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\r\n\t\treturn this.checkAreaLabelsConsistent(0);\r\n\t},\r\n\tcheckAreaLabelsConsistent: function (geomIndex) {\r\n\t\tvar edges = this.getEdges();\r\n\t\tif (edges.size() <= 0) return true;\r\n\t\tvar lastEdgeIndex = edges.size() - 1;\r\n\t\tvar startLabel = edges.get(lastEdgeIndex).getLabel();\r\n\t\tvar startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\r\n\t\tAssert.isTrue(startLoc !== Location.NONE, \"Found unlabelled area edge\");\r\n\t\tvar currLoc = startLoc;\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tvar label = e.getLabel();\r\n\t\t\tAssert.isTrue(label.isArea(geomIndex), \"Found non-area edge\");\r\n\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\r\n\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\r\n\t\t\tif (leftLoc === rightLoc) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (rightLoc !== currLoc) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tcurrLoc = leftLoc;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tfindIndex: function (eSearch) {\r\n\t\tthis.iterator();\r\n\t\tfor (var i = 0; i < this.edgeList.size(); i++) {\r\n\t\t\tvar e = this.edgeList.get(i);\r\n\t\t\tif (e === eSearch) return i;\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\titerator: function () {\r\n\t\treturn this.getEdges().iterator();\r\n\t},\r\n\tgetEdges: function () {\r\n\t\tif (this.edgeList === null) {\r\n\t\t\tthis.edgeList = new ArrayList(this.edgeMap.values());\r\n\t\t}\r\n\t\treturn this.edgeList;\r\n\t},\r\n\tgetLocation: function (geomIndex, p, geom) {\r\n\t\tif (this.ptInAreaLocation[geomIndex] === Location.NONE) {\r\n\t\t\tthis.ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\r\n\t\t}\r\n\t\treturn this.ptInAreaLocation[geomIndex];\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar buf = new StringBuffer();\r\n\t\tbuf.append(\"EdgeEndStar:   \" + this.getCoordinate());\r\n\t\tbuf.append(\"\\n\");\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tbuf.append(e);\r\n\t\t\tbuf.append(\"\\n\");\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t},\r\n\tcomputeEdgeEndLabels: function (boundaryNodeRule) {\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar ee = it.next();\r\n\t\t\tee.computeLabel(boundaryNodeRule);\r\n\t\t}\r\n\t},\r\n\tcomputeLabelling: function (geomGraph) {\r\n\t\tthis.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\r\n\t\tthis.propagateSideLabels(0);\r\n\t\tthis.propagateSideLabels(1);\r\n\t\tvar hasDimensionalCollapseEdge = [false, false];\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tvar label = e.getLabel();\r\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\r\n\t\t\t\tif (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tvar label = e.getLabel();\r\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\r\n\t\t\t\tif (label.isAnyNull(geomi)) {\r\n\t\t\t\t\tvar loc = Location.NONE;\r\n\t\t\t\t\tif (hasDimensionalCollapseEdge[geomi]) {\r\n\t\t\t\t\t\tloc = Location.EXTERIOR;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar p = e.getCoordinate();\r\n\t\t\t\t\t\tloc = this.getLocation(geomi, p, geomGraph);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.setAllLocationsIfNull(geomi, loc);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetDegree: function () {\r\n\t\treturn this.edgeMap.size();\r\n\t},\r\n\tinsertEdgeEnd: function (e, obj) {\r\n\t\tthis.edgeMap.put(e, obj);\r\n\t\tthis.edgeList = null;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeEndStar;\r\n\t}\r\n});\r\n","import Location from '../geom/Location';\r\nimport Position from './Position';\r\nimport TopologyException from '../geom/TopologyException';\r\nimport extend from '../../../../extend';\r\nimport EdgeEndStar from './EdgeEndStar';\r\nimport System from '../../../../java/lang/System';\r\nimport Label from './Label';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Quadrant from './Quadrant';\r\nimport Assert from '../util/Assert';\r\nimport inherits from '../../../../inherits';\r\nexport default function DirectedEdgeStar() {\r\n\tEdgeEndStar.apply(this);\r\n\tthis.resultAreaEdgeList = null;\r\n\tthis.label = null;\r\n\tthis.SCANNING_FOR_INCOMING = 1;\r\n\tthis.LINKING_TO_OUTGOING = 2;\r\n}\r\ninherits(DirectedEdgeStar, EdgeEndStar);\r\nextend(DirectedEdgeStar.prototype, {\r\n\tlinkResultDirectedEdges: function () {\r\n\t\tthis.getResultAreaEdges();\r\n\t\tvar firstOut = null;\r\n\t\tvar incoming = null;\r\n\t\tvar state = this.SCANNING_FOR_INCOMING;\r\n\t\tfor (var i = 0; i < this.resultAreaEdgeList.size(); i++) {\r\n\t\t\tvar nextOut = this.resultAreaEdgeList.get(i);\r\n\t\t\tvar nextIn = nextOut.getSym();\r\n\t\t\tif (!nextOut.getLabel().isArea()) continue;\r\n\t\t\tif (firstOut === null && nextOut.isInResult()) firstOut = nextOut;\r\n\t\t\tswitch (state) {\r\n\t\t\t\tcase this.SCANNING_FOR_INCOMING:\r\n\t\t\t\t\tif (!nextIn.isInResult()) continue;\r\n\t\t\t\t\tincoming = nextIn;\r\n\t\t\t\t\tstate = this.LINKING_TO_OUTGOING;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase this.LINKING_TO_OUTGOING:\r\n\t\t\t\t\tif (!nextOut.isInResult()) continue;\r\n\t\t\t\t\tincoming.setNext(nextOut);\r\n\t\t\t\t\tstate = this.SCANNING_FOR_INCOMING;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (state === this.LINKING_TO_OUTGOING) {\r\n\t\t\tif (firstOut === null) throw new TopologyException(\"no outgoing dirEdge found\", this.getCoordinate());\r\n\t\t\tAssert.isTrue(firstOut.isInResult(), \"unable to link last incoming dirEdge\");\r\n\t\t\tincoming.setNext(firstOut);\r\n\t\t}\r\n\t},\r\n\tinsert: function (ee) {\r\n\t\tvar de = ee;\r\n\t\tthis.insertEdgeEnd(de, de);\r\n\t},\r\n\tgetRightmostEdge: function () {\r\n\t\tvar edges = this.getEdges();\r\n\t\tvar size = edges.size();\r\n\t\tif (size < 1) return null;\r\n\t\tvar de0 = edges.get(0);\r\n\t\tif (size === 1) return de0;\r\n\t\tvar deLast = edges.get(size - 1);\r\n\t\tvar quad0 = de0.getQuadrant();\r\n\t\tvar quad1 = deLast.getQuadrant();\r\n\t\tif (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0; else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast; else {\r\n\t\t\tvar nonHorizontalEdge = null;\r\n\t\t\tif (de0.getDy() !== 0) return de0; else if (deLast.getDy() !== 0) return deLast;\r\n\t\t}\r\n\t\tAssert.shouldNeverReachHere(\"found two horizontal edges incident on node\");\r\n\t\treturn null;\r\n\t},\r\n\tprint: function (out) {\r\n\t\tSystem.out.println(\"DirectedEdgeStar: \" + this.getCoordinate());\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tout.print(\"out \");\r\n\t\t\tde.print(out);\r\n\t\t\tout.println();\r\n\t\t\tout.print(\"in \");\r\n\t\t\tde.getSym().print(out);\r\n\t\t\tout.println();\r\n\t\t}\r\n\t},\r\n\tgetResultAreaEdges: function () {\r\n\t\tif (this.resultAreaEdgeList !== null) return this.resultAreaEdgeList;\r\n\t\tthis.resultAreaEdgeList = new ArrayList();\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tif (de.isInResult() || de.getSym().isInResult()) this.resultAreaEdgeList.add(de);\r\n\t\t}\r\n\t\treturn this.resultAreaEdgeList;\r\n\t},\r\n\tupdateLabelling: function (nodeLabel) {\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tvar label = de.getLabel();\r\n\t\t\tlabel.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\r\n\t\t\tlabel.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\r\n\t\t}\r\n\t},\r\n\tlinkAllDirectedEdges: function () {\r\n\t\tthis.getEdges();\r\n\t\tvar prevOut = null;\r\n\t\tvar firstIn = null;\r\n\t\tfor (var i = this.edgeList.size() - 1; i >= 0; i--) {\r\n\t\t\tvar nextOut = this.edgeList.get(i);\r\n\t\t\tvar nextIn = nextOut.getSym();\r\n\t\t\tif (firstIn === null) firstIn = nextIn;\r\n\t\t\tif (prevOut !== null) nextIn.setNext(prevOut);\r\n\t\t\tprevOut = nextOut;\r\n\t\t}\r\n\t\tfirstIn.setNext(prevOut);\r\n\t},\r\n\tcomputeDepths: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet de = arguments[0];\r\n\t\t\tvar edgeIndex = this.findIndex(de);\r\n\t\t\tvar label = de.getLabel();\r\n\t\t\tvar startDepth = de.getDepth(Position.LEFT);\r\n\t\t\tvar targetLastDepth = de.getDepth(Position.RIGHT);\r\n\t\t\tvar nextDepth = this.computeDepths(edgeIndex + 1, this.edgeList.size(), startDepth);\r\n\t\t\tvar lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\r\n\t\t\tif (lastDepth !== targetLastDepth) throw new TopologyException(\"depth mismatch at \" + de.getCoordinate());\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet startIndex = arguments[0], endIndex = arguments[1], startDepth = arguments[2];\r\n\t\t\tvar currDepth = startDepth;\r\n\t\t\tfor (var i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tvar nextDe = this.edgeList.get(i);\r\n\t\t\t\tvar label = nextDe.getLabel();\r\n\t\t\t\tnextDe.setEdgeDepths(Position.RIGHT, currDepth);\r\n\t\t\t\tcurrDepth = nextDe.getDepth(Position.LEFT);\r\n\t\t\t}\r\n\t\t\treturn currDepth;\r\n\t\t}\r\n\t},\r\n\tmergeSymLabels: function () {\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tvar label = de.getLabel();\r\n\t\t\tlabel.merge(de.getSym().getLabel());\r\n\t\t}\r\n\t},\r\n\tlinkMinimalDirectedEdges: function (er) {\r\n\t\tvar firstOut = null;\r\n\t\tvar incoming = null;\r\n\t\tvar state = this.SCANNING_FOR_INCOMING;\r\n\t\tfor (var i = this.resultAreaEdgeList.size() - 1; i >= 0; i--) {\r\n\t\t\tvar nextOut = this.resultAreaEdgeList.get(i);\r\n\t\t\tvar nextIn = nextOut.getSym();\r\n\t\t\tif (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut;\r\n\t\t\tswitch (state) {\r\n\t\t\t\tcase this.SCANNING_FOR_INCOMING:\r\n\t\t\t\t\tif (nextIn.getEdgeRing() !== er) continue;\r\n\t\t\t\t\tincoming = nextIn;\r\n\t\t\t\t\tstate = this.LINKING_TO_OUTGOING;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase this.LINKING_TO_OUTGOING:\r\n\t\t\t\t\tif (nextOut.getEdgeRing() !== er) continue;\r\n\t\t\t\t\tincoming.setNextMin(nextOut);\r\n\t\t\t\t\tstate = this.SCANNING_FOR_INCOMING;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (state === this.LINKING_TO_OUTGOING) {\r\n\t\t\tAssert.isTrue(firstOut !== null, \"found null for first outgoing dirEdge\");\r\n\t\t\tAssert.isTrue(firstOut.getEdgeRing() === er, \"unable to link last incoming dirEdge\");\r\n\t\t\tincoming.setNextMin(firstOut);\r\n\t\t}\r\n\t},\r\n\tgetOutgoingDegree: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tvar degree = 0;\r\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\t\tvar de = it.next();\r\n\t\t\t\tif (de.isInResult()) degree++;\r\n\t\t\t}\r\n\t\t\treturn degree;\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet er = arguments[0];\r\n\t\t\tvar degree = 0;\r\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\t\tvar de = it.next();\r\n\t\t\t\tif (de.getEdgeRing() === er) degree++;\r\n\t\t\t}\r\n\t\t\treturn degree;\r\n\t\t}\r\n\t},\r\n\tgetLabel: function () {\r\n\t\treturn this.label;\r\n\t},\r\n\tfindCoveredLineEdges: function () {\r\n\t\tvar startLoc = Location.NONE;\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar nextOut = it.next();\r\n\t\t\tvar nextIn = nextOut.getSym();\r\n\t\t\tif (!nextOut.isLineEdge()) {\r\n\t\t\t\tif (nextOut.isInResult()) {\r\n\t\t\t\t\tstartLoc = Location.INTERIOR;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (nextIn.isInResult()) {\r\n\t\t\t\t\tstartLoc = Location.EXTERIOR;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (startLoc === Location.NONE) return null;\r\n\t\tvar currLoc = startLoc;\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar nextOut = it.next();\r\n\t\t\tvar nextIn = nextOut.getSym();\r\n\t\t\tif (nextOut.isLineEdge()) {\r\n\t\t\t\tnextOut.getEdge().setCovered(currLoc === Location.INTERIOR);\r\n\t\t\t} else {\r\n\t\t\t\tif (nextOut.isInResult()) currLoc = Location.EXTERIOR;\r\n\t\t\t\tif (nextIn.isInResult()) currLoc = Location.INTERIOR;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputeLabelling: function (geom) {\r\n\t\tEdgeEndStar.prototype.computeLabelling.call(this, geom);\r\n\t\tthis.label = new Label(Location.NONE);\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar ee = it.next();\r\n\t\t\tvar e = ee.getEdge();\r\n\t\t\tvar eLabel = e.getLabel();\r\n\t\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\t\tvar eLoc = eLabel.getLocation(i);\r\n\t\t\t\tif (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this.label.setLocation(i, Location.INTERIOR);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DirectedEdgeStar;\r\n\t}\r\n});\r\n","import DirectedEdgeStar from '../../geomgraph/DirectedEdgeStar';\r\nimport Node from '../../geomgraph/Node';\r\nimport extend from '../../../../../extend';\r\nimport inherits from '../../../../../inherits';\r\nimport NodeFactory from '../../geomgraph/NodeFactory';\r\nexport default function OverlayNodeFactory() {\r\n\tNodeFactory.apply(this);\r\n}\r\ninherits(OverlayNodeFactory, NodeFactory);\r\nextend(OverlayNodeFactory.prototype, {\r\n\tcreateNode: function (coord) {\r\n\t\treturn new Node(coord, new DirectedEdgeStar());\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn OverlayNodeFactory;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nexport default function MonotoneChain() {\r\n\tthis.mce = null;\r\n\tthis.chainIndex = null;\r\n\tlet mce = arguments[0], chainIndex = arguments[1];\r\n\tthis.mce = mce;\r\n\tthis.chainIndex = chainIndex;\r\n}\r\nextend(MonotoneChain.prototype, {\r\n\tcomputeIntersections: function (mc, si) {\r\n\t\tthis.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MonotoneChain;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport Comparable from '../../../../../java/lang/Comparable';\r\nexport default function SweepLineEvent() {\r\n\tthis.label = null;\r\n\tthis.xValue = null;\r\n\tthis.eventType = null;\r\n\tthis.insertEvent = null;\r\n\tthis.deleteEventIndex = null;\r\n\tthis.obj = null;\r\n\tif (arguments.length === 2) {\r\n\t\tlet x = arguments[0], insertEvent = arguments[1];\r\n\t\tthis.eventType = SweepLineEvent.DELETE;\r\n\t\tthis.xValue = x;\r\n\t\tthis.insertEvent = insertEvent;\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet label = arguments[0], x = arguments[1], obj = arguments[2];\r\n\t\tthis.eventType = SweepLineEvent.INSERT;\r\n\t\tthis.label = label;\r\n\t\tthis.xValue = x;\r\n\t\tthis.obj = obj;\r\n\t}\r\n}\r\nextend(SweepLineEvent.prototype, {\r\n\tisDelete: function () {\r\n\t\treturn this.eventType === SweepLineEvent.DELETE;\r\n\t},\r\n\tsetDeleteEventIndex: function (deleteEventIndex) {\r\n\t\tthis.deleteEventIndex = deleteEventIndex;\r\n\t},\r\n\tgetObject: function () {\r\n\t\treturn this.obj;\r\n\t},\r\n\tcompareTo: function (o) {\r\n\t\tvar pe = o;\r\n\t\tif (this.xValue < pe.xValue) return -1;\r\n\t\tif (this.xValue > pe.xValue) return 1;\r\n\t\tif (this.eventType < pe.eventType) return -1;\r\n\t\tif (this.eventType > pe.eventType) return 1;\r\n\t\treturn 0;\r\n\t},\r\n\tgetInsertEvent: function () {\r\n\t\treturn this.insertEvent;\r\n\t},\r\n\tisInsert: function () {\r\n\t\treturn this.eventType === SweepLineEvent.INSERT;\r\n\t},\r\n\tisSameLabel: function (ev) {\r\n\t\tif (this.label === null) return false;\r\n\t\treturn this.label === ev.label;\r\n\t},\r\n\tgetDeleteEventIndex: function () {\r\n\t\treturn this.deleteEventIndex;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SweepLineEvent;\r\n\t}\r\n});\r\nSweepLineEvent.INSERT = 1;\r\nSweepLineEvent.DELETE = 2;\r\n","import extend from '../../../../../extend';\r\nexport default function EdgeSetIntersector() {}\r\nextend(EdgeSetIntersector.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeSetIntersector;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nexport default function SegmentIntersector() {\r\n\tthis._hasIntersection = false;\r\n\tthis.hasProper = false;\r\n\tthis.hasProperInterior = false;\r\n\tthis.properIntersectionPoint = null;\r\n\tthis.li = null;\r\n\tthis.includeProper = null;\r\n\tthis.recordIsolated = null;\r\n\tthis.isSelfIntersection = null;\r\n\tthis.numIntersections = 0;\r\n\tthis.numTests = 0;\r\n\tthis.bdyNodes = null;\r\n\tthis._isDone = false;\r\n\tthis.isDoneWhenProperInt = false;\r\n\tlet li = arguments[0], includeProper = arguments[1], recordIsolated = arguments[2];\r\n\tthis.li = li;\r\n\tthis.includeProper = includeProper;\r\n\tthis.recordIsolated = recordIsolated;\r\n}\r\nextend(SegmentIntersector.prototype, {\r\n\tisTrivialIntersection: function (e0, segIndex0, e1, segIndex1) {\r\n\t\tif (e0 === e1) {\r\n\t\t\tif (this.li.getIntersectionNum() === 1) {\r\n\t\t\t\tif (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true;\r\n\t\t\t\tif (e0.isClosed()) {\r\n\t\t\t\t\tvar maxSegIndex = e0.getNumPoints() - 1;\r\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tgetProperIntersectionPoint: function () {\r\n\t\treturn this.properIntersectionPoint;\r\n\t},\r\n\tsetIsDoneIfProperInt: function (isDoneWhenProperInt) {\r\n\t\tthis.isDoneWhenProperInt = isDoneWhenProperInt;\r\n\t},\r\n\thasProperInteriorIntersection: function () {\r\n\t\treturn this.hasProperInterior;\r\n\t},\r\n\tisBoundaryPointInternal: function (li, bdyNodes) {\r\n\t\tfor (var i = bdyNodes.iterator(); i.hasNext(); ) {\r\n\t\t\tvar node = i.next();\r\n\t\t\tvar pt = node.getCoordinate();\r\n\t\t\tif (li.isIntersection(pt)) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\thasProperIntersection: function () {\r\n\t\treturn this.hasProper;\r\n\t},\r\n\thasIntersection: function () {\r\n\t\treturn this._hasIntersection;\r\n\t},\r\n\tisDone: function () {\r\n\t\treturn this._isDone;\r\n\t},\r\n\tisBoundaryPoint: function (li, bdyNodes) {\r\n\t\tif (bdyNodes === null) return false;\r\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[0])) return true;\r\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[1])) return true;\r\n\t\treturn false;\r\n\t},\r\n\tsetBoundaryNodes: function (bdyNodes0, bdyNodes1) {\r\n\t\tthis.bdyNodes = new Array(2).fill(null);\r\n\t\tthis.bdyNodes[0] = bdyNodes0;\r\n\t\tthis.bdyNodes[1] = bdyNodes1;\r\n\t},\r\n\taddIntersections: function (e0, segIndex0, e1, segIndex1) {\r\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\r\n\t\tthis.numTests++;\r\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\r\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\r\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\r\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\r\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\r\n\t\tif (this.li.hasIntersection()) {\r\n\t\t\tif (this.recordIsolated) {\r\n\t\t\t\te0.setIsolated(false);\r\n\t\t\t\te1.setIsolated(false);\r\n\t\t\t}\r\n\t\t\tthis.numIntersections++;\r\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\r\n\t\t\t\tthis._hasIntersection = true;\r\n\t\t\t\tif (this.includeProper || !this.li.isProper()) {\r\n\t\t\t\t\te0.addIntersections(this.li, segIndex0, 0);\r\n\t\t\t\t\te1.addIntersections(this.li, segIndex1, 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.li.isProper()) {\r\n\t\t\t\t\tthis.properIntersectionPoint = this.li.getIntersection(0).copy();\r\n\t\t\t\t\tthis.hasProper = true;\r\n\t\t\t\t\tif (this.isDoneWhenProperInt) {\r\n\t\t\t\t\t\tthis._isDone = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.isBoundaryPoint(this.li, this.bdyNodes)) this.hasProperInterior = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SegmentIntersector;\r\n\t}\r\n});\r\nSegmentIntersector.isAdjacentSegments = function (i1, i2) {\r\n\treturn Math.abs(i1 - i2) === 1;\r\n};\r\n","import hasInterface from '../../../../../hasInterface';\r\nimport MonotoneChain from './MonotoneChain';\r\nimport SweepLineEvent from './SweepLineEvent';\r\nimport EdgeSetIntersector from './EdgeSetIntersector';\r\nimport extend from '../../../../../extend';\r\nimport Collections from '../../../../../java/util/Collections';\r\nimport SegmentIntersector from './SegmentIntersector';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport inherits from '../../../../../inherits';\r\nimport List from '../../../../../java/util/List';\r\nexport default function SimpleMCSweepLineIntersector() {\r\n\tEdgeSetIntersector.apply(this);\r\n\tthis.events = new ArrayList();\r\n\tthis.nOverlaps = null;\r\n}\r\ninherits(SimpleMCSweepLineIntersector, EdgeSetIntersector);\r\nextend(SimpleMCSweepLineIntersector.prototype, {\r\n\tprepareEvents: function () {\r\n\t\tCollections.sort(this.events);\r\n\t\tfor (var i = 0; i < this.events.size(); i++) {\r\n\t\t\tvar ev = this.events.get(i);\r\n\t\t\tif (ev.isDelete()) {\r\n\t\t\t\tev.getInsertEvent().setDeleteEventIndex(i);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputeIntersections: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet si = arguments[0];\r\n\t\t\tthis.nOverlaps = 0;\r\n\t\t\tthis.prepareEvents();\r\n\t\t\tfor (var i = 0; i < this.events.size(); i++) {\r\n\t\t\t\tvar ev = this.events.get(i);\r\n\t\t\t\tif (ev.isInsert()) {\r\n\t\t\t\t\tthis.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\r\n\t\t\t\t}\r\n\t\t\t\tif (si.isDone()) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tif (arguments[2] instanceof SegmentIntersector && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\r\n\t\t\t\tlet edges0 = arguments[0], edges1 = arguments[1], si = arguments[2];\r\n\t\t\t\tthis.addEdges(edges0, edges0);\r\n\t\t\t\tthis.addEdges(edges1, edges1);\r\n\t\t\t\tthis.computeIntersections(si);\r\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector)) {\r\n\t\t\t\tlet edges = arguments[0], si = arguments[1], testAllSegments = arguments[2];\r\n\t\t\t\tif (testAllSegments) this.addEdges(edges, null); else this.addEdges(edges);\r\n\t\t\t\tthis.computeIntersections(si);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\taddEdge: function (edge, edgeSet) {\r\n\t\tvar mce = edge.getMonotoneChainEdge();\r\n\t\tvar startIndex = mce.getStartIndexes();\r\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\r\n\t\t\tvar mc = new MonotoneChain(mce, i);\r\n\t\t\tvar insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\r\n\t\t\tthis.events.add(insertEvent);\r\n\t\t\tthis.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\r\n\t\t}\r\n\t},\r\n\tprocessOverlaps: function (start, end, ev0, si) {\r\n\t\tvar mc0 = ev0.getObject();\r\n\t\tfor (var i = start; i < end; i++) {\r\n\t\t\tvar ev1 = this.events.get(i);\r\n\t\t\tif (ev1.isInsert()) {\r\n\t\t\t\tvar mc1 = ev1.getObject();\r\n\t\t\t\tif (!ev0.isSameLabel(ev1)) {\r\n\t\t\t\t\tmc0.computeIntersections(mc1, si);\r\n\t\t\t\t\tthis.nOverlaps++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\taddEdges: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet edges = arguments[0];\r\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar edge = i.next();\r\n\t\t\t\tthis.addEdge(edge, edge);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet edges = arguments[0], edgeSet = arguments[1];\r\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar edge = i.next();\r\n\t\t\t\tthis.addEdge(edge, edgeSet);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SimpleMCSweepLineIntersector;\r\n\t}\r\n});\r\n","import WKTWriter from '../../io/WKTWriter';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport Double from '../../../../../java/lang/Double';\r\nimport extend from '../../../../../extend';\r\nimport Comparator from '../../../../../java/util/Comparator';\r\nexport default function IntervalRTreeNode() {\r\n\tthis.min = Double.POSITIVE_INFINITY;\r\n\tthis.max = Double.NEGATIVE_INFINITY;\r\n}\r\nextend(IntervalRTreeNode.prototype, {\r\n\tgetMin: function () {\r\n\t\treturn this.min;\r\n\t},\r\n\tintersects: function (queryMin, queryMax) {\r\n\t\tif (this.min > queryMax || this.max < queryMin) return false;\r\n\t\treturn true;\r\n\t},\r\n\tgetMax: function () {\r\n\t\treturn this.max;\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn WKTWriter.toLineString(new Coordinate(this.min, 0), new Coordinate(this.max, 0));\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IntervalRTreeNode;\r\n\t}\r\n});\r\nfunction NodeComparator() {}\r\nextend(NodeComparator.prototype, {\r\n\tcompare: function (o1, o2) {\r\n\t\tvar n1 = o1;\r\n\t\tvar n2 = o2;\r\n\t\tvar mid1 = (n1.min + n1.max) / 2;\r\n\t\tvar mid2 = (n2.min + n2.max) / 2;\r\n\t\tif (mid1 < mid2) return -1;\r\n\t\tif (mid1 > mid2) return 1;\r\n\t\treturn 0;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodeComparator;\r\n\t}\r\n});\r\nIntervalRTreeNode.NodeComparator = NodeComparator;\r\n","import IntervalRTreeNode from './IntervalRTreeNode';\r\nimport extend from '../../../../../extend';\r\nimport inherits from '../../../../../inherits';\r\nexport default function IntervalRTreeLeafNode() {\r\n\tIntervalRTreeNode.apply(this);\r\n\tthis.item = null;\r\n\tlet min = arguments[0], max = arguments[1], item = arguments[2];\r\n\tthis.min = min;\r\n\tthis.max = max;\r\n\tthis.item = item;\r\n}\r\ninherits(IntervalRTreeLeafNode, IntervalRTreeNode);\r\nextend(IntervalRTreeLeafNode.prototype, {\r\n\tquery: function (queryMin, queryMax, visitor) {\r\n\t\tif (!this.intersects(queryMin, queryMax)) return null;\r\n\t\tvisitor.visitItem(this.item);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IntervalRTreeLeafNode;\r\n\t}\r\n});\r\n","import IntervalRTreeNode from './IntervalRTreeNode';\r\nimport extend from '../../../../../extend';\r\nimport inherits from '../../../../../inherits';\r\nexport default function IntervalRTreeBranchNode() {\r\n\tIntervalRTreeNode.apply(this);\r\n\tthis.node1 = null;\r\n\tthis.node2 = null;\r\n\tlet n1 = arguments[0], n2 = arguments[1];\r\n\tthis.node1 = n1;\r\n\tthis.node2 = n2;\r\n\tthis.buildExtent(this.node1, this.node2);\r\n}\r\ninherits(IntervalRTreeBranchNode, IntervalRTreeNode);\r\nextend(IntervalRTreeBranchNode.prototype, {\r\n\tbuildExtent: function (n1, n2) {\r\n\t\tthis.min = Math.min(n1.min, n2.min);\r\n\t\tthis.max = Math.max(n1.max, n2.max);\r\n\t},\r\n\tquery: function (queryMin, queryMax, visitor) {\r\n\t\tif (!this.intersects(queryMin, queryMax)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (this.node1 !== null) this.node1.query(queryMin, queryMax, visitor);\r\n\t\tif (this.node2 !== null) this.node2.query(queryMin, queryMax, visitor);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IntervalRTreeBranchNode;\r\n\t}\r\n});\r\n","import WKTWriter from '../../io/WKTWriter';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport IntervalRTreeLeafNode from './IntervalRTreeLeafNode';\r\nimport extend from '../../../../../extend';\r\nimport Collections from '../../../../../java/util/Collections';\r\nimport System from '../../../../../java/lang/System';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport IntervalRTreeBranchNode from './IntervalRTreeBranchNode';\r\nexport default function SortedPackedIntervalRTree() {\r\n\tthis.leaves = new ArrayList();\r\n\tthis.root = null;\r\n\tthis.level = 0;\r\n}\r\nextend(SortedPackedIntervalRTree.prototype, {\r\n\tbuildTree: function () {\r\n\t\tCollections.sort(this.leaves, new IntervalRTreeNode.NodeComparator());\r\n\t\tvar src = this.leaves;\r\n\t\tvar temp = null;\r\n\t\tvar dest = new ArrayList();\r\n\t\twhile (true) {\r\n\t\t\tthis.buildLevel(src, dest);\r\n\t\t\tif (dest.size() === 1) return dest.get(0);\r\n\t\t\ttemp = src;\r\n\t\t\tsrc = dest;\r\n\t\t\tdest = temp;\r\n\t\t}\r\n\t},\r\n\tinsert: function (min, max, item) {\r\n\t\tif (this.root !== null) throw new IllegalStateException(\"Index cannot be added to once it has been queried\");\r\n\t\tthis.leaves.add(new IntervalRTreeLeafNode(min, max, item));\r\n\t},\r\n\tquery: function (min, max, visitor) {\r\n\t\tthis.init();\r\n\t\tthis.root.query(min, max, visitor);\r\n\t},\r\n\tbuildRoot: function () {\r\n\t\tif (this.root !== null) return null;\r\n\t\tthis.root = this.buildTree();\r\n\t},\r\n\tprintNode: function (node) {\r\n\t\tSystem.out.println(WKTWriter.toLineString(new Coordinate(node.min, this.level), new Coordinate(node.max, this.level)));\r\n\t},\r\n\tinit: function () {\r\n\t\tif (this.root !== null) return null;\r\n\t\tthis.buildRoot();\r\n\t},\r\n\tbuildLevel: function (src, dest) {\r\n\t\tthis.level++;\r\n\t\tdest.clear();\r\n\t\tfor (var i = 0; i < src.size(); i += 2) {\r\n\t\t\tvar n1 = src.get(i);\r\n\t\t\tvar n2 = i + 1 < src.size() ? src.get(i) : null;\r\n\t\t\tif (n2 === null) {\r\n\t\t\t\tdest.add(n1);\r\n\t\t\t} else {\r\n\t\t\t\tvar node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\r\n\t\t\t\tdest.add(node);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SortedPackedIntervalRTree;\r\n\t}\r\n});\r\n","import LineString from '../LineString';\r\nimport Geometry from '../Geometry';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport Collection from '../../../../../java/util/Collection';\r\nimport LinearRing from '../LinearRing';\r\nimport extend from '../../../../../extend';\r\nimport GeometryComponentFilter from '../GeometryComponentFilter';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nexport default function LinearComponentExtracter() {\r\n\tthis.lines = null;\r\n\tthis.isForcedToLineString = false;\r\n\tif (arguments.length === 1) {\r\n\t\tlet lines = arguments[0];\r\n\t\tthis.lines = lines;\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet lines = arguments[0], isForcedToLineString = arguments[1];\r\n\t\tthis.lines = lines;\r\n\t\tthis.isForcedToLineString = isForcedToLineString;\r\n\t}\r\n}\r\nextend(LinearComponentExtracter.prototype, {\r\n\tfilter: function (geom) {\r\n\t\tif (this.isForcedToLineString && geom instanceof LinearRing) {\r\n\t\t\tvar line = geom.getFactory().createLineString(geom.getCoordinateSequence());\r\n\t\t\tthis.lines.add(line);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (geom instanceof LineString) this.lines.add(geom);\r\n\t},\r\n\tsetForceToLineString: function (isForcedToLineString) {\r\n\t\tthis.isForcedToLineString = isForcedToLineString;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryComponentFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LinearComponentExtracter;\r\n\t}\r\n});\r\nLinearComponentExtracter.getGeometry = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet geom = arguments[0];\r\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom));\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet geom = arguments[0], forceToLineString = arguments[1];\r\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString));\r\n\t}\r\n};\r\nLinearComponentExtracter.getLines = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet geom = arguments[0];\r\n\t\treturn LinearComponentExtracter.getLines(geom, false);\r\n\t} else if (arguments.length === 2) {\r\n\t\tif (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\r\n\t\t\tlet geoms = arguments[0], lines = arguments[1];\r\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar g = i.next();\r\n\t\t\t\tLinearComponentExtracter.getLines(g, lines);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t} else if (arguments[0] instanceof Geometry && typeof arguments[1] === \"boolean\") {\r\n\t\t\tlet geom = arguments[0], forceToLineString = arguments[1];\r\n\t\t\tvar lines = new ArrayList();\r\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\r\n\t\t\treturn lines;\r\n\t\t} else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\r\n\t\t\tlet geom = arguments[0], lines = arguments[1];\r\n\t\t\tif (geom instanceof LineString) {\r\n\t\t\t\tlines.add(geom);\r\n\t\t\t} else {\r\n\t\t\t\tgeom.apply(new LinearComponentExtracter(lines));\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t} else if (arguments.length === 3) {\r\n\t\tif (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\r\n\t\t\tlet geoms = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\r\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar g = i.next();\r\n\t\t\t\tLinearComponentExtracter.getLines(g, lines, forceToLineString);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t} else if (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\r\n\t\t\tlet geom = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\r\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t}\r\n};\r\n","import ItemVisitor from './ItemVisitor';\r\nimport extend from '../../../../extend';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function ArrayListVisitor() {\r\n\tthis.items = new ArrayList();\r\n}\r\nextend(ArrayListVisitor.prototype, {\r\n\tvisitItem: function (item) {\r\n\t\tthis.items.add(item);\r\n\t},\r\n\tgetItems: function () {\r\n\t\treturn this.items;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [ItemVisitor];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ArrayListVisitor;\r\n\t}\r\n});\r\n","import hasInterface from '../../../../../hasInterface';\r\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\r\nimport ItemVisitor from '../../index/ItemVisitor';\r\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\r\nimport extend from '../../../../../extend';\r\nimport SortedPackedIntervalRTree from '../../index/intervalrtree/SortedPackedIntervalRTree';\r\nimport LineSegment from '../../geom/LineSegment';\r\nimport Polygonal from '../../geom/Polygonal';\r\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\r\nimport ArrayListVisitor from '../../index/ArrayListVisitor';\r\nimport RayCrossingCounter from '../RayCrossingCounter';\r\nexport default function IndexedPointInAreaLocator() {\r\n\tthis.index = null;\r\n\tlet g = arguments[0];\r\n\tif (!hasInterface(g, Polygonal)) throw new IllegalArgumentException(\"Argument must be Polygonal\");\r\n\tthis.index = new IntervalIndexedGeometry(g);\r\n}\r\nextend(IndexedPointInAreaLocator.prototype, {\r\n\tlocate: function (p) {\r\n\t\tvar rcc = new RayCrossingCounter(p);\r\n\t\tvar visitor = new SegmentVisitor(rcc);\r\n\t\tthis.index.query(p.y, p.y, visitor);\r\n\t\treturn rcc.getLocation();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [PointOnGeometryLocator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IndexedPointInAreaLocator;\r\n\t}\r\n});\r\nfunction SegmentVisitor() {\r\n\tthis.counter = null;\r\n\tlet counter = arguments[0];\r\n\tthis.counter = counter;\r\n}\r\nextend(SegmentVisitor.prototype, {\r\n\tvisitItem: function (item) {\r\n\t\tvar seg = item;\r\n\t\tthis.counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [ItemVisitor];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SegmentVisitor;\r\n\t}\r\n});\r\nfunction IntervalIndexedGeometry() {\r\n\tthis.index = new SortedPackedIntervalRTree();\r\n\tlet geom = arguments[0];\r\n\tthis.init(geom);\r\n}\r\nextend(IntervalIndexedGeometry.prototype, {\r\n\tinit: function (geom) {\r\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\r\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\r\n\t\t\tvar line = i.next();\r\n\t\t\tvar pts = line.getCoordinates();\r\n\t\t\tthis.addLine(pts);\r\n\t\t}\r\n\t},\r\n\taddLine: function (pts) {\r\n\t\tfor (var i = 1; i < pts.length; i++) {\r\n\t\t\tvar seg = new LineSegment(pts[i - 1], pts[i]);\r\n\t\t\tvar min = Math.min(seg.p0.y, seg.p1.y);\r\n\t\t\tvar max = Math.max(seg.p0.y, seg.p1.y);\r\n\t\t\tthis.index.insert(min, max, seg);\r\n\t\t}\r\n\t},\r\n\tquery: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet min = arguments[0], max = arguments[1];\r\n\t\t\tvar visitor = new ArrayListVisitor();\r\n\t\t\tthis.index.query(min, max, visitor);\r\n\t\t\treturn visitor.getItems();\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet min = arguments[0], max = arguments[1], visitor = arguments[2];\r\n\t\t\tthis.index.query(min, max, visitor);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IntervalIndexedGeometry;\r\n\t}\r\n});\r\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor;\r\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry;\r\n","import Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nexport default function EdgeIntersection() {\r\n\tthis.coord = null;\r\n\tthis.segmentIndex = null;\r\n\tthis.dist = null;\r\n\tlet coord = arguments[0], segmentIndex = arguments[1], dist = arguments[2];\r\n\tthis.coord = new Coordinate(coord);\r\n\tthis.segmentIndex = segmentIndex;\r\n\tthis.dist = dist;\r\n}\r\nextend(EdgeIntersection.prototype, {\r\n\tgetSegmentIndex: function () {\r\n\t\treturn this.segmentIndex;\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.coord;\r\n\t},\r\n\tprint: function (out) {\r\n\t\tout.print(this.coord);\r\n\t\tout.print(\" seg # = \" + this.segmentIndex);\r\n\t\tout.println(\" dist = \" + this.dist);\r\n\t},\r\n\tcompareTo: function (obj) {\r\n\t\tvar other = obj;\r\n\t\treturn this.compare(other.segmentIndex, other.dist);\r\n\t},\r\n\tisEndPoint: function (maxSegmentIndex) {\r\n\t\tif (this.segmentIndex === 0 && this.dist === 0.0) return true;\r\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\r\n\t\treturn false;\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn this.coord + \" seg # = \" + this.segmentIndex + \" dist = \" + this.dist;\r\n\t},\r\n\tgetDistance: function () {\r\n\t\treturn this.dist;\r\n\t},\r\n\tcompare: function (segmentIndex, dist) {\r\n\t\tif (this.segmentIndex < segmentIndex) return -1;\r\n\t\tif (this.segmentIndex > segmentIndex) return 1;\r\n\t\tif (this.dist < dist) return -1;\r\n\t\tif (this.dist > dist) return 1;\r\n\t\treturn 0;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeIntersection;\r\n\t}\r\n});\r\n","import EdgeIntersection from './EdgeIntersection';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport Label from './Label';\r\nimport Edge from './Edge';\r\nimport TreeMap from '../../../../java/util/TreeMap';\r\nexport default function EdgeIntersectionList() {\r\n\tthis.nodeMap = new TreeMap();\r\n\tthis.edge = null;\r\n\tlet edge = arguments[0];\r\n\tthis.edge = edge;\r\n}\r\nextend(EdgeIntersectionList.prototype, {\r\n\tprint: function (out) {\r\n\t\tout.println(\"Intersections:\");\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar ei = it.next();\r\n\t\t\tei.print(out);\r\n\t\t}\r\n\t},\r\n\titerator: function () {\r\n\t\treturn this.nodeMap.values().iterator();\r\n\t},\r\n\taddSplitEdges: function (edgeList) {\r\n\t\tthis.addEndpoints();\r\n\t\tvar it = this.iterator();\r\n\t\tvar eiPrev = it.next();\r\n\t\twhile (it.hasNext()) {\r\n\t\t\tvar ei = it.next();\r\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\r\n\t\t\tedgeList.add(newEdge);\r\n\t\t\teiPrev = ei;\r\n\t\t}\r\n\t},\r\n\taddEndpoints: function () {\r\n\t\tvar maxSegIndex = this.edge.pts.length - 1;\r\n\t\tthis.add(this.edge.pts[0], 0, 0.0);\r\n\t\tthis.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\r\n\t},\r\n\tcreateSplitEdge: function (ei0, ei1) {\r\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\r\n\t\tvar lastSegStartPt = this.edge.pts[ei1.segmentIndex];\r\n\t\tvar useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\r\n\t\tif (!useIntPt1) {\r\n\t\t\tnpts--;\r\n\t\t}\r\n\t\tvar pts = new Array(npts).fill(null);\r\n\t\tvar ipt = 0;\r\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\r\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\r\n\t\t\tpts[ipt++] = this.edge.pts[i];\r\n\t\t}\r\n\t\tif (useIntPt1) pts[ipt] = ei1.coord;\r\n\t\treturn new Edge(pts, new Label(this.edge.label));\r\n\t},\r\n\tadd: function (intPt, segmentIndex, dist) {\r\n\t\tvar eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\r\n\t\tvar ei = this.nodeMap.get(eiNew);\r\n\t\tif (ei !== null) {\r\n\t\t\treturn ei;\r\n\t\t}\r\n\t\tthis.nodeMap.put(eiNew, eiNew);\r\n\t\treturn eiNew;\r\n\t},\r\n\tisIntersection: function (pt) {\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar ei = it.next();\r\n\t\t\tif (ei.coord.equals(pt)) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeIntersectionList;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport Integer from '../../../../../java/lang/Integer';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Quadrant from '../Quadrant';\r\nexport default function MonotoneChainIndexer() {}\r\nextend(MonotoneChainIndexer.prototype, {\r\n\tgetChainStartIndices: function (pts) {\r\n\t\tvar start = 0;\r\n\t\tvar startIndexList = new ArrayList();\r\n\t\tstartIndexList.add(new Integer(start));\r\n\t\tdo {\r\n\t\t\tvar last = this.findChainEnd(pts, start);\r\n\t\t\tstartIndexList.add(new Integer(last));\r\n\t\t\tstart = last;\r\n\t\t} while (start < pts.length - 1);\r\n\t\tvar startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\r\n\t\treturn startIndex;\r\n\t},\r\n\tfindChainEnd: function (pts, start) {\r\n\t\tvar chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\r\n\t\tvar last = start + 1;\r\n\t\twhile (last < pts.length) {\r\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\r\n\t\t\tif (quad !== chainQuad) break;\r\n\t\t\tlast++;\r\n\t\t}\r\n\t\treturn last - 1;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MonotoneChainIndexer;\r\n\t}\r\n});\r\nMonotoneChainIndexer.toIntArray = function (list) {\r\n\tvar array = new Array(list.size()).fill(null);\r\n\tfor (var i = 0; i < array.length; i++) {\r\n\t\tarray[i] = list.get(i).intValue();\r\n\t}\r\n\treturn array;\r\n};\r\n","import extend from '../../../../../extend';\r\nimport MonotoneChainIndexer from './MonotoneChainIndexer';\r\nimport Envelope from '../../geom/Envelope';\r\nexport default function MonotoneChainEdge() {\r\n\tthis.e = null;\r\n\tthis.pts = null;\r\n\tthis.startIndex = null;\r\n\tthis.env1 = new Envelope();\r\n\tthis.env2 = new Envelope();\r\n\tlet e = arguments[0];\r\n\tthis.e = e;\r\n\tthis.pts = e.getCoordinates();\r\n\tvar mcb = new MonotoneChainIndexer();\r\n\tthis.startIndex = mcb.getChainStartIndices(this.pts);\r\n}\r\nextend(MonotoneChainEdge.prototype, {\r\n\tgetCoordinates: function () {\r\n\t\treturn this.pts;\r\n\t},\r\n\tgetMaxX: function (chainIndex) {\r\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\r\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\r\n\t\treturn x1 > x2 ? x1 : x2;\r\n\t},\r\n\tgetMinX: function (chainIndex) {\r\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\r\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\r\n\t\treturn x1 < x2 ? x1 : x2;\r\n\t},\r\n\tcomputeIntersectsForChain: function () {\r\n\t\tif (arguments.length === 4) {\r\n\t\t\tlet chainIndex0 = arguments[0], mce = arguments[1], chainIndex1 = arguments[2], si = arguments[3];\r\n\t\t\tthis.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\r\n\t\t} else if (arguments.length === 6) {\r\n\t\t\tlet start0 = arguments[0], end0 = arguments[1], mce = arguments[2], start1 = arguments[3], end1 = arguments[4], ei = arguments[5];\r\n\t\t\tvar p00 = this.pts[start0];\r\n\t\t\tvar p01 = this.pts[end0];\r\n\t\t\tvar p10 = mce.pts[start1];\r\n\t\t\tvar p11 = mce.pts[end1];\r\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\r\n\t\t\t\tei.addIntersections(this.e, start0, mce.e, start1);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tthis.env1.init(p00, p01);\r\n\t\t\tthis.env2.init(p10, p11);\r\n\t\t\tif (!this.env1.intersects(this.env2)) return null;\r\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\r\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\r\n\t\t\tif (start0 < mid0) {\r\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei);\r\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei);\r\n\t\t\t}\r\n\t\t\tif (mid0 < end0) {\r\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei);\r\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetStartIndexes: function () {\r\n\t\treturn this.startIndex;\r\n\t},\r\n\tcomputeIntersects: function (mce, si) {\r\n\t\tfor (var i = 0; i < this.startIndex.length - 1; i++) {\r\n\t\t\tfor (var j = 0; j < mce.startIndex.length - 1; j++) {\r\n\t\t\t\tthis.computeIntersectsForChain(i, mce, j, si);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MonotoneChainEdge;\r\n\t}\r\n});\r\n","import Location from '../geom/Location';\r\nimport Position from './Position';\r\nimport extend from '../../../../extend';\r\nexport default function Depth() {\r\n\tthis.depth = Array(2).fill().map(() => Array(3));\r\n\tfor (var i = 0; i < 2; i++) {\r\n\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\tthis.depth[i][j] = Depth.NULL_VALUE;\r\n\t\t}\r\n\t}\r\n}\r\nextend(Depth.prototype, {\r\n\tgetDepth: function (geomIndex, posIndex) {\r\n\t\treturn this.depth[geomIndex][posIndex];\r\n\t},\r\n\tsetDepth: function (geomIndex, posIndex, depthValue) {\r\n\t\tthis.depth[geomIndex][posIndex] = depthValue;\r\n\t},\r\n\tisNull: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\t\tfor (var j = 0; j < 3; j++) {\r\n\t\t\t\t\tif (this.depth[i][j] !== Depth.NULL_VALUE) return false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet geomIndex = arguments[0];\r\n\t\t\treturn this.depth[geomIndex][1] === Depth.NULL_VALUE;\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\r\n\t\t\treturn this.depth[geomIndex][posIndex] === Depth.NULL_VALUE;\r\n\t\t}\r\n\t},\r\n\tnormalize: function () {\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tif (!this.isNull(i)) {\r\n\t\t\t\tvar minDepth = this.depth[i][1];\r\n\t\t\t\tif (this.depth[i][2] < minDepth) minDepth = this.depth[i][2];\r\n\t\t\t\tif (minDepth < 0) minDepth = 0;\r\n\t\t\t\tfor (var j = 1; j < 3; j++) {\r\n\t\t\t\t\tvar newValue = 0;\r\n\t\t\t\t\tif (this.depth[i][j] > minDepth) newValue = 1;\r\n\t\t\t\t\tthis.depth[i][j] = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetDelta: function (geomIndex) {\r\n\t\treturn this.depth[geomIndex][Position.RIGHT] - this.depth[geomIndex][Position.LEFT];\r\n\t},\r\n\tgetLocation: function (geomIndex, posIndex) {\r\n\t\tif (this.depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR;\r\n\t\treturn Location.INTERIOR;\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn \"A: \" + this.depth[0][1] + \",\" + this.depth[0][2] + \" B: \" + this.depth[1][1] + \",\" + this.depth[1][2];\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet lbl = arguments[0];\r\n\t\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\t\tfor (var j = 1; j < 3; j++) {\r\n\t\t\t\t\tvar loc = lbl.getLocation(i, j);\r\n\t\t\t\t\tif (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\r\n\t\t\t\t\t\tif (this.isNull(i, j)) {\r\n\t\t\t\t\t\t\tthis.depth[i][j] = Depth.depthAtLocation(loc);\r\n\t\t\t\t\t\t} else this.depth[i][j] += Depth.depthAtLocation(loc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\r\n\t\t\tif (location === Location.INTERIOR) this.depth[geomIndex][posIndex]++;\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Depth;\r\n\t}\r\n});\r\nDepth.depthAtLocation = function (location) {\r\n\tif (location === Location.EXTERIOR) return 0;\r\n\tif (location === Location.INTERIOR) return 1;\r\n\treturn Depth.NULL_VALUE;\r\n};\r\nDepth.NULL_VALUE = -1;\r\n","import StringBuffer from '../../../../java/lang/StringBuffer';\r\nimport EdgeIntersectionList from './EdgeIntersectionList';\r\nimport MonotoneChainEdge from './index/MonotoneChainEdge';\r\nimport Position from './Position';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport Label from './Label';\r\nimport Envelope from '../geom/Envelope';\r\nimport inherits from '../../../../inherits';\r\nimport Depth from './Depth';\r\nimport GraphComponent from './GraphComponent';\r\nexport default function Edge() {\r\n\tGraphComponent.apply(this);\r\n\tthis.pts = null;\r\n\tthis.env = null;\r\n\tthis.eiList = new EdgeIntersectionList(this);\r\n\tthis.name = null;\r\n\tthis.mce = null;\r\n\tthis._isIsolated = true;\r\n\tthis.depth = new Depth();\r\n\tthis.depthDelta = 0;\r\n\tif (arguments.length === 1) {\r\n\t\tlet pts = arguments[0];\r\n\t\tEdge.call(this, pts, null);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet pts = arguments[0], label = arguments[1];\r\n\t\tthis.pts = pts;\r\n\t\tthis.label = label;\r\n\t}\r\n}\r\ninherits(Edge, GraphComponent);\r\nextend(Edge.prototype, {\r\n\tgetDepth: function () {\r\n\t\treturn this.depth;\r\n\t},\r\n\tgetCollapsedEdge: function () {\r\n\t\tvar newPts = new Array(2).fill(null);\r\n\t\tnewPts[0] = this.pts[0];\r\n\t\tnewPts[1] = this.pts[1];\r\n\t\tvar newe = new Edge(newPts, Label.toLineLabel(this.label));\r\n\t\treturn newe;\r\n\t},\r\n\tisIsolated: function () {\r\n\t\treturn this._isIsolated;\r\n\t},\r\n\tgetCoordinates: function () {\r\n\t\treturn this.pts;\r\n\t},\r\n\tsetIsolated: function (isIsolated) {\r\n\t\tthis._isIsolated = isIsolated;\r\n\t},\r\n\tsetName: function (name) {\r\n\t\tthis.name = name;\r\n\t},\r\n\tequals: function (o) {\r\n\t\tif (!(o instanceof Edge)) return false;\r\n\t\tvar e = o;\r\n\t\tif (this.pts.length !== e.pts.length) return false;\r\n\t\tvar isEqualForward = true;\r\n\t\tvar isEqualReverse = true;\r\n\t\tvar iRev = this.pts.length;\r\n\t\tfor (var i = 0; i < this.pts.length; i++) {\r\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\r\n\t\t\t\tisEqualForward = false;\r\n\t\t\t}\r\n\t\t\tif (!this.pts[i].equals2D(e.pts[-- iRev])) {\r\n\t\t\t\tisEqualReverse = false;\r\n\t\t\t}\r\n\t\t\tif (!isEqualForward && !isEqualReverse) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (this.pts.length > 0) return this.pts[0];\r\n\t\t\treturn null;\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet i = arguments[0];\r\n\t\t\treturn this.pts[i];\r\n\t\t}\r\n\t},\r\n\tprint: function (out) {\r\n\t\tout.print(\"edge \" + this.name + \": \");\r\n\t\tout.print(\"LINESTRING (\");\r\n\t\tfor (var i = 0; i < this.pts.length; i++) {\r\n\t\t\tif (i > 0) out.print(\",\");\r\n\t\t\tout.print(this.pts[i].x + \" \" + this.pts[i].y);\r\n\t\t}\r\n\t\tout.print(\")  \" + this.label + \" \" + this.depthDelta);\r\n\t},\r\n\tcomputeIM: function (im) {\r\n\t\tEdge.updateIM(this.label, im);\r\n\t},\r\n\tisCollapsed: function () {\r\n\t\tif (!this.label.isArea()) return false;\r\n\t\tif (this.pts.length !== 3) return false;\r\n\t\tif (this.pts[0].equals(this.pts[2])) return true;\r\n\t\treturn false;\r\n\t},\r\n\tisClosed: function () {\r\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\r\n\t},\r\n\tgetMaximumSegmentIndex: function () {\r\n\t\treturn this.pts.length - 1;\r\n\t},\r\n\tgetDepthDelta: function () {\r\n\t\treturn this.depthDelta;\r\n\t},\r\n\tgetNumPoints: function () {\r\n\t\treturn this.pts.length;\r\n\t},\r\n\tprintReverse: function (out) {\r\n\t\tout.print(\"edge \" + this.name + \": \");\r\n\t\tfor (var i = this.pts.length - 1; i >= 0; i--) {\r\n\t\t\tout.print(this.pts[i] + \" \");\r\n\t\t}\r\n\t\tout.println(\"\");\r\n\t},\r\n\tgetMonotoneChainEdge: function () {\r\n\t\tif (this.mce === null) this.mce = new MonotoneChainEdge(this);\r\n\t\treturn this.mce;\r\n\t},\r\n\tgetEnvelope: function () {\r\n\t\tif (this.env === null) {\r\n\t\t\tthis.env = new Envelope();\r\n\t\t\tfor (var i = 0; i < this.pts.length; i++) {\r\n\t\t\t\tthis.env.expandToInclude(this.pts[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.env;\r\n\t},\r\n\taddIntersection: function (li, segmentIndex, geomIndex, intIndex) {\r\n\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\r\n\t\tvar normalizedSegmentIndex = segmentIndex;\r\n\t\tvar dist = li.getEdgeDistance(geomIndex, intIndex);\r\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\r\n\t\tif (nextSegIndex < this.pts.length) {\r\n\t\t\tvar nextPt = this.pts[nextSegIndex];\r\n\t\t\tif (intPt.equals2D(nextPt)) {\r\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\r\n\t\t\t\tdist = 0.0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar ei = this.eiList.add(intPt, normalizedSegmentIndex, dist);\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar buf = new StringBuffer();\r\n\t\tbuf.append(\"edge \" + this.name + \": \");\r\n\t\tbuf.append(\"LINESTRING (\");\r\n\t\tfor (var i = 0; i < this.pts.length; i++) {\r\n\t\t\tif (i > 0) buf.append(\",\");\r\n\t\t\tbuf.append(this.pts[i].x + \" \" + this.pts[i].y);\r\n\t\t}\r\n\t\tbuf.append(\")  \" + this.label + \" \" + this.depthDelta);\r\n\t\treturn buf.toString();\r\n\t},\r\n\tisPointwiseEqual: function (e) {\r\n\t\tif (this.pts.length !== e.pts.length) return false;\r\n\t\tfor (var i = 0; i < this.pts.length; i++) {\r\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tsetDepthDelta: function (depthDelta) {\r\n\t\tthis.depthDelta = depthDelta;\r\n\t},\r\n\tgetEdgeIntersectionList: function () {\r\n\t\treturn this.eiList;\r\n\t},\r\n\taddIntersections: function (li, segmentIndex, geomIndex) {\r\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\r\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Edge;\r\n\t}\r\n});\r\nEdge.updateIM = function () {\r\n\tif (arguments.length === 2) {\r\n\t\tlet label = arguments[0], im = arguments[1];\r\n\t\tim.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\r\n\t\tif (label.isArea()) {\r\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\r\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\r\n\t\t}\r\n\t} else return GraphComponent.prototype.updateIM.apply(this, arguments);\r\n};\r\n","import PointLocator from '../algorithm/PointLocator';\r\nimport Location from '../geom/Location';\r\nimport LineString from '../geom/LineString';\r\nimport HashMap from '../../../../java/util/HashMap';\r\nimport CGAlgorithms from '../algorithm/CGAlgorithms';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport Position from './Position';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport Point from '../geom/Point';\r\nimport Polygon from '../geom/Polygon';\r\nimport MultiPoint from '../geom/MultiPoint';\r\nimport SimpleMCSweepLineIntersector from './index/SimpleMCSweepLineIntersector';\r\nimport LinearRing from '../geom/LinearRing';\r\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\r\nimport extend from '../../../../extend';\r\nimport SegmentIntersector from './index/SegmentIntersector';\r\nimport MultiPolygon from '../geom/MultiPolygon';\r\nimport Label from './Label';\r\nimport GeometryCollection from '../geom/GeometryCollection';\r\nimport CoordinateArrays from '../geom/CoordinateArrays';\r\nimport Polygonal from '../geom/Polygonal';\r\nimport IndexedPointInAreaLocator from '../algorithm/locate/IndexedPointInAreaLocator';\r\nimport Assert from '../util/Assert';\r\nimport Edge from './Edge';\r\nimport inherits from '../../../../inherits';\r\nimport MultiLineString from '../geom/MultiLineString';\r\nimport PlanarGraph from './PlanarGraph';\r\nexport default function GeometryGraph() {\r\n\tPlanarGraph.apply(this);\r\n\tthis.parentGeom = null;\r\n\tthis.lineEdgeMap = new HashMap();\r\n\tthis.boundaryNodeRule = null;\r\n\tthis.useBoundaryDeterminationRule = true;\r\n\tthis.argIndex = null;\r\n\tthis.boundaryNodes = null;\r\n\tthis._hasTooFewPoints = false;\r\n\tthis.invalidPoint = null;\r\n\tthis.areaPtLocator = null;\r\n\tthis.ptLocator = new PointLocator();\r\n\tif (arguments.length === 2) {\r\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1];\r\n\t\tGeometryGraph.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1], boundaryNodeRule = arguments[2];\r\n\t\tthis.argIndex = argIndex;\r\n\t\tthis.parentGeom = parentGeom;\r\n\t\tthis.boundaryNodeRule = boundaryNodeRule;\r\n\t\tif (parentGeom !== null) {\r\n\t\t\tthis.add(parentGeom);\r\n\t\t}\r\n\t}\r\n}\r\ninherits(GeometryGraph, PlanarGraph);\r\nextend(GeometryGraph.prototype, {\r\n\tinsertBoundaryPoint: function (argIndex, coord) {\r\n\t\tvar n = this.nodes.addNode(coord);\r\n\t\tvar lbl = n.getLabel();\r\n\t\tvar boundaryCount = 1;\r\n\t\tvar loc = Location.NONE;\r\n\t\tloc = lbl.getLocation(argIndex, Position.ON);\r\n\t\tif (loc === Location.BOUNDARY) boundaryCount++;\r\n\t\tvar newLoc = GeometryGraph.determineBoundary(this.boundaryNodeRule, boundaryCount);\r\n\t\tlbl.setLocation(argIndex, newLoc);\r\n\t},\r\n\tcomputeSelfNodes: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1];\r\n\t\t\treturn this.computeSelfNodes(li, computeRingSelfNodes, false);\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1], isDoneIfProperInt = arguments[2];\r\n\t\t\tvar si = new SegmentIntersector(li, true, false);\r\n\t\t\tsi.setIsDoneIfProperInt(isDoneIfProperInt);\r\n\t\t\tvar esi = this.createEdgeSetIntersector();\r\n\t\t\tvar isRings = this.parentGeom instanceof LinearRing || this.parentGeom instanceof Polygon || this.parentGeom instanceof MultiPolygon;\r\n\t\t\tvar computeAllSegments = computeRingSelfNodes || !isRings;\r\n\t\t\tesi.computeIntersections(this.edges, si, computeAllSegments);\r\n\t\t\tthis.addSelfIntersectionNodes(this.argIndex);\r\n\t\t\treturn si;\r\n\t\t}\r\n\t},\r\n\tcomputeSplitEdges: function (edgelist) {\r\n\t\tfor (var i = this.edges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\te.eiList.addSplitEdges(edgelist);\r\n\t\t}\r\n\t},\r\n\tcomputeEdgeIntersections: function (g, li, includeProper) {\r\n\t\tvar si = new SegmentIntersector(li, includeProper, true);\r\n\t\tsi.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\r\n\t\tvar esi = this.createEdgeSetIntersector();\r\n\t\tesi.computeIntersections(this.edges, g.edges, si);\r\n\t\treturn si;\r\n\t},\r\n\tgetGeometry: function () {\r\n\t\treturn this.parentGeom;\r\n\t},\r\n\tgetBoundaryNodeRule: function () {\r\n\t\treturn this.boundaryNodeRule;\r\n\t},\r\n\thasTooFewPoints: function () {\r\n\t\treturn this._hasTooFewPoints;\r\n\t},\r\n\taddPoint: function () {\r\n\t\tif (arguments[0] instanceof Point) {\r\n\t\t\tlet p = arguments[0];\r\n\t\t\tvar coord = p.getCoordinate();\r\n\t\t\tthis.insertPoint(this.argIndex, coord, Location.INTERIOR);\r\n\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet pt = arguments[0];\r\n\t\t\tthis.insertPoint(this.argIndex, pt, Location.INTERIOR);\r\n\t\t}\r\n\t},\r\n\taddPolygon: function (p) {\r\n\t\tthis.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\r\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\r\n\t\t\tvar hole = p.getInteriorRingN(i);\r\n\t\t\tthis.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\r\n\t\t}\r\n\t},\r\n\taddEdge: function (e) {\r\n\t\tthis.insertEdge(e);\r\n\t\tvar coord = e.getCoordinates();\r\n\t\tthis.insertPoint(this.argIndex, coord[0], Location.BOUNDARY);\r\n\t\tthis.insertPoint(this.argIndex, coord[coord.length - 1], Location.BOUNDARY);\r\n\t},\r\n\taddLineString: function (line) {\r\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\r\n\t\tif (coord.length < 2) {\r\n\t\t\tthis._hasTooFewPoints = true;\r\n\t\t\tthis.invalidPoint = coord[0];\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar e = new Edge(coord, new Label(this.argIndex, Location.INTERIOR));\r\n\t\tthis.lineEdgeMap.put(line, e);\r\n\t\tthis.insertEdge(e);\r\n\t\tAssert.isTrue(coord.length >= 2, \"found LineString with single point\");\r\n\t\tthis.insertBoundaryPoint(this.argIndex, coord[0]);\r\n\t\tthis.insertBoundaryPoint(this.argIndex, coord[coord.length - 1]);\r\n\t},\r\n\tgetInvalidPoint: function () {\r\n\t\treturn this.invalidPoint;\r\n\t},\r\n\tgetBoundaryPoints: function () {\r\n\t\tvar coll = this.getBoundaryNodes();\r\n\t\tvar pts = new Array(coll.size()).fill(null);\r\n\t\tvar i = 0;\r\n\t\tfor (var it = coll.iterator(); it.hasNext(); ) {\r\n\t\t\tvar node = it.next();\r\n\t\t\tpts[i++] = node.getCoordinate().copy();\r\n\t\t}\r\n\t\treturn pts;\r\n\t},\r\n\tgetBoundaryNodes: function () {\r\n\t\tif (this.boundaryNodes === null) this.boundaryNodes = this.nodes.getBoundaryNodes(this.argIndex);\r\n\t\treturn this.boundaryNodes;\r\n\t},\r\n\taddSelfIntersectionNode: function (argIndex, coord, loc) {\r\n\t\tif (this.isBoundaryNode(argIndex, coord)) return null;\r\n\t\tif (loc === Location.BOUNDARY && this.useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord); else this.insertPoint(argIndex, coord, loc);\r\n\t},\r\n\taddPolygonRing: function (lr, cwLeft, cwRight) {\r\n\t\tif (lr.isEmpty()) return null;\r\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\r\n\t\tif (coord.length < 4) {\r\n\t\t\tthis._hasTooFewPoints = true;\r\n\t\t\tthis.invalidPoint = coord[0];\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar left = cwLeft;\r\n\t\tvar right = cwRight;\r\n\t\tif (CGAlgorithms.isCCW(coord)) {\r\n\t\t\tleft = cwRight;\r\n\t\t\tright = cwLeft;\r\n\t\t}\r\n\t\tvar e = new Edge(coord, new Label(this.argIndex, Location.BOUNDARY, left, right));\r\n\t\tthis.lineEdgeMap.put(lr, e);\r\n\t\tthis.insertEdge(e);\r\n\t\tthis.insertPoint(this.argIndex, coord[0], Location.BOUNDARY);\r\n\t},\r\n\tinsertPoint: function (argIndex, coord, onLocation) {\r\n\t\tvar n = this.nodes.addNode(coord);\r\n\t\tvar lbl = n.getLabel();\r\n\t\tif (lbl === null) {\r\n\t\t\tn.label = new Label(argIndex, onLocation);\r\n\t\t} else lbl.setLocation(argIndex, onLocation);\r\n\t},\r\n\tcreateEdgeSetIntersector: function () {\r\n\t\treturn new SimpleMCSweepLineIntersector();\r\n\t},\r\n\taddSelfIntersectionNodes: function (argIndex) {\r\n\t\tfor (var i = this.edges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\r\n\t\t\tfor (var eiIt = e.eiList.iterator(); eiIt.hasNext(); ) {\r\n\t\t\t\tvar ei = eiIt.next();\r\n\t\t\t\tthis.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet g = arguments[0];\r\n\t\t\tif (g.isEmpty()) return null;\r\n\t\t\tif (g instanceof MultiPolygon) this.useBoundaryDeterminationRule = false;\r\n\t\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\r\n\t\t} else return PlanarGraph.prototype.add.apply(this, arguments);\r\n\t},\r\n\taddCollection: function (gc) {\r\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\r\n\t\t\tvar g = gc.getGeometryN(i);\r\n\t\t\tthis.add(g);\r\n\t\t}\r\n\t},\r\n\tlocate: function (pt) {\r\n\t\tif (hasInterface(this.parentGeom, Polygonal) && this.parentGeom.getNumGeometries() > 50) {\r\n\t\t\tif (this.areaPtLocator === null) {\r\n\t\t\t\tthis.areaPtLocator = new IndexedPointInAreaLocator(this.parentGeom);\r\n\t\t\t}\r\n\t\t\treturn this.areaPtLocator.locate(pt);\r\n\t\t}\r\n\t\treturn this.ptLocator.locate(pt, this.parentGeom);\r\n\t},\r\n\tfindEdge: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet line = arguments[0];\r\n\t\t\treturn this.lineEdgeMap.get(line);\r\n\t\t} else return PlanarGraph.prototype.findEdge.apply(this, arguments);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryGraph;\r\n\t}\r\n});\r\nGeometryGraph.determineBoundary = function (boundaryNodeRule, boundaryCount) {\r\n\treturn boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR;\r\n};\r\n","import BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\r\nimport extend from '../../../../extend';\r\nimport GeometryGraph from '../geomgraph/GeometryGraph';\r\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\r\nexport default function GeometryGraphOperation() {\r\n\tthis.li = new RobustLineIntersector();\r\n\tthis.resultPrecisionModel = null;\r\n\tthis.arg = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet g0 = arguments[0];\r\n\t\tthis.setComputationPrecision(g0.getPrecisionModel());\r\n\t\tthis.arg = new Array(1).fill(null);\r\n\t\tthis.arg[0] = new GeometryGraph(0, g0);\r\n\t\t;\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet g0 = arguments[0], g1 = arguments[1];\r\n\t\tGeometryGraphOperation.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\r\n\t\tif (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel()); else this.setComputationPrecision(g1.getPrecisionModel());\r\n\t\tthis.arg = new Array(2).fill(null);\r\n\t\tthis.arg[0] = new GeometryGraph(0, g0, boundaryNodeRule);\r\n\t\tthis.arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\r\n\t}\r\n}\r\nextend(GeometryGraphOperation.prototype, {\r\n\tgetArgGeometry: function (i) {\r\n\t\treturn this.arg[i].getGeometry();\r\n\t},\r\n\tsetComputationPrecision: function (pm) {\r\n\t\tthis.resultPrecisionModel = pm;\r\n\t\tthis.li.setPrecisionModel(this.resultPrecisionModel);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryGraphOperation;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nimport CoordinateArrays from '../geom/CoordinateArrays';\r\nexport default function OrientedCoordinateArray() {\r\n\tthis.pts = null;\r\n\tthis._orientation = null;\r\n\tlet pts = arguments[0];\r\n\tthis.pts = pts;\r\n\tthis._orientation = OrientedCoordinateArray.orientation(pts);\r\n}\r\nextend(OrientedCoordinateArray.prototype, {\r\n\tcompareTo: function (o1) {\r\n\t\tvar oca = o1;\r\n\t\tvar comp = OrientedCoordinateArray.compareOriented(this.pts, this._orientation, oca.pts, oca._orientation);\r\n\t\treturn comp;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn OrientedCoordinateArray;\r\n\t}\r\n});\r\nOrientedCoordinateArray.orientation = function (pts) {\r\n\treturn CoordinateArrays.increasingDirection(pts) === 1;\r\n};\r\nOrientedCoordinateArray.compareOriented = function (pts1, orientation1, pts2, orientation2) {\r\n\tvar dir1 = orientation1 ? 1 : -1;\r\n\tvar dir2 = orientation2 ? 1 : -1;\r\n\tvar limit1 = orientation1 ? pts1.length : -1;\r\n\tvar limit2 = orientation2 ? pts2.length : -1;\r\n\tvar i1 = orientation1 ? 0 : pts1.length - 1;\r\n\tvar i2 = orientation2 ? 0 : pts2.length - 1;\r\n\tvar comp = 0;\r\n\twhile (true) {\r\n\t\tvar compPt = pts1[i1].compareTo(pts2[i2]);\r\n\t\tif (compPt !== 0) return compPt;\r\n\t\ti1 += dir1;\r\n\t\ti2 += dir2;\r\n\t\tvar done1 = i1 === limit1;\r\n\t\tvar done2 = i2 === limit2;\r\n\t\tif (done1 && !done2) return -1;\r\n\t\tif (!done1 && done2) return 1;\r\n\t\tif (done1 && done2) return 0;\r\n\t}\r\n};\r\n","import OrientedCoordinateArray from '../noding/OrientedCoordinateArray';\r\nimport extend from '../../../../extend';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport TreeMap from '../../../../java/util/TreeMap';\r\nexport default function EdgeList() {\r\n\tthis.edges = new ArrayList();\r\n\tthis.ocaMap = new TreeMap();\r\n}\r\nextend(EdgeList.prototype, {\r\n\tprint: function (out) {\r\n\t\tout.print(\"MULTILINESTRING ( \");\r\n\t\tfor (var j = 0; j < this.edges.size(); j++) {\r\n\t\t\tvar e = this.edges.get(j);\r\n\t\t\tif (j > 0) out.print(\",\");\r\n\t\t\tout.print(\"(\");\r\n\t\t\tvar pts = e.getCoordinates();\r\n\t\t\tfor (var i = 0; i < pts.length; i++) {\r\n\t\t\t\tif (i > 0) out.print(\",\");\r\n\t\t\t\tout.print(pts[i].x + \" \" + pts[i].y);\r\n\t\t\t}\r\n\t\t\tout.println(\")\");\r\n\t\t}\r\n\t\tout.print(\")  \");\r\n\t},\r\n\taddAll: function (edgeColl) {\r\n\t\tfor (var i = edgeColl.iterator(); i.hasNext(); ) {\r\n\t\t\tthis.add(i.next());\r\n\t\t}\r\n\t},\r\n\tfindEdgeIndex: function (e) {\r\n\t\tfor (var i = 0; i < this.edges.size(); i++) {\r\n\t\t\tif (this.edges.get(i).equals(e)) return i;\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\titerator: function () {\r\n\t\treturn this.edges.iterator();\r\n\t},\r\n\tgetEdges: function () {\r\n\t\treturn this.edges;\r\n\t},\r\n\tget: function (i) {\r\n\t\treturn this.edges.get(i);\r\n\t},\r\n\tfindEqualEdge: function (e) {\r\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\r\n\t\tvar matchEdge = this.ocaMap.get(oca);\r\n\t\treturn matchEdge;\r\n\t},\r\n\tadd: function (e) {\r\n\t\tthis.edges.add(e);\r\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\r\n\t\tthis.ocaMap.put(oca, e);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeList;\r\n\t}\r\n});\r\n","import PointLocator from '../../algorithm/PointLocator';\r\nimport Location from '../../geom/Location';\r\nimport EdgeNodingValidator from '../../geomgraph/EdgeNodingValidator';\r\nimport GeometryCollectionMapper from '../../geom/util/GeometryCollectionMapper';\r\nimport PolygonBuilder from './PolygonBuilder';\r\nimport Position from '../../geomgraph/Position';\r\nimport LineBuilder from './LineBuilder';\r\nimport PointBuilder from './PointBuilder';\r\nimport SnapIfNeededOverlayOp from './snap/SnapIfNeededOverlayOp';\r\nimport extend from '../../../../../extend';\r\nimport Label from '../../geomgraph/Label';\r\nimport OverlayNodeFactory from './OverlayNodeFactory';\r\nimport GeometryGraphOperation from '../GeometryGraphOperation';\r\nimport EdgeList from '../../geomgraph/EdgeList';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Assert from '../../util/Assert';\r\nimport inherits from '../../../../../inherits';\r\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\r\nexport default function OverlayOp() {\r\n\tthis.ptLocator = new PointLocator();\r\n\tthis.geomFact = null;\r\n\tthis.resultGeom = null;\r\n\tthis.graph = null;\r\n\tthis.edgeList = new EdgeList();\r\n\tthis.resultPolyList = new ArrayList();\r\n\tthis.resultLineList = new ArrayList();\r\n\tthis.resultPointList = new ArrayList();\r\n\tlet g0 = arguments[0], g1 = arguments[1];\r\n\tGeometryGraphOperation.call(this, g0, g1);\r\n\tthis.graph = new PlanarGraph(new OverlayNodeFactory());\r\n\tthis.geomFact = g0.getFactory();\r\n}\r\ninherits(OverlayOp, GeometryGraphOperation);\r\nextend(OverlayOp.prototype, {\r\n\tinsertUniqueEdge: function (e) {\r\n\t\tvar existingEdge = this.edgeList.findEqualEdge(e);\r\n\t\tif (existingEdge !== null) {\r\n\t\t\tvar existingLabel = existingEdge.getLabel();\r\n\t\t\tvar labelToMerge = e.getLabel();\r\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\r\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\r\n\t\t\t\tlabelToMerge.flip();\r\n\t\t\t}\r\n\t\t\tvar depth = existingEdge.getDepth();\r\n\t\t\tif (depth.isNull()) {\r\n\t\t\t\tdepth.add(existingLabel);\r\n\t\t\t}\r\n\t\t\tdepth.add(labelToMerge);\r\n\t\t\texistingLabel.merge(labelToMerge);\r\n\t\t} else {\r\n\t\t\tthis.edgeList.add(e);\r\n\t\t}\r\n\t},\r\n\tgetGraph: function () {\r\n\t\treturn this.graph;\r\n\t},\r\n\tcancelDuplicateResultEdges: function () {\r\n\t\tfor (var it = this.graph.getEdgeEnds().iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tvar sym = de.getSym();\r\n\t\t\tif (de.isInResult() && sym.isInResult()) {\r\n\t\t\t\tde.setInResult(false);\r\n\t\t\t\tsym.setInResult(false);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisCoveredByLA: function (coord) {\r\n\t\tif (this.isCovered(coord, this.resultLineList)) return true;\r\n\t\tif (this.isCovered(coord, this.resultPolyList)) return true;\r\n\t\treturn false;\r\n\t},\r\n\tcomputeGeometry: function (resultPointList, resultLineList, resultPolyList, opcode) {\r\n\t\tvar geomList = new ArrayList();\r\n\t\tgeomList.addAll(resultPointList);\r\n\t\tgeomList.addAll(resultLineList);\r\n\t\tgeomList.addAll(resultPolyList);\r\n\t\tif (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this.arg[0].getGeometry(), this.arg[1].getGeometry(), this.geomFact);\r\n\t\treturn this.geomFact.buildGeometry(geomList);\r\n\t},\r\n\tmergeSymLabels: function () {\r\n\t\tfor (var nodeit = this.graph.getNodes().iterator(); nodeit.hasNext(); ) {\r\n\t\t\tvar node = nodeit.next();\r\n\t\t\tnode.getEdges().mergeSymLabels();\r\n\t\t}\r\n\t},\r\n\tisCovered: function (coord, geomList) {\r\n\t\tfor (var it = geomList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar geom = it.next();\r\n\t\t\tvar loc = this.ptLocator.locate(coord, geom);\r\n\t\t\tif (loc !== Location.EXTERIOR) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\treplaceCollapsedEdges: function () {\r\n\t\tvar newEdges = new ArrayList();\r\n\t\tfor (var it = this.edgeList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tif (e.isCollapsed()) {\r\n\t\t\t\tit.remove();\r\n\t\t\t\tnewEdges.add(e.getCollapsedEdge());\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.edgeList.addAll(newEdges);\r\n\t},\r\n\tupdateNodeLabelling: function () {\r\n\t\tfor (var nodeit = this.graph.getNodes().iterator(); nodeit.hasNext(); ) {\r\n\t\t\tvar node = nodeit.next();\r\n\t\t\tvar lbl = node.getEdges().getLabel();\r\n\t\t\tnode.getLabel().merge(lbl);\r\n\t\t}\r\n\t},\r\n\tgetResultGeometry: function (overlayOpCode) {\r\n\t\tthis.computeOverlay(overlayOpCode);\r\n\t\treturn this.resultGeom;\r\n\t},\r\n\tinsertUniqueEdges: function (edges) {\r\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tthis.insertUniqueEdge(e);\r\n\t\t}\r\n\t},\r\n\tcomputeOverlay: function (opCode) {\r\n\t\tthis.copyPoints(0);\r\n\t\tthis.copyPoints(1);\r\n\t\tthis.arg[0].computeSelfNodes(this.li, false);\r\n\t\tthis.arg[1].computeSelfNodes(this.li, false);\r\n\t\tthis.arg[0].computeEdgeIntersections(this.arg[1], this.li, true);\r\n\t\tvar baseSplitEdges = new ArrayList();\r\n\t\tthis.arg[0].computeSplitEdges(baseSplitEdges);\r\n\t\tthis.arg[1].computeSplitEdges(baseSplitEdges);\r\n\t\tvar splitEdges = baseSplitEdges;\r\n\t\tthis.insertUniqueEdges(baseSplitEdges);\r\n\t\tthis.computeLabelsFromDepths();\r\n\t\tthis.replaceCollapsedEdges();\r\n\t\tEdgeNodingValidator.checkValid(this.edgeList.getEdges());\r\n\t\tthis.graph.addEdges(this.edgeList.getEdges());\r\n\t\tthis.computeLabelling();\r\n\t\tthis.labelIncompleteNodes();\r\n\t\tthis.findResultAreaEdges(opCode);\r\n\t\tthis.cancelDuplicateResultEdges();\r\n\t\tvar polyBuilder = new PolygonBuilder(this.geomFact);\r\n\t\tpolyBuilder.add(this.graph);\r\n\t\tthis.resultPolyList = polyBuilder.getPolygons();\r\n\t\tvar lineBuilder = new LineBuilder(this, this.geomFact, this.ptLocator);\r\n\t\tthis.resultLineList = lineBuilder.build(opCode);\r\n\t\tvar pointBuilder = new PointBuilder(this, this.geomFact, this.ptLocator);\r\n\t\tthis.resultPointList = pointBuilder.build(opCode);\r\n\t\tthis.resultGeom = this.computeGeometry(this.resultPointList, this.resultLineList, this.resultPolyList, opCode);\r\n\t},\r\n\tlabelIncompleteNode: function (n, targetIndex) {\r\n\t\tvar loc = this.ptLocator.locate(n.getCoordinate(), this.arg[targetIndex].getGeometry());\r\n\t\tn.getLabel().setLocation(targetIndex, loc);\r\n\t},\r\n\tcopyPoints: function (argIndex) {\r\n\t\tfor (var i = this.arg[argIndex].getNodeIterator(); i.hasNext(); ) {\r\n\t\t\tvar graphNode = i.next();\r\n\t\t\tvar newNode = this.graph.addNode(graphNode.getCoordinate());\r\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\r\n\t\t}\r\n\t},\r\n\tfindResultAreaEdges: function (opCode) {\r\n\t\tfor (var it = this.graph.getEdgeEnds().iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tvar label = de.getLabel();\r\n\t\t\tif (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\r\n\t\t\t\tde.setInResult(true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputeLabelsFromDepths: function () {\r\n\t\tfor (var it = this.edgeList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tvar lbl = e.getLabel();\r\n\t\t\tvar depth = e.getDepth();\r\n\t\t\tif (!depth.isNull()) {\r\n\t\t\t\tdepth.normalize();\r\n\t\t\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\t\t\tif (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\r\n\t\t\t\t\t\tif (depth.getDelta(i) === 0) {\r\n\t\t\t\t\t\t\tlbl.toLine(i);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.LEFT), \"depth of LEFT side has not been initialized\");\r\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\r\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.RIGHT), \"depth of RIGHT side has not been initialized\");\r\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputeLabelling: function () {\r\n\t\tfor (var nodeit = this.graph.getNodes().iterator(); nodeit.hasNext(); ) {\r\n\t\t\tvar node = nodeit.next();\r\n\t\t\tnode.getEdges().computeLabelling(this.arg);\r\n\t\t}\r\n\t\tthis.mergeSymLabels();\r\n\t\tthis.updateNodeLabelling();\r\n\t},\r\n\tlabelIncompleteNodes: function () {\r\n\t\tvar nodeCount = 0;\r\n\t\tfor (var ni = this.graph.getNodes().iterator(); ni.hasNext(); ) {\r\n\t\t\tvar n = ni.next();\r\n\t\t\tvar label = n.getLabel();\r\n\t\t\tif (n.isIsolated()) {\r\n\t\t\t\tnodeCount++;\r\n\t\t\t\tif (label.isNull(0)) this.labelIncompleteNode(n, 0); else this.labelIncompleteNode(n, 1);\r\n\t\t\t}\r\n\t\t\tn.getEdges().updateLabelling(label);\r\n\t\t}\r\n\t},\r\n\tisCoveredByA: function (coord) {\r\n\t\tif (this.isCovered(coord, this.resultPolyList)) return true;\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn OverlayOp;\r\n\t}\r\n});\r\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\r\n\tvar gov = new OverlayOp(geom0, geom1);\r\n\tvar geomOv = gov.getResultGeometry(opCode);\r\n\treturn geomOv;\r\n};\r\nOverlayOp.intersection = function (g, other) {\r\n\tif (g.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory());\r\n\tif (g.isGeometryCollection()) {\r\n\t\tvar g2 = other;\r\n\t\treturn GeometryCollectionMapper.map(g, {\r\n\t\t\tinterfaces_: function () {\r\n\t\t\t\treturn [MapOp];\r\n\t\t\t},\r\n\t\t\tmap: function (g) {\r\n\t\t\t\treturn g.intersection(g2);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tg.checkNotGeometryCollection(g);\r\n\tg.checkNotGeometryCollection(other);\r\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION);\r\n};\r\nOverlayOp.symDifference = function (g, other) {\r\n\tif (g.isEmpty() || other.isEmpty()) {\r\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory());\r\n\t\tif (g.isEmpty()) return other.copy();\r\n\t\tif (other.isEmpty()) return g.copy();\r\n\t}\r\n\tg.checkNotGeometryCollection(g);\r\n\tg.checkNotGeometryCollection(other);\r\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE);\r\n};\r\nOverlayOp.resultDimension = function (opCode, g0, g1) {\r\n\tvar dim0 = g0.getDimension();\r\n\tvar dim1 = g1.getDimension();\r\n\tvar resultDimension = -1;\r\n\tswitch (opCode) {\r\n\t\tcase OverlayOp.INTERSECTION:\r\n\t\t\tresultDimension = Math.min(dim0, dim1);\r\n\t\t\tbreak;\r\n\t\tcase OverlayOp.UNION:\r\n\t\t\tresultDimension = Math.max(dim0, dim1);\r\n\t\t\tbreak;\r\n\t\tcase OverlayOp.DIFFERENCE:\r\n\t\t\tresultDimension = dim0;\r\n\t\t\tbreak;\r\n\t\tcase OverlayOp.SYMDIFFERENCE:\r\n\t\t\tresultDimension = Math.max(dim0, dim1);\r\n\t\t\tbreak;\r\n\t}\r\n\treturn resultDimension;\r\n};\r\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\r\n\tvar result = null;\r\n\tswitch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\r\n\t\tcase -1:\r\n\t\t\tresult = geomFact.createGeometryCollection(new Array(0).fill(null));\r\n\t\t\tbreak;\r\n\t\tcase 0:\r\n\t\t\tresult = geomFact.createPoint();\r\n\t\t\tbreak;\r\n\t\tcase 1:\r\n\t\t\tresult = geomFact.createLineString();\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tresult = geomFact.createPolygon();\r\n\t\t\tbreak;\r\n\t}\r\n\treturn result;\r\n};\r\nOverlayOp.difference = function (g, other) {\r\n\tif (g.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory());\r\n\tif (other.isEmpty()) return g.copy();\r\n\tg.checkNotGeometryCollection(g);\r\n\tg.checkNotGeometryCollection(other);\r\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE);\r\n};\r\nOverlayOp.isResultOfOp = function () {\r\n\tif (arguments.length === 2) {\r\n\t\tlet label = arguments[0], opCode = arguments[1];\r\n\t\tvar loc0 = label.getLocation(0);\r\n\t\tvar loc1 = label.getLocation(1);\r\n\t\treturn OverlayOp.isResultOfOp(loc0, loc1, opCode);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet loc0 = arguments[0], loc1 = arguments[1], overlayOpCode = arguments[2];\r\n\t\tif (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR;\r\n\t\tif (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR;\r\n\t\tswitch (overlayOpCode) {\r\n\t\t\tcase OverlayOp.INTERSECTION:\r\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 === Location.INTERIOR;\r\n\t\t\tcase OverlayOp.UNION:\r\n\t\t\t\treturn loc0 === Location.INTERIOR || loc1 === Location.INTERIOR;\r\n\t\t\tcase OverlayOp.DIFFERENCE:\r\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR;\r\n\t\t\tcase OverlayOp.SYMDIFFERENCE:\r\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\nOverlayOp.INTERSECTION = 1;\r\nOverlayOp.UNION = 2;\r\nOverlayOp.DIFFERENCE = 3;\r\nOverlayOp.SYMDIFFERENCE = 4;\r\n","import GeometrySnapper from './GeometrySnapper';\r\nimport extend from '../../../../../../extend';\r\nimport System from '../../../../../../java/lang/System';\r\nimport CommonBitsRemover from '../../../precision/CommonBitsRemover';\r\nimport OverlayOp from '../OverlayOp';\r\nexport default function SnapOverlayOp() {\r\n\tthis.geom = new Array(2).fill(null);\r\n\tthis.snapTolerance = null;\r\n\tthis.cbr = null;\r\n\tlet g1 = arguments[0], g2 = arguments[1];\r\n\tthis.geom[0] = g1;\r\n\tthis.geom[1] = g2;\r\n\tthis.computeSnapTolerance();\r\n}\r\nextend(SnapOverlayOp.prototype, {\r\n\tselfSnap: function (geom) {\r\n\t\tvar snapper0 = new GeometrySnapper(geom);\r\n\t\tvar snapGeom = snapper0.snapTo(geom, this.snapTolerance);\r\n\t\treturn snapGeom;\r\n\t},\r\n\tremoveCommonBits: function (geom) {\r\n\t\tthis.cbr = new CommonBitsRemover();\r\n\t\tthis.cbr.add(geom[0]);\r\n\t\tthis.cbr.add(geom[1]);\r\n\t\tvar remGeom = new Array(2).fill(null);\r\n\t\tremGeom[0] = this.cbr.removeCommonBits(geom[0].copy());\r\n\t\tremGeom[1] = this.cbr.removeCommonBits(geom[1].copy());\r\n\t\treturn remGeom;\r\n\t},\r\n\tprepareResult: function (geom) {\r\n\t\tthis.cbr.addCommonBits(geom);\r\n\t\treturn geom;\r\n\t},\r\n\tgetResultGeometry: function (opCode) {\r\n\t\tvar prepGeom = this.snap(this.geom);\r\n\t\tvar result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\r\n\t\treturn this.prepareResult(result);\r\n\t},\r\n\tcheckValid: function (g) {\r\n\t\tif (!g.isValid()) {\r\n\t\t\tSystem.out.println(\"Snapped geometry is invalid\");\r\n\t\t}\r\n\t},\r\n\tcomputeSnapTolerance: function () {\r\n\t\tthis.snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this.geom[0], this.geom[1]);\r\n\t},\r\n\tsnap: function (geom) {\r\n\t\tvar remGeom = this.removeCommonBits(geom);\r\n\t\tvar snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this.snapTolerance);\r\n\t\treturn snapGeom;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SnapOverlayOp;\r\n\t}\r\n});\r\nSnapOverlayOp.overlayOp = function (g0, g1, opCode) {\r\n\tvar op = new SnapOverlayOp(g0, g1);\r\n\treturn op.getResultGeometry(opCode);\r\n};\r\nSnapOverlayOp.union = function (g0, g1) {\r\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\r\n};\r\nSnapOverlayOp.intersection = function (g0, g1) {\r\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\r\n};\r\nSnapOverlayOp.symDifference = function (g0, g1) {\r\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\r\n};\r\nSnapOverlayOp.difference = function (g0, g1) {\r\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\r\n};\r\n","import SnapOverlayOp from './SnapOverlayOp';\r\nimport extend from '../../../../../../extend';\r\nimport RuntimeException from '../../../../../../java/lang/RuntimeException';\r\nimport OverlayOp from '../OverlayOp';\r\nexport default function SnapIfNeededOverlayOp() {\r\n\tthis.geom = new Array(2).fill(null);\r\n\tlet g1 = arguments[0], g2 = arguments[1];\r\n\tthis.geom[0] = g1;\r\n\tthis.geom[1] = g2;\r\n}\r\nextend(SnapIfNeededOverlayOp.prototype, {\r\n\tgetResultGeometry: function (opCode) {\r\n\t\tvar result = null;\r\n\t\tvar isSuccess = false;\r\n\t\tvar savedException = null;\r\n\t\ttry {\r\n\t\t\tresult = OverlayOp.overlayOp(this.geom[0], this.geom[1], opCode);\r\n\t\t\tvar isValid = true;\r\n\t\t\tif (isValid) isSuccess = true;\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex instanceof RuntimeException) {\r\n\t\t\t\tsavedException = ex;\r\n\t\t\t} else throw ex;\r\n\t\t} finally {}\r\n\t\tif (!isSuccess) {\r\n\t\t\ttry {\r\n\t\t\t\tresult = SnapOverlayOp.overlayOp(this.geom[0], this.geom[1], opCode);\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tif (ex instanceof RuntimeException) {\r\n\t\t\t\t\tthrow savedException;\r\n\t\t\t\t} else throw ex;\r\n\t\t\t} finally {}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SnapIfNeededOverlayOp;\r\n\t}\r\n});\r\nSnapIfNeededOverlayOp.overlayOp = function (g0, g1, opCode) {\r\n\tvar op = new SnapIfNeededOverlayOp(g0, g1);\r\n\treturn op.getResultGeometry(opCode);\r\n};\r\nSnapIfNeededOverlayOp.union = function (g0, g1) {\r\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\r\n};\r\nSnapIfNeededOverlayOp.intersection = function (g0, g1) {\r\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\r\n};\r\nSnapIfNeededOverlayOp.symDifference = function (g0, g1) {\r\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\r\n};\r\nSnapIfNeededOverlayOp.difference = function (g0, g1) {\r\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\r\n};\r\n","import Geometry from '../geom/Geometry';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport Polygon from '../geom/Polygon';\r\nimport SnapIfNeededOverlayOp from '../operation/overlay/snap/SnapIfNeededOverlayOp';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport GeometryCollection from '../geom/GeometryCollection';\r\nimport OverlayOp from '../operation/overlay/OverlayOp';\r\nexport default function InteriorPointArea() {\r\n\tthis.factory = null;\r\n\tthis.interiorPoint = null;\r\n\tthis.maxWidth = 0.0;\r\n\tlet g = arguments[0];\r\n\tthis.factory = g.getFactory();\r\n\tthis.add(g);\r\n}\r\nextend(InteriorPointArea.prototype, {\r\n\taddPolygon: function (geometry) {\r\n\t\tif (geometry.isEmpty()) return null;\r\n\t\tvar intPt = null;\r\n\t\tvar width = 0;\r\n\t\tvar bisector = this.horizontalBisector(geometry);\r\n\t\tif (bisector.getLength() === 0.0) {\r\n\t\t\twidth = 0;\r\n\t\t\tintPt = bisector.getCoordinate();\r\n\t\t} else {\r\n\t\t\tvar intersections = SnapIfNeededOverlayOp.overlayOp(bisector, geometry, OverlayOp.INTERSECTION);\r\n\t\t\tvar widestIntersection = this.widestGeometry(intersections);\r\n\t\t\twidth = widestIntersection.getEnvelopeInternal().getWidth();\r\n\t\t\tintPt = InteriorPointArea.centre(widestIntersection.getEnvelopeInternal());\r\n\t\t}\r\n\t\tif (this.interiorPoint === null || width > this.maxWidth) {\r\n\t\t\tthis.interiorPoint = intPt;\r\n\t\t\tthis.maxWidth = width;\r\n\t\t}\r\n\t},\r\n\tgetInteriorPoint: function () {\r\n\t\treturn this.interiorPoint;\r\n\t},\r\n\twidestGeometry: function () {\r\n\t\tif (arguments[0] instanceof GeometryCollection) {\r\n\t\t\tlet gc = arguments[0];\r\n\t\t\tif (gc.isEmpty()) {\r\n\t\t\t\treturn gc;\r\n\t\t\t}\r\n\t\t\tvar widestGeometry = gc.getGeometryN(0);\r\n\t\t\tfor (var i = 1; i < gc.getNumGeometries(); i++) {\r\n\t\t\t\tif (gc.getGeometryN(i).getEnvelopeInternal().getWidth() > widestGeometry.getEnvelopeInternal().getWidth()) {\r\n\t\t\t\t\twidestGeometry = gc.getGeometryN(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn widestGeometry;\r\n\t\t} else if (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geometry = arguments[0];\r\n\t\t\tif (!(geometry instanceof GeometryCollection)) {\r\n\t\t\t\treturn geometry;\r\n\t\t\t}\r\n\t\t\treturn this.widestGeometry(geometry);\r\n\t\t}\r\n\t},\r\n\thorizontalBisector: function (geometry) {\r\n\t\tvar envelope = geometry.getEnvelopeInternal();\r\n\t\tvar bisectY = SafeBisectorFinder.getBisectorY(geometry);\r\n\t\treturn this.factory.createLineString([new Coordinate(envelope.getMinX(), bisectY), new Coordinate(envelope.getMaxX(), bisectY)]);\r\n\t},\r\n\tadd: function (geom) {\r\n\t\tif (geom instanceof Polygon) {\r\n\t\t\tthis.addPolygon(geom);\r\n\t\t} else if (geom instanceof GeometryCollection) {\r\n\t\t\tvar gc = geom;\r\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\r\n\t\t\t\tthis.add(gc.getGeometryN(i));\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn InteriorPointArea;\r\n\t}\r\n});\r\nInteriorPointArea.centre = function (envelope) {\r\n\treturn new Coordinate(InteriorPointArea.avg(envelope.getMinX(), envelope.getMaxX()), InteriorPointArea.avg(envelope.getMinY(), envelope.getMaxY()));\r\n};\r\nInteriorPointArea.avg = function (a, b) {\r\n\treturn (a + b) / 2.0;\r\n};\r\nfunction SafeBisectorFinder() {\r\n\tthis.poly = null;\r\n\tthis.centreY = null;\r\n\tthis.hiY = Double.MAX_VALUE;\r\n\tthis.loY = -Double.MAX_VALUE;\r\n\tlet poly = arguments[0];\r\n\tthis.poly = poly;\r\n\tthis.hiY = poly.getEnvelopeInternal().getMaxY();\r\n\tthis.loY = poly.getEnvelopeInternal().getMinY();\r\n\tthis.centreY = InteriorPointArea.avg(this.loY, this.hiY);\r\n}\r\nextend(SafeBisectorFinder.prototype, {\r\n\tupdateInterval: function (y) {\r\n\t\tif (y <= this.centreY) {\r\n\t\t\tif (y > this.loY) this.loY = y;\r\n\t\t} else if (y > this.centreY) {\r\n\t\t\tif (y < this.hiY) {\r\n\t\t\t\tthis.hiY = y;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetBisectorY: function () {\r\n\t\tthis.process(this.poly.getExteriorRing());\r\n\t\tfor (var i = 0; i < this.poly.getNumInteriorRing(); i++) {\r\n\t\t\tthis.process(this.poly.getInteriorRingN(i));\r\n\t\t}\r\n\t\tvar bisectY = InteriorPointArea.avg(this.hiY, this.loY);\r\n\t\treturn bisectY;\r\n\t},\r\n\tprocess: function (line) {\r\n\t\tvar seq = line.getCoordinateSequence();\r\n\t\tfor (var i = 0; i < seq.size(); i++) {\r\n\t\t\tvar y = seq.getY(i);\r\n\t\t\tthis.updateInterval(y);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SafeBisectorFinder;\r\n\t}\r\n});\r\nSafeBisectorFinder.getBisectorY = function (poly) {\r\n\tvar finder = new SafeBisectorFinder(poly);\r\n\treturn finder.getBisectorY();\r\n};\r\nInteriorPointArea.SafeBisectorFinder = SafeBisectorFinder;\r\n","import LineString from '../geom/LineString';\r\nimport Geometry from '../geom/Geometry';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport GeometryCollection from '../geom/GeometryCollection';\r\nexport default function InteriorPointLine() {\r\n\tthis.centroid = null;\r\n\tthis.minDistance = Double.MAX_VALUE;\r\n\tthis.interiorPoint = null;\r\n\tlet g = arguments[0];\r\n\tthis.centroid = g.getCentroid().getCoordinate();\r\n\tthis.addInterior(g);\r\n\tif (this.interiorPoint === null) this.addEndpoints(g);\r\n}\r\nextend(InteriorPointLine.prototype, {\r\n\taddEndpoints: function () {\r\n\t\tif (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geom = arguments[0];\r\n\t\t\tif (geom instanceof LineString) {\r\n\t\t\t\tthis.addEndpoints(geom.getCoordinates());\r\n\t\t\t} else if (geom instanceof GeometryCollection) {\r\n\t\t\t\tvar gc = geom;\r\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\r\n\t\t\t\t\tthis.addEndpoints(gc.getGeometryN(i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof Array) {\r\n\t\t\tlet pts = arguments[0];\r\n\t\t\tthis.add(pts[0]);\r\n\t\t\tthis.add(pts[pts.length - 1]);\r\n\t\t}\r\n\t},\r\n\tgetInteriorPoint: function () {\r\n\t\treturn this.interiorPoint;\r\n\t},\r\n\taddInterior: function () {\r\n\t\tif (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geom = arguments[0];\r\n\t\t\tif (geom instanceof LineString) {\r\n\t\t\t\tthis.addInterior(geom.getCoordinates());\r\n\t\t\t} else if (geom instanceof GeometryCollection) {\r\n\t\t\t\tvar gc = geom;\r\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\r\n\t\t\t\t\tthis.addInterior(gc.getGeometryN(i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof Array) {\r\n\t\t\tlet pts = arguments[0];\r\n\t\t\tfor (var i = 1; i < pts.length - 1; i++) {\r\n\t\t\t\tthis.add(pts[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tadd: function (point) {\r\n\t\tvar dist = point.distance(this.centroid);\r\n\t\tif (dist < this.minDistance) {\r\n\t\t\tthis.interiorPoint = new Coordinate(point);\r\n\t\t\tthis.minDistance = dist;\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn InteriorPointLine;\r\n\t}\r\n});\r\n","import Geometry from '../geom/Geometry';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport Point from '../geom/Point';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport GeometryCollection from '../geom/GeometryCollection';\r\nexport default function InteriorPointPoint() {\r\n\tthis.centroid = null;\r\n\tthis.minDistance = Double.MAX_VALUE;\r\n\tthis.interiorPoint = null;\r\n\tlet g = arguments[0];\r\n\tthis.centroid = g.getCentroid().getCoordinate();\r\n\tthis.add(g);\r\n}\r\nextend(InteriorPointPoint.prototype, {\r\n\tgetInteriorPoint: function () {\r\n\t\treturn this.interiorPoint;\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geom = arguments[0];\r\n\t\t\tif (geom instanceof Point) {\r\n\t\t\t\tthis.add(geom.getCoordinate());\r\n\t\t\t} else if (geom instanceof GeometryCollection) {\r\n\t\t\t\tvar gc = geom;\r\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\r\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet point = arguments[0];\r\n\t\t\tvar dist = point.distance(this.centroid);\r\n\t\t\tif (dist < this.minDistance) {\r\n\t\t\t\tthis.interiorPoint = new Coordinate(point);\r\n\t\t\t\tthis.minDistance = dist;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn InteriorPointPoint;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport LineSegment from '../../geom/LineSegment';\r\nimport Envelope from '../../geom/Envelope';\r\nexport default function MonotoneChainSelectAction() {\r\n\tthis.tempEnv1 = new Envelope();\r\n\tthis.selectedSegment = new LineSegment();\r\n}\r\nextend(MonotoneChainSelectAction.prototype, {\r\n\tselect: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet seg = arguments[0];\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\r\n\t\t\tmc.getLineSegment(startIndex, this.selectedSegment);\r\n\t\t\tthis.select(this.selectedSegment);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MonotoneChainSelectAction;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nexport default function NodeBase() {\r\n\tthis.items = new ArrayList();\r\n\tthis.subnode = [null, null];\r\n}\r\nextend(NodeBase.prototype, {\r\n\thasChildren: function () {\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tif (this.subnode[i] !== null) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tisPrunable: function () {\r\n\t\treturn !(this.hasChildren() || this.hasItems());\r\n\t},\r\n\taddAllItems: function (items) {\r\n\t\titems.addAll(this.items);\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tthis.subnode[i].addAllItems(items);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn items;\r\n\t},\r\n\tsize: function () {\r\n\t\tvar subSize = 0;\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tsubSize += this.subnode[i].size();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn subSize + this.items.size();\r\n\t},\r\n\taddAllItemsFromOverlapping: function (interval, resultItems) {\r\n\t\tif (interval !== null && !this.isSearchMatch(interval)) return null;\r\n\t\tresultItems.addAll(this.items);\r\n\t\tif (this.subnode[0] !== null) this.subnode[0].addAllItemsFromOverlapping(interval, resultItems);\r\n\t\tif (this.subnode[1] !== null) this.subnode[1].addAllItemsFromOverlapping(interval, resultItems);\r\n\t},\r\n\thasItems: function () {\r\n\t\treturn !this.items.isEmpty();\r\n\t},\r\n\tremove: function (itemInterval, item) {\r\n\t\tif (!this.isSearchMatch(itemInterval)) return false;\r\n\t\tvar found = false;\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tfound = this.subnode[i].remove(itemInterval, item);\r\n\t\t\t\tif (found) {\r\n\t\t\t\t\tif (this.subnode[i].isPrunable()) this.subnode[i] = null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (found) return found;\r\n\t\tfound = this.items.remove(item);\r\n\t\treturn found;\r\n\t},\r\n\tgetItems: function () {\r\n\t\treturn this.items;\r\n\t},\r\n\tdepth: function () {\r\n\t\tvar maxSubDepth = 0;\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tvar sqd = this.subnode[i].depth();\r\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxSubDepth + 1;\r\n\t},\r\n\tnodeSize: function () {\r\n\t\tvar subSize = 0;\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tsubSize += this.subnode[i].nodeSize();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn subSize + 1;\r\n\t},\r\n\tadd: function (item) {\r\n\t\tthis.items.add(item);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodeBase;\r\n\t}\r\n});\r\nNodeBase.getSubnodeIndex = function (interval, centre) {\r\n\tvar subnodeIndex = -1;\r\n\tif (interval.min >= centre) subnodeIndex = 1;\r\n\tif (interval.max <= centre) subnodeIndex = 0;\r\n\treturn subnodeIndex;\r\n};\r\n","import extend from '../../../../../extend';\r\nexport default function Interval() {\r\n\tthis.min = null;\r\n\tthis.max = null;\r\n\tif (arguments.length === 0) {\r\n\t\tthis.min = 0.0;\r\n\t\tthis.max = 0.0;\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet interval = arguments[0];\r\n\t\tthis.init(interval.min, interval.max);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet min = arguments[0], max = arguments[1];\r\n\t\tthis.init(min, max);\r\n\t}\r\n}\r\nextend(Interval.prototype, {\r\n\texpandToInclude: function (interval) {\r\n\t\tif (interval.max > this.max) this.max = interval.max;\r\n\t\tif (interval.min < this.min) this.min = interval.min;\r\n\t},\r\n\tgetWidth: function () {\r\n\t\treturn this.max - this.min;\r\n\t},\r\n\toverlaps: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet interval = arguments[0];\r\n\t\t\treturn this.overlaps(interval.min, interval.max);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet min = arguments[0], max = arguments[1];\r\n\t\t\tif (this.min > max || this.max < min) return false;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\tgetMin: function () {\r\n\t\treturn this.min;\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn \"[\" + this.min + \", \" + this.max + \"]\";\r\n\t},\r\n\tcontains: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Interval) {\r\n\t\t\t\tlet interval = arguments[0];\r\n\t\t\t\treturn this.contains(interval.min, interval.max);\r\n\t\t\t} else if (typeof arguments[0] === \"number\") {\r\n\t\t\t\tlet p = arguments[0];\r\n\t\t\t\treturn p >= this.min && p <= this.max;\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet min = arguments[0], max = arguments[1];\r\n\t\t\treturn min >= this.min && max <= this.max;\r\n\t\t}\r\n\t},\r\n\tinit: function (min, max) {\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\t\tif (min > max) {\r\n\t\t\tthis.min = max;\r\n\t\t\tthis.max = min;\r\n\t\t}\r\n\t},\r\n\tgetMax: function () {\r\n\t\treturn this.max;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Interval;\r\n\t}\r\n});\r\n","export default function DoubleBits () { }\r\nDoubleBits.exponent = function (d) {\r\n  return CVTFWD(64, d) - 1023\r\n}\r\nDoubleBits.powerOf2 = function (exp) {\r\n  return Math.pow(2, exp)\r\n}\r\n\r\n/**\r\n * Calculates the exponent of the bit-pattern for a number. Uses code from:\r\n * http://www.merlyn.demon.co.uk/js-exact.htm\r\n *\r\n * @param {Number}\r\n *          NumW 32 or 64 to denote the number of bits.\r\n * @param {Number}\r\n *          Qty the number to calculate the bit pattern for.\r\n * @return {Number} The integer value of the exponent.\r\n */\r\nfunction CVTFWD (NumW, Qty) {\r\n  var Sign\r\n  var Expo\r\n  var Mant\r\n  var Bin\r\n  var Inf = {\r\n    32: {\r\n      d: 0x7F,\r\n      c: 0x80,\r\n      b: 0,\r\n      a: 0\r\n    },\r\n    64: {\r\n      d: 0x7FF0,\r\n      c: 0,\r\n      b: 0,\r\n      a: 0\r\n    }\r\n  }\r\n  var ExW = {\r\n    32: 8,\r\n    64: 11\r\n  }[NumW]\r\n\r\n  if (!Bin) {\r\n    Sign = Qty < 0 || 1 / Qty < 0 // OK for +-0\r\n    if (!isFinite(Qty)) {\r\n      Bin = Inf[NumW]\r\n      if (Sign) {\r\n        Bin.d += 1 << (NumW / 4 - 1)\r\n      }\r\n      Expo = Math.pow(2, ExW) - 1\r\n      Mant = 0\r\n    }\r\n  }\r\n\r\n  if (!Bin) {\r\n    Expo = {\r\n      32: 127,\r\n      64: 1023\r\n    }[NumW]\r\n    Mant = Math.abs(Qty)\r\n    while (Mant >= 2) {\r\n      Expo++\r\n      Mant /= 2\r\n    }\r\n    while (Mant < 1 && Expo > 0) {\r\n      Expo--\r\n      Mant *= 2\r\n    }\r\n    if (Expo <= 0) {\r\n      Mant /= 2\r\n    }\r\n    if (NumW === 32 && Expo > 254) {\r\n      Bin = {\r\n        d: Sign ? 0xFF : 0x7F,\r\n        c: 0x80,\r\n        b: 0,\r\n        a: 0\r\n      }\r\n      Expo = Math.pow(2, ExW) - 1\r\n      Mant = 0\r\n    }\r\n  }\r\n\r\n  return Expo\r\n}\r\n","import Interval from './Interval';\r\nimport extend from '../../../../../extend';\r\nimport DoubleBits from '../quadtree/DoubleBits';\r\nexport default function Key() {\r\n\tthis.pt = 0.0;\r\n\tthis.level = 0;\r\n\tthis.interval = null;\r\n\tlet interval = arguments[0];\r\n\tthis.computeKey(interval);\r\n}\r\nextend(Key.prototype, {\r\n\tgetInterval: function () {\r\n\t\treturn this.interval;\r\n\t},\r\n\tgetLevel: function () {\r\n\t\treturn this.level;\r\n\t},\r\n\tcomputeKey: function (itemInterval) {\r\n\t\tthis.level = Key.computeLevel(itemInterval);\r\n\t\tthis.interval = new Interval();\r\n\t\tthis.computeInterval(this.level, itemInterval);\r\n\t\twhile (!this.interval.contains(itemInterval)) {\r\n\t\t\tthis.level += 1;\r\n\t\t\tthis.computeInterval(this.level, itemInterval);\r\n\t\t}\r\n\t},\r\n\tcomputeInterval: function (level, itemInterval) {\r\n\t\tvar size = DoubleBits.powerOf2(level);\r\n\t\tthis.pt = Math.floor(itemInterval.getMin() / size) * size;\r\n\t\tthis.interval.init(this.pt, this.pt + size);\r\n\t},\r\n\tgetPoint: function () {\r\n\t\treturn this.pt;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Key;\r\n\t}\r\n});\r\nKey.computeLevel = function (interval) {\r\n\tvar dx = interval.getWidth();\r\n\tvar level = DoubleBits.exponent(dx) + 1;\r\n\treturn level;\r\n};\r\n","import NodeBase from './NodeBase';\r\nimport Interval from './Interval';\r\nimport extend from '../../../../../extend';\r\nimport Assert from '../../util/Assert';\r\nimport inherits from '../../../../../inherits';\r\nimport Key from './Key';\r\nexport default function Node() {\r\n\tNodeBase.apply(this);\r\n\tthis.interval = null;\r\n\tthis.centre = null;\r\n\tthis.level = null;\r\n\tlet interval = arguments[0], level = arguments[1];\r\n\tthis.interval = interval;\r\n\tthis.level = level;\r\n\tthis.centre = (interval.getMin() + interval.getMax()) / 2;\r\n}\r\ninherits(Node, NodeBase);\r\nextend(Node.prototype, {\r\n\tgetInterval: function () {\r\n\t\treturn this.interval;\r\n\t},\r\n\tfind: function (searchInterval) {\r\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this.centre);\r\n\t\tif (subnodeIndex === -1) return this;\r\n\t\tif (this.subnode[subnodeIndex] !== null) {\r\n\t\t\tvar node = this.subnode[subnodeIndex];\r\n\t\t\treturn node.find(searchInterval);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\tinsert: function (node) {\r\n\t\tAssert.isTrue(this.interval === null || this.interval.contains(node.interval));\r\n\t\tvar index = NodeBase.getSubnodeIndex(node.interval, this.centre);\r\n\t\tif (node.level === this.level - 1) {\r\n\t\t\tthis.subnode[index] = node;\r\n\t\t} else {\r\n\t\t\tvar childNode = this.createSubnode(index);\r\n\t\t\tchildNode.insert(node);\r\n\t\t\tthis.subnode[index] = childNode;\r\n\t\t}\r\n\t},\r\n\tisSearchMatch: function (itemInterval) {\r\n\t\treturn itemInterval.overlaps(this.interval);\r\n\t},\r\n\tgetSubnode: function (index) {\r\n\t\tif (this.subnode[index] === null) {\r\n\t\t\tthis.subnode[index] = this.createSubnode(index);\r\n\t\t}\r\n\t\treturn this.subnode[index];\r\n\t},\r\n\tgetNode: function (searchInterval) {\r\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this.centre);\r\n\t\tif (subnodeIndex !== -1) {\r\n\t\t\tvar node = this.getSubnode(subnodeIndex);\r\n\t\t\treturn node.getNode(searchInterval);\r\n\t\t} else {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\tcreateSubnode: function (index) {\r\n\t\tvar min = 0.0;\r\n\t\tvar max = 0.0;\r\n\t\tswitch (index) {\r\n\t\t\tcase 0:\r\n\t\t\t\tmin = this.interval.getMin();\r\n\t\t\t\tmax = this.centre;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tmin = this.centre;\r\n\t\t\t\tmax = this.interval.getMax();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tvar subInt = new Interval(min, max);\r\n\t\tvar node = new Node(subInt, this.level - 1);\r\n\t\treturn node;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Node;\r\n\t}\r\n});\r\nNode.createNode = function (itemInterval) {\r\n\tvar key = new Key(itemInterval);\r\n\tvar node = new Node(key.getInterval(), key.getLevel());\r\n\treturn node;\r\n};\r\nNode.createExpanded = function (node, addInterval) {\r\n\tvar expandInt = new Interval(addInterval);\r\n\tif (node !== null) expandInt.expandToInclude(node.interval);\r\n\tvar largerNode = Node.createNode(expandInt);\r\n\tif (node !== null) largerNode.insert(node);\r\n\treturn largerNode;\r\n};\r\n","import extend from '../../../../../extend';\r\nimport DoubleBits from './DoubleBits';\r\nexport default function IntervalSize() {}\r\nextend(IntervalSize.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IntervalSize;\r\n\t}\r\n});\r\nIntervalSize.isZeroWidth = function (min, max) {\r\n\tvar width = max - min;\r\n\tif (width === 0.0) return true;\r\n\tvar maxAbs = Math.max(Math.abs(min), Math.abs(max));\r\n\tvar scaledInterval = width / maxAbs;\r\n\tvar level = DoubleBits.exponent(scaledInterval);\r\n\treturn level <= IntervalSize.MIN_BINARY_EXPONENT;\r\n};\r\nIntervalSize.MIN_BINARY_EXPONENT = -50;\r\n","import NodeBase from './NodeBase';\r\nimport Node from './Node';\r\nimport extend from '../../../../../extend';\r\nimport IntervalSize from '../quadtree/IntervalSize';\r\nimport Assert from '../../util/Assert';\r\nimport inherits from '../../../../../inherits';\r\nexport default function Root() {\r\n\tNodeBase.apply(this);\r\n}\r\ninherits(Root, NodeBase);\r\nextend(Root.prototype, {\r\n\tinsert: function (itemInterval, item) {\r\n\t\tvar index = NodeBase.getSubnodeIndex(itemInterval, Root.origin);\r\n\t\tif (index === -1) {\r\n\t\t\tthis.add(item);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar node = this.subnode[index];\r\n\t\tif (node === null || !node.getInterval().contains(itemInterval)) {\r\n\t\t\tvar largerNode = Node.createExpanded(node, itemInterval);\r\n\t\t\tthis.subnode[index] = largerNode;\r\n\t\t}\r\n\t\tthis.insertContained(this.subnode[index], itemInterval, item);\r\n\t},\r\n\tisSearchMatch: function (interval) {\r\n\t\treturn true;\r\n\t},\r\n\tinsertContained: function (tree, itemInterval, item) {\r\n\t\tAssert.isTrue(tree.getInterval().contains(itemInterval));\r\n\t\tvar isZeroArea = IntervalSize.isZeroWidth(itemInterval.getMin(), itemInterval.getMax());\r\n\t\tvar node = null;\r\n\t\tif (isZeroArea) node = tree.find(itemInterval); else node = tree.getNode(itemInterval);\r\n\t\tnode.add(item);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Root;\r\n\t}\r\n});\r\nRoot.origin = 0.0;\r\n","import Root from './Root';\r\nimport Interval from './Interval';\r\nimport extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nexport default function Bintree() {\r\n\tthis.root = null;\r\n\tthis.minExtent = 1.0;\r\n\tthis.root = new Root();\r\n}\r\nextend(Bintree.prototype, {\r\n\tsize: function () {\r\n\t\tif (this.root !== null) return this.root.size();\r\n\t\treturn 0;\r\n\t},\r\n\tinsert: function (itemInterval, item) {\r\n\t\tthis.collectStats(itemInterval);\r\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this.minExtent);\r\n\t\tthis.root.insert(insertInterval, item);\r\n\t},\r\n\tquery: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (typeof arguments[0] === \"number\") {\r\n\t\t\t\tlet x = arguments[0];\r\n\t\t\t\treturn this.query(new Interval(x, x));\r\n\t\t\t} else if (arguments[0] instanceof Interval) {\r\n\t\t\t\tlet interval = arguments[0];\r\n\t\t\t\tvar foundItems = new ArrayList();\r\n\t\t\t\tthis.query(interval, foundItems);\r\n\t\t\t\treturn foundItems;\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet interval = arguments[0], foundItems = arguments[1];\r\n\t\t\tthis.root.addAllItemsFromOverlapping(interval, foundItems);\r\n\t\t}\r\n\t},\r\n\titerator: function () {\r\n\t\tvar foundItems = new ArrayList();\r\n\t\tthis.root.addAllItems(foundItems);\r\n\t\treturn foundItems.iterator();\r\n\t},\r\n\tremove: function (itemInterval, item) {\r\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this.minExtent);\r\n\t\treturn this.root.remove(insertInterval, item);\r\n\t},\r\n\tcollectStats: function (interval) {\r\n\t\tvar del = interval.getWidth();\r\n\t\tif (del < this.minExtent && del > 0.0) this.minExtent = del;\r\n\t},\r\n\tdepth: function () {\r\n\t\tif (this.root !== null) return this.root.depth();\r\n\t\treturn 0;\r\n\t},\r\n\tnodeSize: function () {\r\n\t\tif (this.root !== null) return this.root.nodeSize();\r\n\t\treturn 0;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Bintree;\r\n\t}\r\n});\r\nBintree.ensureExtent = function (itemInterval, minExtent) {\r\n\tvar min = itemInterval.getMin();\r\n\tvar max = itemInterval.getMax();\r\n\tif (min !== max) return itemInterval;\r\n\tif (min === max) {\r\n\t\tmin = min - minExtent / 2.0;\r\n\t\tmax = min + minExtent / 2.0;\r\n\t}\r\n\treturn new Interval(min, max);\r\n};\r\n","import extend from '../../../../extend';\r\nexport default function PointInRing() {}\r\nextend(PointInRing.prototype, {\r\n\tisInside: function (pt) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PointInRing;\r\n\t}\r\n});\r\n","import MonotoneChainSelectAction from '../index/chain/MonotoneChainSelectAction';\r\nimport Bintree from '../index/bintree/Bintree';\r\nimport Interval from '../index/bintree/Interval';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder';\r\nimport CoordinateArrays from '../geom/CoordinateArrays';\r\nimport RobustDeterminant from './RobustDeterminant';\r\nimport Envelope from '../geom/Envelope';\r\nimport inherits from '../../../../inherits';\r\nimport PointInRing from './PointInRing';\r\nexport default function MCPointInRing() {\r\n\tthis.ring = null;\r\n\tthis.tree = null;\r\n\tthis.crossings = 0;\r\n\tthis.interval = new Interval();\r\n\tlet ring = arguments[0];\r\n\tthis.ring = ring;\r\n\tthis.buildIndex();\r\n}\r\nextend(MCPointInRing.prototype, {\r\n\ttestLineSegment: function (p, seg) {\r\n\t\tvar xInt = null;\r\n\t\tvar x1 = null;\r\n\t\tvar y1 = null;\r\n\t\tvar x2 = null;\r\n\t\tvar y2 = null;\r\n\t\tvar p1 = seg.p0;\r\n\t\tvar p2 = seg.p1;\r\n\t\tx1 = p1.x - p.x;\r\n\t\ty1 = p1.y - p.y;\r\n\t\tx2 = p2.x - p.x;\r\n\t\ty2 = p2.y - p.y;\r\n\t\tif (y1 > 0 && y2 <= 0 || y2 > 0 && y1 <= 0) {\r\n\t\t\txInt = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2) / (y2 - y1);\r\n\t\t\tif (0.0 < xInt) {\r\n\t\t\t\tthis.crossings++;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tbuildIndex: function () {\r\n\t\tthis.tree = new Bintree();\r\n\t\tvar pts = CoordinateArrays.removeRepeatedPoints(this.ring.getCoordinates());\r\n\t\tvar mcList = MonotoneChainBuilder.getChains(pts);\r\n\t\tfor (var i = 0; i < mcList.size(); i++) {\r\n\t\t\tvar mc = mcList.get(i);\r\n\t\t\tvar mcEnv = mc.getEnvelope();\r\n\t\t\tthis.interval.min = mcEnv.getMinY();\r\n\t\t\tthis.interval.max = mcEnv.getMaxY();\r\n\t\t\tthis.tree.insert(this.interval, mc);\r\n\t\t}\r\n\t},\r\n\ttestMonotoneChain: function (rayEnv, mcSelecter, mc) {\r\n\t\tmc.select(rayEnv, mcSelecter);\r\n\t},\r\n\tisInside: function (pt) {\r\n\t\tthis.crossings = 0;\r\n\t\tvar rayEnv = new Envelope(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, pt.y, pt.y);\r\n\t\tthis.interval.min = pt.y;\r\n\t\tthis.interval.max = pt.y;\r\n\t\tvar segs = this.tree.query(this.interval);\r\n\t\tvar mcSelecter = new MCSelecter(this, pt);\r\n\t\tfor (var i = segs.iterator(); i.hasNext(); ) {\r\n\t\t\tvar mc = i.next();\r\n\t\t\tthis.testMonotoneChain(rayEnv, mcSelecter, mc);\r\n\t\t}\r\n\t\tif (this.crossings % 2 === 1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [PointInRing];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MCPointInRing;\r\n\t}\r\n});\r\nfunction MCSelecter() {\r\n\tMonotoneChainSelectAction.apply(this);\r\n\tthis.mcp = null;\r\n\tthis.p = null;\r\n\tlet mcp = arguments[0], p = arguments[1];\r\n\tthis.mcp = mcp;\r\n\tthis.p = p;\r\n}\r\ninherits(MCSelecter, MonotoneChainSelectAction);\r\nextend(MCSelecter.prototype, {\r\n\tselect: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet ls = arguments[0];\r\n\t\t\tthis.mcp.testLineSegment(this.p, ls);\r\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MCSelecter;\r\n\t}\r\n});\r\nMCPointInRing.MCSelecter = MCSelecter;\r\n","import CGAlgorithms from './CGAlgorithms';\r\nimport extend from '../../../../extend';\r\nexport default function Angle() {}\r\nextend(Angle.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Angle;\r\n\t}\r\n});\r\nAngle.toDegrees = function (radians) {\r\n\treturn radians * 180 / Math.PI;\r\n};\r\nAngle.normalize = function (angle) {\r\n\twhile (angle > Math.PI) angle -= Angle.PI_TIMES_2;\r\n\twhile (angle <= -Math.PI) angle += Angle.PI_TIMES_2;\r\n\treturn angle;\r\n};\r\nAngle.angle = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet p = arguments[0];\r\n\t\treturn Math.atan2(p.y, p.x);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet p0 = arguments[0], p1 = arguments[1];\r\n\t\tvar dx = p1.x - p0.x;\r\n\t\tvar dy = p1.y - p0.y;\r\n\t\treturn Math.atan2(dy, dx);\r\n\t}\r\n};\r\nAngle.isAcute = function (p0, p1, p2) {\r\n\tvar dx0 = p0.x - p1.x;\r\n\tvar dy0 = p0.y - p1.y;\r\n\tvar dx1 = p2.x - p1.x;\r\n\tvar dy1 = p2.y - p1.y;\r\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\r\n\treturn dotprod > 0;\r\n};\r\nAngle.isObtuse = function (p0, p1, p2) {\r\n\tvar dx0 = p0.x - p1.x;\r\n\tvar dy0 = p0.y - p1.y;\r\n\tvar dx1 = p2.x - p1.x;\r\n\tvar dy1 = p2.y - p1.y;\r\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\r\n\treturn dotprod < 0;\r\n};\r\nAngle.interiorAngle = function (p0, p1, p2) {\r\n\tvar anglePrev = Angle.angle(p1, p0);\r\n\tvar angleNext = Angle.angle(p1, p2);\r\n\treturn Math.abs(angleNext - anglePrev);\r\n};\r\nAngle.normalizePositive = function (angle) {\r\n\tif (angle < 0.0) {\r\n\t\twhile (angle < 0.0) angle += Angle.PI_TIMES_2;\r\n\t\tif (angle >= Angle.PI_TIMES_2) angle = 0.0;\r\n\t} else {\r\n\t\twhile (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2;\r\n\t\tif (angle < 0.0) angle = 0.0;\r\n\t}\r\n\treturn angle;\r\n};\r\nAngle.angleBetween = function (tip1, tail, tip2) {\r\n\tvar a1 = Angle.angle(tail, tip1);\r\n\tvar a2 = Angle.angle(tail, tip2);\r\n\treturn Angle.diff(a1, a2);\r\n};\r\nAngle.diff = function (ang1, ang2) {\r\n\tvar delAngle = null;\r\n\tif (ang1 < ang2) {\r\n\t\tdelAngle = ang2 - ang1;\r\n\t} else {\r\n\t\tdelAngle = ang1 - ang2;\r\n\t}\r\n\tif (delAngle > Math.PI) {\r\n\t\tdelAngle = 2 * Math.PI - delAngle;\r\n\t}\r\n\treturn delAngle;\r\n};\r\nAngle.toRadians = function (angleDegrees) {\r\n\treturn angleDegrees * Math.PI / 180.0;\r\n};\r\nAngle.getTurn = function (ang1, ang2) {\r\n\tvar crossproduct = Math.sin(ang2 - ang1);\r\n\tif (crossproduct > 0) {\r\n\t\treturn Angle.COUNTERCLOCKWISE;\r\n\t}\r\n\tif (crossproduct < 0) {\r\n\t\treturn Angle.CLOCKWISE;\r\n\t}\r\n\treturn Angle.NONE;\r\n};\r\nAngle.angleBetweenOriented = function (tip1, tail, tip2) {\r\n\tvar a1 = Angle.angle(tail, tip1);\r\n\tvar a2 = Angle.angle(tail, tip2);\r\n\tvar angDel = a2 - a1;\r\n\tif (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2;\r\n\tif (angDel > Math.PI) return angDel - Angle.PI_TIMES_2;\r\n\treturn angDel;\r\n};\r\nAngle.PI_TIMES_2 = 2.0 * Math.PI;\r\nAngle.PI_OVER_2 = Math.PI / 2.0;\r\nAngle.PI_OVER_4 = Math.PI / 4.0;\r\nAngle.COUNTERCLOCKWISE = CGAlgorithms.COUNTERCLOCKWISE;\r\nAngle.CLOCKWISE = CGAlgorithms.CLOCKWISE;\r\nAngle.NONE = CGAlgorithms.COLLINEAR;\r\n","import Coordinate from './Coordinate';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport Angle from '../algorithm/Angle';\r\nimport HCoordinate from '../algorithm/HCoordinate';\r\nexport default function Triangle() {\r\n\tthis.p0 = null;\r\n\tthis.p1 = null;\r\n\tthis.p2 = null;\r\n\tlet p0 = arguments[0], p1 = arguments[1], p2 = arguments[2];\r\n\tthis.p0 = p0;\r\n\tthis.p1 = p1;\r\n\tthis.p2 = p2;\r\n}\r\nextend(Triangle.prototype, {\r\n\tarea: function () {\r\n\t\treturn Triangle.area(this.p0, this.p1, this.p2);\r\n\t},\r\n\tsignedArea: function () {\r\n\t\treturn Triangle.signedArea(this.p0, this.p1, this.p2);\r\n\t},\r\n\tinterpolateZ: function (p) {\r\n\t\tif (p === null) throw new IllegalArgumentException(\"Supplied point is null.\");\r\n\t\treturn Triangle.interpolateZ(p, this.p0, this.p1, this.p2);\r\n\t},\r\n\tlongestSideLength: function () {\r\n\t\treturn Triangle.longestSideLength(this.p0, this.p1, this.p2);\r\n\t},\r\n\tisAcute: function () {\r\n\t\treturn Triangle.isAcute(this.p0, this.p1, this.p2);\r\n\t},\r\n\tcircumcentre: function () {\r\n\t\treturn Triangle.circumcentre(this.p0, this.p1, this.p2);\r\n\t},\r\n\tarea3D: function () {\r\n\t\treturn Triangle.area3D(this.p0, this.p1, this.p2);\r\n\t},\r\n\tcentroid: function () {\r\n\t\treturn Triangle.centroid(this.p0, this.p1, this.p2);\r\n\t},\r\n\tinCentre: function () {\r\n\t\treturn Triangle.inCentre(this.p0, this.p1, this.p2);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Triangle;\r\n\t}\r\n});\r\nTriangle.area = function (a, b, c) {\r\n\treturn Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2);\r\n};\r\nTriangle.signedArea = function (a, b, c) {\r\n\treturn ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2;\r\n};\r\nTriangle.det = function (m00, m01, m10, m11) {\r\n\treturn m00 * m11 - m01 * m10;\r\n};\r\nTriangle.interpolateZ = function (p, v0, v1, v2) {\r\n\tvar x0 = v0.x;\r\n\tvar y0 = v0.y;\r\n\tvar a = v1.x - x0;\r\n\tvar b = v2.x - x0;\r\n\tvar c = v1.y - y0;\r\n\tvar d = v2.y - y0;\r\n\tvar det = a * d - b * c;\r\n\tvar dx = p.x - x0;\r\n\tvar dy = p.y - y0;\r\n\tvar t = (d * dx - b * dy) / det;\r\n\tvar u = (-c * dx + a * dy) / det;\r\n\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\r\n\treturn z;\r\n};\r\nTriangle.longestSideLength = function (a, b, c) {\r\n\tvar lenAB = a.distance(b);\r\n\tvar lenBC = b.distance(c);\r\n\tvar lenCA = c.distance(a);\r\n\tvar maxLen = lenAB;\r\n\tif (lenBC > maxLen) maxLen = lenBC;\r\n\tif (lenCA > maxLen) maxLen = lenCA;\r\n\treturn maxLen;\r\n};\r\nTriangle.isAcute = function (a, b, c) {\r\n\tif (!Angle.isAcute(a, b, c)) return false;\r\n\tif (!Angle.isAcute(b, c, a)) return false;\r\n\tif (!Angle.isAcute(c, a, b)) return false;\r\n\treturn true;\r\n};\r\nTriangle.circumcentre = function (a, b, c) {\r\n\tvar cx = c.x;\r\n\tvar cy = c.y;\r\n\tvar ax = a.x - cx;\r\n\tvar ay = a.y - cy;\r\n\tvar bx = b.x - cx;\r\n\tvar by = b.y - cy;\r\n\tvar denom = 2 * Triangle.det(ax, ay, bx, by);\r\n\tvar numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\r\n\tvar numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\r\n\tvar ccx = cx - numx / denom;\r\n\tvar ccy = cy + numy / denom;\r\n\treturn new Coordinate(ccx, ccy);\r\n};\r\nTriangle.perpendicularBisector = function (a, b) {\r\n\tvar dx = b.x - a.x;\r\n\tvar dy = b.y - a.y;\r\n\tvar l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\r\n\tvar l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\r\n\treturn new HCoordinate(l1, l2);\r\n};\r\nTriangle.angleBisector = function (a, b, c) {\r\n\tvar len0 = b.distance(a);\r\n\tvar len2 = b.distance(c);\r\n\tvar frac = len0 / (len0 + len2);\r\n\tvar dx = c.x - a.x;\r\n\tvar dy = c.y - a.y;\r\n\tvar splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\r\n\treturn splitPt;\r\n};\r\nTriangle.area3D = function (a, b, c) {\r\n\tvar ux = b.x - a.x;\r\n\tvar uy = b.y - a.y;\r\n\tvar uz = b.z - a.z;\r\n\tvar vx = c.x - a.x;\r\n\tvar vy = c.y - a.y;\r\n\tvar vz = c.z - a.z;\r\n\tvar crossx = uy * vz - uz * vy;\r\n\tvar crossy = uz * vx - ux * vz;\r\n\tvar crossz = ux * vy - uy * vx;\r\n\tvar absSq = crossx * crossx + crossy * crossy + crossz * crossz;\r\n\tvar area3D = Math.sqrt(absSq) / 2;\r\n\treturn area3D;\r\n};\r\nTriangle.centroid = function (a, b, c) {\r\n\tvar x = (a.x + b.x + c.x) / 3;\r\n\tvar y = (a.y + b.y + c.y) / 3;\r\n\treturn new Coordinate(x, y);\r\n};\r\nTriangle.inCentre = function (a, b, c) {\r\n\tvar len0 = b.distance(c);\r\n\tvar len1 = a.distance(c);\r\n\tvar len2 = a.distance(b);\r\n\tvar circum = len0 + len1 + len2;\r\n\tvar inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\r\n\tvar inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\r\n\treturn new Coordinate(inCentreX, inCentreY);\r\n};\r\n","import Coordinate from '../geom/Coordinate';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport CoordinateArrays from '../geom/CoordinateArrays';\r\nimport Angle from './Angle';\r\nimport Assert from '../util/Assert';\r\nimport Triangle from '../geom/Triangle';\r\nexport default function MinimumBoundingCircle() {\r\n\tthis.input = null;\r\n\tthis.extremalPts = null;\r\n\tthis.centre = null;\r\n\tthis.radius = 0.0;\r\n\tlet geom = arguments[0];\r\n\tthis.input = geom;\r\n}\r\nextend(MinimumBoundingCircle.prototype, {\r\n\tgetRadius: function () {\r\n\t\tthis.compute();\r\n\t\treturn this.radius;\r\n\t},\r\n\tgetDiameter: function () {\r\n\t\tthis.compute();\r\n\t\tswitch (this.extremalPts.length) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn this.input.getFactory().createLineString();\r\n\t\t\tcase 1:\r\n\t\t\t\treturn this.input.getFactory().createPoint(this.centre);\r\n\t\t}\r\n\t\tvar p0 = this.extremalPts[0];\r\n\t\tvar p1 = this.extremalPts[1];\r\n\t\treturn this.input.getFactory().createLineString([p0, p1]);\r\n\t},\r\n\tgetExtremalPoints: function () {\r\n\t\tthis.compute();\r\n\t\treturn this.extremalPts;\r\n\t},\r\n\tcomputeCirclePoints: function () {\r\n\t\tif (this.input.isEmpty()) {\r\n\t\t\tthis.extremalPts = new Array(0).fill(null);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (this.input.getNumPoints() === 1) {\r\n\t\t\tvar pts = this.input.getCoordinates();\r\n\t\t\tthis.extremalPts = [new Coordinate(pts[0])];\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar convexHull = this.input.convexHull();\r\n\t\tvar hullPts = convexHull.getCoordinates();\r\n\t\tvar pts = hullPts;\r\n\t\tif (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\r\n\t\t\tpts = new Array(hullPts.length - 1).fill(null);\r\n\t\t\tCoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1);\r\n\t\t}\r\n\t\tif (pts.length <= 2) {\r\n\t\t\tthis.extremalPts = CoordinateArrays.copyDeep(pts);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar P = MinimumBoundingCircle.lowestPoint(pts);\r\n\t\tvar Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P);\r\n\t\tfor (var i = 0; i < pts.length; i++) {\r\n\t\t\tvar R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q);\r\n\t\t\tif (Angle.isObtuse(P, R, Q)) {\r\n\t\t\t\tthis.extremalPts = [new Coordinate(P), new Coordinate(Q)];\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (Angle.isObtuse(R, P, Q)) {\r\n\t\t\t\tP = R;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (Angle.isObtuse(R, Q, P)) {\r\n\t\t\t\tQ = R;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)];\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tAssert.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\");\r\n\t},\r\n\tcompute: function () {\r\n\t\tif (this.extremalPts !== null) return null;\r\n\t\tthis.computeCirclePoints();\r\n\t\tthis.computeCentre();\r\n\t\tif (this.centre !== null) this.radius = this.centre.distance(this.extremalPts[0]);\r\n\t},\r\n\tgetFarthestPoints: function () {\r\n\t\tthis.compute();\r\n\t\tswitch (this.extremalPts.length) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn this.input.getFactory().createLineString();\r\n\t\t\tcase 1:\r\n\t\t\t\treturn this.input.getFactory().createPoint(this.centre);\r\n\t\t}\r\n\t\tvar p0 = this.extremalPts[0];\r\n\t\tvar p1 = this.extremalPts[this.extremalPts.length - 1];\r\n\t\treturn this.input.getFactory().createLineString([p0, p1]);\r\n\t},\r\n\tgetCircle: function () {\r\n\t\tthis.compute();\r\n\t\tif (this.centre === null) return this.input.getFactory().createPolygon();\r\n\t\tvar centrePoint = this.input.getFactory().createPoint(this.centre);\r\n\t\tif (this.radius === 0.0) return centrePoint;\r\n\t\treturn centrePoint.buffer(this.radius);\r\n\t},\r\n\tgetCentre: function () {\r\n\t\tthis.compute();\r\n\t\treturn this.centre;\r\n\t},\r\n\tcomputeCentre: function () {\r\n\t\tswitch (this.extremalPts.length) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.centre = null;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.centre = this.extremalPts[0];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.centre = new Coordinate((this.extremalPts[0].x + this.extremalPts[1].x) / 2.0, (this.extremalPts[0].y + this.extremalPts[1].y) / 2.0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.centre = Triangle.circumcentre(this.extremalPts[0], this.extremalPts[1], this.extremalPts[2]);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MinimumBoundingCircle;\r\n\t}\r\n});\r\nMinimumBoundingCircle.pointWitMinAngleWithX = function (pts, P) {\r\n\tvar minSin = Double.MAX_VALUE;\r\n\tvar minAngPt = null;\r\n\tfor (var i = 0; i < pts.length; i++) {\r\n\t\tvar p = pts[i];\r\n\t\tif (p === P) continue;\r\n\t\tvar dx = p.x - P.x;\r\n\t\tvar dy = p.y - P.y;\r\n\t\tif (dy < 0) dy = -dy;\r\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\r\n\t\tvar sin = dy / len;\r\n\t\tif (sin < minSin) {\r\n\t\t\tminSin = sin;\r\n\t\t\tminAngPt = p;\r\n\t\t}\r\n\t}\r\n\treturn minAngPt;\r\n};\r\nMinimumBoundingCircle.lowestPoint = function (pts) {\r\n\tvar min = pts[0];\r\n\tfor (var i = 1; i < pts.length; i++) {\r\n\t\tif (pts[i].y < min.y) min = pts[i];\r\n\t}\r\n\treturn min;\r\n};\r\nMinimumBoundingCircle.pointWithMinAngleWithSegment = function (pts, P, Q) {\r\n\tvar minAng = Double.MAX_VALUE;\r\n\tvar minAngPt = null;\r\n\tfor (var i = 0; i < pts.length; i++) {\r\n\t\tvar p = pts[i];\r\n\t\tif (p === P) continue;\r\n\t\tif (p === Q) continue;\r\n\t\tvar ang = Angle.angleBetween(P, p, Q);\r\n\t\tif (ang < minAng) {\r\n\t\t\tminAng = ang;\r\n\t\t\tminAngPt = p;\r\n\t\t}\r\n\t}\r\n\treturn minAngPt;\r\n};\r\n","import Coordinate from '../geom/Coordinate';\r\nimport Polygon from '../geom/Polygon';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport LineSegment from '../geom/LineSegment';\r\nimport ConvexHull from './ConvexHull';\r\nexport default function MinimumDiameter() {\r\n\tthis.inputGeom = null;\r\n\tthis.isConvex = null;\r\n\tthis.convexHullPts = null;\r\n\tthis.minBaseSeg = new LineSegment();\r\n\tthis.minWidthPt = null;\r\n\tthis.minPtIndex = null;\r\n\tthis.minWidth = 0.0;\r\n\tif (arguments.length === 1) {\r\n\t\tlet inputGeom = arguments[0];\r\n\t\tMinimumDiameter.call(this, inputGeom, false);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet inputGeom = arguments[0], isConvex = arguments[1];\r\n\t\tthis.inputGeom = inputGeom;\r\n\t\tthis.isConvex = isConvex;\r\n\t}\r\n}\r\nextend(MinimumDiameter.prototype, {\r\n\tgetWidthCoordinate: function () {\r\n\t\tthis.computeMinimumDiameter();\r\n\t\treturn this.minWidthPt;\r\n\t},\r\n\tgetSupportingSegment: function () {\r\n\t\tthis.computeMinimumDiameter();\r\n\t\treturn this.inputGeom.getFactory().createLineString([this.minBaseSeg.p0, this.minBaseSeg.p1]);\r\n\t},\r\n\tgetDiameter: function () {\r\n\t\tthis.computeMinimumDiameter();\r\n\t\tif (this.minWidthPt === null) return this.inputGeom.getFactory().createLineString(null);\r\n\t\tvar basePt = this.minBaseSeg.project(this.minWidthPt);\r\n\t\treturn this.inputGeom.getFactory().createLineString([basePt, this.minWidthPt]);\r\n\t},\r\n\tcomputeWidthConvex: function (convexGeom) {\r\n\t\tif (convexGeom instanceof Polygon) this.convexHullPts = convexGeom.getExteriorRing().getCoordinates(); else this.convexHullPts = convexGeom.getCoordinates();\r\n\t\tif (this.convexHullPts.length === 0) {\r\n\t\t\tthis.minWidth = 0.0;\r\n\t\t\tthis.minWidthPt = null;\r\n\t\t\tthis.minBaseSeg = null;\r\n\t\t} else if (this.convexHullPts.length === 1) {\r\n\t\t\tthis.minWidth = 0.0;\r\n\t\t\tthis.minWidthPt = this.convexHullPts[0];\r\n\t\t\tthis.minBaseSeg.p0 = this.convexHullPts[0];\r\n\t\t\tthis.minBaseSeg.p1 = this.convexHullPts[0];\r\n\t\t} else if (this.convexHullPts.length === 2 || this.convexHullPts.length === 3) {\r\n\t\t\tthis.minWidth = 0.0;\r\n\t\t\tthis.minWidthPt = this.convexHullPts[0];\r\n\t\t\tthis.minBaseSeg.p0 = this.convexHullPts[0];\r\n\t\t\tthis.minBaseSeg.p1 = this.convexHullPts[1];\r\n\t\t} else this.computeConvexRingMinDiameter(this.convexHullPts);\r\n\t},\r\n\tcomputeConvexRingMinDiameter: function (pts) {\r\n\t\tthis.minWidth = Double.MAX_VALUE;\r\n\t\tvar currMaxIndex = 1;\r\n\t\tvar seg = new LineSegment();\r\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\r\n\t\t\tseg.p0 = pts[i];\r\n\t\t\tseg.p1 = pts[i + 1];\r\n\t\t\tcurrMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex);\r\n\t\t}\r\n\t},\r\n\tcomputeMinimumDiameter: function () {\r\n\t\tif (this.minWidthPt !== null) return null;\r\n\t\tif (this.isConvex) this.computeWidthConvex(this.inputGeom); else {\r\n\t\t\tvar convexGeom = new ConvexHull(this.inputGeom).getConvexHull();\r\n\t\t\tthis.computeWidthConvex(convexGeom);\r\n\t\t}\r\n\t},\r\n\tgetLength: function () {\r\n\t\tthis.computeMinimumDiameter();\r\n\t\treturn this.minWidth;\r\n\t},\r\n\tfindMaxPerpDistance: function (pts, seg, startIndex) {\r\n\t\tvar maxPerpDistance = seg.distancePerpendicular(pts[startIndex]);\r\n\t\tvar nextPerpDistance = maxPerpDistance;\r\n\t\tvar maxIndex = startIndex;\r\n\t\tvar nextIndex = maxIndex;\r\n\t\twhile (nextPerpDistance >= maxPerpDistance) {\r\n\t\t\tmaxPerpDistance = nextPerpDistance;\r\n\t\t\tmaxIndex = nextIndex;\r\n\t\t\tnextIndex = MinimumDiameter.nextIndex(pts, maxIndex);\r\n\t\t\tnextPerpDistance = seg.distancePerpendicular(pts[nextIndex]);\r\n\t\t}\r\n\t\tif (maxPerpDistance < this.minWidth) {\r\n\t\t\tthis.minPtIndex = maxIndex;\r\n\t\t\tthis.minWidth = maxPerpDistance;\r\n\t\t\tthis.minWidthPt = pts[this.minPtIndex];\r\n\t\t\tthis.minBaseSeg = new LineSegment(seg);\r\n\t\t}\r\n\t\treturn maxIndex;\r\n\t},\r\n\tgetMinimumRectangle: function () {\r\n\t\tthis.computeMinimumDiameter();\r\n\t\tif (this.minWidth === 0.0) {\r\n\t\t\tif (this.minBaseSeg.p0.equals2D(this.minBaseSeg.p1)) {\r\n\t\t\t\treturn this.inputGeom.getFactory().createPoint(this.minBaseSeg.p0);\r\n\t\t\t}\r\n\t\t\treturn this.minBaseSeg.toGeometry(this.inputGeom.getFactory());\r\n\t\t}\r\n\t\tvar dx = this.minBaseSeg.p1.x - this.minBaseSeg.p0.x;\r\n\t\tvar dy = this.minBaseSeg.p1.y - this.minBaseSeg.p0.y;\r\n\t\tvar minPara = Double.MAX_VALUE;\r\n\t\tvar maxPara = -Double.MAX_VALUE;\r\n\t\tvar minPerp = Double.MAX_VALUE;\r\n\t\tvar maxPerp = -Double.MAX_VALUE;\r\n\t\tfor (var i = 0; i < this.convexHullPts.length; i++) {\r\n\t\t\tvar paraC = MinimumDiameter.computeC(dx, dy, this.convexHullPts[i]);\r\n\t\t\tif (paraC > maxPara) maxPara = paraC;\r\n\t\t\tif (paraC < minPara) minPara = paraC;\r\n\t\t\tvar perpC = MinimumDiameter.computeC(-dy, dx, this.convexHullPts[i]);\r\n\t\t\tif (perpC > maxPerp) maxPerp = perpC;\r\n\t\t\tif (perpC < minPerp) minPerp = perpC;\r\n\t\t}\r\n\t\tvar maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp);\r\n\t\tvar minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp);\r\n\t\tvar maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara);\r\n\t\tvar minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara);\r\n\t\tvar p0 = maxParaLine.lineIntersection(maxPerpLine);\r\n\t\tvar p1 = minParaLine.lineIntersection(maxPerpLine);\r\n\t\tvar p2 = minParaLine.lineIntersection(minPerpLine);\r\n\t\tvar p3 = maxParaLine.lineIntersection(minPerpLine);\r\n\t\tvar shell = this.inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0]);\r\n\t\treturn this.inputGeom.getFactory().createPolygon(shell, null);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MinimumDiameter;\r\n\t}\r\n});\r\nMinimumDiameter.nextIndex = function (pts, index) {\r\n\tindex++;\r\n\tif (index >= pts.length) index = 0;\r\n\treturn index;\r\n};\r\nMinimumDiameter.computeC = function (a, b, p) {\r\n\treturn a * p.y - b * p.x;\r\n};\r\nMinimumDiameter.getMinimumDiameter = function (geom) {\r\n\treturn new MinimumDiameter(geom).getDiameter();\r\n};\r\nMinimumDiameter.getMinimumRectangle = function (geom) {\r\n\treturn new MinimumDiameter(geom).getMinimumRectangle();\r\n};\r\nMinimumDiameter.computeSegmentForLine = function (a, b, c) {\r\n\tvar p0 = null;\r\n\tvar p1 = null;\r\n\tif (Math.abs(b) > Math.abs(a)) {\r\n\t\tp0 = new Coordinate(0.0, c / b);\r\n\t\tp1 = new Coordinate(1.0, c / b - a / b);\r\n\t} else {\r\n\t\tp0 = new Coordinate(c / a, 0.0);\r\n\t\tp1 = new Coordinate(c / a - b / a, 1.0);\r\n\t}\r\n\treturn new LineSegment(p0, p1);\r\n};\r\n","import LineString from '../geom/LineString';\r\nimport CoordinateList from '../geom/CoordinateList';\r\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport MultiPolygon from '../geom/MultiPolygon';\r\nimport LineSegment from '../geom/LineSegment';\r\nimport inherits from '../../../../inherits';\r\nexport default function Densifier() {\r\n\tthis.inputGeom = null;\r\n\tthis.distanceTolerance = null;\r\n\tlet inputGeom = arguments[0];\r\n\tthis.inputGeom = inputGeom;\r\n}\r\nextend(Densifier.prototype, {\r\n\tgetResultGeometry: function () {\r\n\t\treturn new DensifyTransformer(this.distanceTolerance).transform(this.inputGeom);\r\n\t},\r\n\tsetDistanceTolerance: function (distanceTolerance) {\r\n\t\tif (distanceTolerance <= 0.0) throw new IllegalArgumentException(\"Tolerance must be positive\");\r\n\t\tthis.distanceTolerance = distanceTolerance;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Densifier;\r\n\t}\r\n});\r\nDensifier.densifyPoints = function (pts, distanceTolerance, precModel) {\r\n\tvar seg = new LineSegment();\r\n\tvar coordList = new CoordinateList();\r\n\tfor (var i = 0; i < pts.length - 1; i++) {\r\n\t\tseg.p0 = pts[i];\r\n\t\tseg.p1 = pts[i + 1];\r\n\t\tcoordList.add(seg.p0, false);\r\n\t\tvar len = seg.getLength();\r\n\t\tvar densifiedSegCount = Math.trunc(len / distanceTolerance) + 1;\r\n\t\tif (densifiedSegCount > 1) {\r\n\t\t\tvar densifiedSegLen = len / densifiedSegCount;\r\n\t\t\tfor (var j = 1; j < densifiedSegCount; j++) {\r\n\t\t\t\tvar segFract = j * densifiedSegLen / len;\r\n\t\t\t\tvar p = seg.pointAlong(segFract);\r\n\t\t\t\tprecModel.makePrecise(p);\r\n\t\t\t\tcoordList.add(p, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcoordList.add(pts[pts.length - 1], false);\r\n\treturn coordList.toCoordinateArray();\r\n};\r\nDensifier.densify = function (geom, distanceTolerance) {\r\n\tvar densifier = new Densifier(geom);\r\n\tdensifier.setDistanceTolerance(distanceTolerance);\r\n\treturn densifier.getResultGeometry();\r\n};\r\nfunction DensifyTransformer() {\r\n\tGeometryTransformer.apply(this);\r\n\tthis.distanceTolerance = null;\r\n\tlet distanceTolerance = arguments[0];\r\n\tthis.distanceTolerance = distanceTolerance;\r\n}\r\ninherits(DensifyTransformer, GeometryTransformer);\r\nextend(DensifyTransformer.prototype, {\r\n\ttransformMultiPolygon: function (geom, parent) {\r\n\t\tvar roughGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\r\n\t\treturn this.createValidArea(roughGeom);\r\n\t},\r\n\ttransformPolygon: function (geom, parent) {\r\n\t\tvar roughGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\r\n\t\tif (parent instanceof MultiPolygon) {\r\n\t\t\treturn roughGeom;\r\n\t\t}\r\n\t\treturn this.createValidArea(roughGeom);\r\n\t},\r\n\ttransformCoordinates: function (coords, parent) {\r\n\t\tvar inputPts = coords.toCoordinateArray();\r\n\t\tvar newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel());\r\n\t\tif (parent instanceof LineString && newPts.length === 1) {\r\n\t\t\tnewPts = new Array(0).fill(null);\r\n\t\t}\r\n\t\treturn this.factory.getCoordinateSequenceFactory().create(newPts);\r\n\t},\r\n\tcreateValidArea: function (roughAreaGeom) {\r\n\t\treturn roughAreaGeom.buffer(0.0);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DensifyTransformer;\r\n\t}\r\n});\r\nDensifier.DensifyTransformer = DensifyTransformer;\r\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\r\nimport extend from '../../../../extend';\r\nimport Quadrant from '../geomgraph/Quadrant';\r\nimport Assert from '../util/Assert';\r\nexport default function HalfEdge() {\r\n\tthis._orig = null;\r\n\tthis._sym = null;\r\n\tthis._next = null;\r\n\tlet orig = arguments[0];\r\n\tthis._orig = orig;\r\n}\r\nextend(HalfEdge.prototype, {\r\n\tfind: function (dest) {\r\n\t\tvar oNext = this;\r\n\t\tdo {\r\n\t\t\tif (oNext === null) return null;\r\n\t\t\tif (oNext.dest().equals2D(dest)) return oNext;\r\n\t\t\toNext = oNext.oNext();\r\n\t\t} while (oNext !== this);\r\n\t\treturn null;\r\n\t},\r\n\tdest: function () {\r\n\t\treturn this._sym._orig;\r\n\t},\r\n\toNext: function () {\r\n\t\treturn this._sym._next;\r\n\t},\r\n\tinsert: function (e) {\r\n\t\tif (this.oNext() === this) {\r\n\t\t\tthis.insertAfter(e);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar ecmp = this.compareTo(e);\r\n\t\tvar ePrev = this;\r\n\t\tdo {\r\n\t\t\tvar oNext = ePrev.oNext();\r\n\t\t\tvar cmp = oNext.compareTo(e);\r\n\t\t\tif (cmp !== ecmp || oNext === this) {\r\n\t\t\t\tePrev.insertAfter(e);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tePrev = oNext;\r\n\t\t} while (ePrev !== this);\r\n\t\tAssert.shouldNeverReachHere();\r\n\t},\r\n\tinsertAfter: function (e) {\r\n\t\tAssert.equals(this._orig, e.orig());\r\n\t\tvar save = this.oNext();\r\n\t\tthis._sym.setNext(e);\r\n\t\te.sym().setNext(save);\r\n\t},\r\n\tdegree: function () {\r\n\t\tvar degree = 0;\r\n\t\tvar e = this;\r\n\t\tdo {\r\n\t\t\tdegree++;\r\n\t\t\te = e.oNext();\r\n\t\t} while (e !== this);\r\n\t\treturn degree;\r\n\t},\r\n\tequals: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\r\n\t\t\treturn this._orig.equals2D(p0) && this._sym._orig.equals(p1);\r\n\t\t}\r\n\t},\r\n\tdeltaY: function () {\r\n\t\treturn this._sym._orig.y - this._orig.y;\r\n\t},\r\n\tsym: function () {\r\n\t\treturn this._sym;\r\n\t},\r\n\tprev: function () {\r\n\t\treturn this._sym.next()._sym;\r\n\t},\r\n\tcompareAngularDirection: function (e) {\r\n\t\tvar dx = this.deltaX();\r\n\t\tvar dy = this.deltaY();\r\n\t\tvar dx2 = e.deltaX();\r\n\t\tvar dy2 = e.deltaY();\r\n\t\tif (dx === dx2 && dy === dy2) return 0;\r\n\t\tvar quadrant = Quadrant.quadrant(dx, dy);\r\n\t\tvar quadrant2 = Quadrant.quadrant(dx2, dy2);\r\n\t\tif (quadrant > quadrant2) return 1;\r\n\t\tif (quadrant < quadrant2) return -1;\r\n\t\treturn CGAlgorithms.computeOrientation(e._orig, e.dest(), this.dest());\r\n\t},\r\n\tprevNode: function () {\r\n\t\tvar e = this;\r\n\t\twhile (e.degree() === 2) {\r\n\t\t\te = e.prev();\r\n\t\t\tif (e === this) return null;\r\n\t\t}\r\n\t\treturn e;\r\n\t},\r\n\tcompareTo: function (obj) {\r\n\t\tvar e = obj;\r\n\t\tvar comp = this.compareAngularDirection(e);\r\n\t\treturn comp;\r\n\t},\r\n\tnext: function () {\r\n\t\treturn this._next;\r\n\t},\r\n\tsetSym: function (e) {\r\n\t\tthis._sym = e;\r\n\t},\r\n\torig: function () {\r\n\t\treturn this._orig;\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn \"HE(\" + this._orig.x + \" \" + this._orig.y + \", \" + this._sym._orig.x + \" \" + this._sym._orig.y + \")\";\r\n\t},\r\n\tsetNext: function (e) {\r\n\t\tthis._next = e;\r\n\t},\r\n\tinit: function (e) {\r\n\t\tthis.setSym(e);\r\n\t\te.setSym(this);\r\n\t\tthis.setNext(e);\r\n\t\te.setNext(this);\r\n\t},\r\n\tdeltaX: function () {\r\n\t\treturn this._sym._orig.x - this._orig.x;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn HalfEdge;\r\n\t}\r\n});\r\nHalfEdge.init = function (e0, e1) {\r\n\tif (e0._sym !== null || e1._sym !== null || e0._next !== null || e1._next !== null) throw new IllegalStateException(\"Edges are already initialized\");\r\n\te0.init(e1);\r\n\treturn e0;\r\n};\r\nHalfEdge.create = function (p0, p1) {\r\n\tvar e0 = new HalfEdge(p0);\r\n\tvar e1 = new HalfEdge(p1);\r\n\te0.init(e1);\r\n\treturn e0;\r\n};\r\n","import extend from '../../../../extend';\r\nimport HalfEdge from './HalfEdge';\r\nimport inherits from '../../../../inherits';\r\nexport default function MarkHalfEdge() {\r\n\tthis._isMarked = false;\r\n\tlet orig = arguments[0];\r\n\tHalfEdge.call(this, orig);\r\n}\r\ninherits(MarkHalfEdge, HalfEdge);\r\nextend(MarkHalfEdge.prototype, {\r\n\tmark: function () {\r\n\t\tthis._isMarked = true;\r\n\t},\r\n\tsetMark: function (isMarked) {\r\n\t\tthis._isMarked = isMarked;\r\n\t},\r\n\tisMarked: function () {\r\n\t\treturn this._isMarked;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MarkHalfEdge;\r\n\t}\r\n});\r\nMarkHalfEdge.setMarkBoth = function (e, isMarked) {\r\n\te.setMark(isMarked);\r\n\te.sym().setMark(isMarked);\r\n};\r\nMarkHalfEdge.isMarked = function (e) {\r\n\treturn e.isMarked();\r\n};\r\nMarkHalfEdge.setMark = function (e, isMarked) {\r\n\te.setMark(isMarked);\r\n};\r\nMarkHalfEdge.markBoth = function (e) {\r\n\te.mark();\r\n\te.sym().mark();\r\n};\r\nMarkHalfEdge.mark = function (e) {\r\n\te.mark();\r\n};\r\n","import HashMap from '../../../../java/util/HashMap';\r\nimport extend from '../../../../extend';\r\nimport HalfEdge from './HalfEdge';\r\nexport default function EdgeGraph() {\r\n\tthis.vertexMap = new HashMap();\r\n}\r\nextend(EdgeGraph.prototype, {\r\n\tinsert: function (orig, dest, eAdj) {\r\n\t\tvar e = this.create(orig, dest);\r\n\t\tif (eAdj !== null) {\r\n\t\t\teAdj.insert(e);\r\n\t\t} else {\r\n\t\t\tthis.vertexMap.put(orig, e);\r\n\t\t}\r\n\t\tvar eAdjDest = this.vertexMap.get(dest);\r\n\t\tif (eAdjDest !== null) {\r\n\t\t\teAdjDest.insert(e.sym());\r\n\t\t} else {\r\n\t\t\tthis.vertexMap.put(dest, e.sym());\r\n\t\t}\r\n\t\treturn e;\r\n\t},\r\n\tcreate: function (p0, p1) {\r\n\t\tvar e0 = this.createEdge(p0);\r\n\t\tvar e1 = this.createEdge(p1);\r\n\t\tHalfEdge.init(e0, e1);\r\n\t\treturn e0;\r\n\t},\r\n\tcreateEdge: function (orig) {\r\n\t\treturn new HalfEdge(orig);\r\n\t},\r\n\taddEdge: function (orig, dest) {\r\n\t\tif (!EdgeGraph.isValidEdge(orig, dest)) return null;\r\n\t\tvar eAdj = this.vertexMap.get(orig);\r\n\t\tvar eSame = null;\r\n\t\tif (eAdj !== null) {\r\n\t\t\teSame = eAdj.find(dest);\r\n\t\t}\r\n\t\tif (eSame !== null) {\r\n\t\t\treturn eSame;\r\n\t\t}\r\n\t\tvar e = this.insert(orig, dest, eAdj);\r\n\t\treturn e;\r\n\t},\r\n\tgetVertexEdges: function () {\r\n\t\treturn this.vertexMap.values();\r\n\t},\r\n\tfindEdge: function (orig, dest) {\r\n\t\tvar e = this.vertexMap.get(orig);\r\n\t\tif (e === null) return null;\r\n\t\treturn e.find(dest);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeGraph;\r\n\t}\r\n});\r\nEdgeGraph.isValidEdge = function (orig, dest) {\r\n\tvar cmp = dest.compareTo(orig);\r\n\treturn cmp !== 0;\r\n};\r\n","import extend from '../../../../extend';\r\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge';\r\nimport inherits from '../../../../inherits';\r\nexport default function DissolveHalfEdge() {\r\n\tthis._isStart = false;\r\n\tlet orig = arguments[0];\r\n\tMarkHalfEdge.call(this, orig);\r\n}\r\ninherits(DissolveHalfEdge, MarkHalfEdge);\r\nextend(DissolveHalfEdge.prototype, {\r\n\tsetStart: function () {\r\n\t\tthis._isStart = true;\r\n\t},\r\n\tisStart: function () {\r\n\t\treturn this._isStart;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DissolveHalfEdge;\r\n\t}\r\n});\r\n","import EdgeGraph from '../edgegraph/EdgeGraph';\r\nimport extend from '../../../../extend';\r\nimport DissolveHalfEdge from './DissolveHalfEdge';\r\nimport inherits from '../../../../inherits';\r\nexport default function DissolveEdgeGraph() {\r\n\tEdgeGraph.apply(this);\r\n}\r\ninherits(DissolveEdgeGraph, EdgeGraph);\r\nextend(DissolveEdgeGraph.prototype, {\r\n\tcreateEdge: function (p0) {\r\n\t\treturn new DissolveHalfEdge(p0);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DissolveEdgeGraph;\r\n\t}\r\n});\r\n","import LineString from '../geom/LineString';\r\nimport CoordinateList from '../geom/CoordinateList';\r\nimport Geometry from '../geom/Geometry';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport Collection from '../../../../java/util/Collection';\r\nimport Stack from '../../../../java/util/Stack';\r\nimport extend from '../../../../extend';\r\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge';\r\nimport DissolveEdgeGraph from './DissolveEdgeGraph';\r\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function LineDissolver() {\r\n\tthis.result = null;\r\n\tthis.factory = null;\r\n\tthis.graph = null;\r\n\tthis.lines = new ArrayList();\r\n\tthis.nodeEdgeStack = new Stack();\r\n\tthis.ringStartEdge = null;\r\n\tthis.graph = new DissolveEdgeGraph();\r\n}\r\nextend(LineDissolver.prototype, {\r\n\taddLine: function (line) {\r\n\t\tthis.lines.add(this.factory.createLineString(line.toCoordinateArray()));\r\n\t},\r\n\tupdateRingStartEdge: function (e) {\r\n\t\tif (!e.isStart()) {\r\n\t\t\te = e.sym();\r\n\t\t\tif (!e.isStart()) return null;\r\n\t\t}\r\n\t\tif (this.ringStartEdge === null) {\r\n\t\t\tthis.ringStartEdge = e;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (e.orig().compareTo(this.ringStartEdge.orig()) < 0) {\r\n\t\t\tthis.ringStartEdge = e;\r\n\t\t}\r\n\t},\r\n\tgetResult: function () {\r\n\t\tif (this.result === null) this.computeResult();\r\n\t\treturn this.result;\r\n\t},\r\n\tprocess: function (e) {\r\n\t\tvar eNode = e.prevNode();\r\n\t\tif (eNode === null) eNode = e;\r\n\t\tthis.stackEdges(eNode);\r\n\t\tthis.buildLines();\r\n\t},\r\n\tbuildRing: function (eStartRing) {\r\n\t\tvar line = new CoordinateList();\r\n\t\tvar e = eStartRing;\r\n\t\tline.add(e.orig().copy(), false);\r\n\t\twhile (e.sym().degree() === 2) {\r\n\t\t\tvar eNext = e.next();\r\n\t\t\tif (eNext === eStartRing) break;\r\n\t\t\tline.add(eNext.orig().copy(), false);\r\n\t\t\te = eNext;\r\n\t\t}\r\n\t\tline.add(e.dest().copy(), false);\r\n\t\tthis.addLine(line);\r\n\t},\r\n\tbuildLine: function (eStart) {\r\n\t\tvar line = new CoordinateList();\r\n\t\tvar e = eStart;\r\n\t\tthis.ringStartEdge = null;\r\n\t\tMarkHalfEdge.markBoth(e);\r\n\t\tline.add(e.orig().copy(), false);\r\n\t\twhile (e.sym().degree() === 2) {\r\n\t\t\tthis.updateRingStartEdge(e);\r\n\t\t\tvar eNext = e.next();\r\n\t\t\tif (eNext === eStart) {\r\n\t\t\t\tthis.buildRing(this.ringStartEdge);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tline.add(eNext.orig().copy(), false);\r\n\t\t\te = eNext;\r\n\t\t\tMarkHalfEdge.markBoth(e);\r\n\t\t}\r\n\t\tline.add(e.dest().copy(), false);\r\n\t\tthis.stackEdges(e.sym());\r\n\t\tthis.addLine(line);\r\n\t},\r\n\tstackEdges: function (node) {\r\n\t\tvar e = node;\r\n\t\tdo {\r\n\t\t\tif (!MarkHalfEdge.isMarked(e)) this.nodeEdgeStack.add(e);\r\n\t\t\te = e.oNext();\r\n\t\t} while (e !== node);\r\n\t},\r\n\tcomputeResult: function () {\r\n\t\tvar edges = this.graph.getVertexEdges();\r\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\r\n\t\t\tthis.process(e);\r\n\t\t}\r\n\t\tthis.result = this.factory.buildGeometry(this.lines);\r\n\t},\r\n\tbuildLines: function () {\r\n\t\twhile (!this.nodeEdgeStack.empty()) {\r\n\t\t\tvar e = this.nodeEdgeStack.pop();\r\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\r\n\t\t\tthis.buildLine(e);\r\n\t\t}\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geometry = arguments[0];\r\n\t\t\tgeometry.apply({\r\n\t\t\t\tinterfaces_: function () {\r\n\t\t\t\t\treturn [GeometryComponentFilter];\r\n\t\t\t\t},\r\n\t\t\t\tfilter: function (component) {\r\n\t\t\t\t\tif (component instanceof LineString) {\r\n\t\t\t\t\t\tthis.add(component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet geometries = arguments[0];\r\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar geometry = i.next();\r\n\t\t\t\tthis.add(geometry);\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof LineString) {\r\n\t\t\tlet lineString = arguments[0];\r\n\t\t\tif (this.factory === null) {\r\n\t\t\t\tthis.factory = lineString.getFactory();\r\n\t\t\t}\r\n\t\t\tvar seq = lineString.getCoordinateSequence();\r\n\t\t\tvar doneStart = false;\r\n\t\t\tfor (var i = 1; i < seq.size(); i++) {\r\n\t\t\t\tvar e = this.graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i));\r\n\t\t\t\tif (e === null) continue;\r\n\t\t\t\tif (!doneStart) {\r\n\t\t\t\t\te.setStart();\r\n\t\t\t\t\tdoneStart = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineDissolver;\r\n\t}\r\n});\r\nLineDissolver.dissolve = function (g) {\r\n\tvar d = new LineDissolver();\r\n\td.add(g);\r\n\treturn d.getResult();\r\n};\r\n","import extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Serializable from '../../../../../java/io/Serializable';\r\nexport default function NodeBase() {\r\n\tthis.items = new ArrayList();\r\n\tthis.subnode = new Array(4).fill(null);\r\n}\r\nextend(NodeBase.prototype, {\r\n\thasChildren: function () {\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tif (this.subnode[i] !== null) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tisPrunable: function () {\r\n\t\treturn !(this.hasChildren() || this.hasItems());\r\n\t},\r\n\taddAllItems: function (resultItems) {\r\n\t\tresultItems.addAll(this.items);\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tthis.subnode[i].addAllItems(resultItems);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn resultItems;\r\n\t},\r\n\tgetNodeCount: function () {\r\n\t\tvar subSize = 0;\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tsubSize += this.subnode[i].size();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn subSize + 1;\r\n\t},\r\n\tsize: function () {\r\n\t\tvar subSize = 0;\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tsubSize += this.subnode[i].size();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn subSize + this.items.size();\r\n\t},\r\n\taddAllItemsFromOverlapping: function (searchEnv, resultItems) {\r\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\r\n\t\tresultItems.addAll(this.items);\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tthis.subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tvisitItems: function (searchEnv, visitor) {\r\n\t\tfor (var i = this.items.iterator(); i.hasNext(); ) {\r\n\t\t\tvisitor.visitItem(i.next());\r\n\t\t}\r\n\t},\r\n\thasItems: function () {\r\n\t\treturn !this.items.isEmpty();\r\n\t},\r\n\tremove: function (itemEnv, item) {\r\n\t\tif (!this.isSearchMatch(itemEnv)) return false;\r\n\t\tvar found = false;\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tfound = this.subnode[i].remove(itemEnv, item);\r\n\t\t\t\tif (found) {\r\n\t\t\t\t\tif (this.subnode[i].isPrunable()) this.subnode[i] = null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (found) return found;\r\n\t\tfound = this.items.remove(item);\r\n\t\treturn found;\r\n\t},\r\n\tvisit: function (searchEnv, visitor) {\r\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\r\n\t\tthis.visitItems(searchEnv, visitor);\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tthis.subnode[i].visit(searchEnv, visitor);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetItems: function () {\r\n\t\treturn this.items;\r\n\t},\r\n\tdepth: function () {\r\n\t\tvar maxSubDepth = 0;\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tvar sqd = this.subnode[i].depth();\r\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxSubDepth + 1;\r\n\t},\r\n\tisEmpty: function () {\r\n\t\tvar isEmpty = true;\r\n\t\tif (!this.items.isEmpty()) isEmpty = false;\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tif (this.subnode[i] !== null) {\r\n\t\t\t\tif (!this.subnode[i].isEmpty()) isEmpty = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn isEmpty;\r\n\t},\r\n\tadd: function (item) {\r\n\t\tthis.items.add(item);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodeBase;\r\n\t}\r\n});\r\nNodeBase.getSubnodeIndex = function (env, centrex, centrey) {\r\n\tvar subnodeIndex = -1;\r\n\tif (env.getMinX() >= centrex) {\r\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 3;\r\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 1;\r\n\t}\r\n\tif (env.getMaxX() <= centrex) {\r\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 2;\r\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 0;\r\n\t}\r\n\treturn subnodeIndex;\r\n};\r\n","import Coordinate from '../../geom/Coordinate';\r\nimport extend from '../../../../../extend';\r\nimport DoubleBits from './DoubleBits';\r\nimport Envelope from '../../geom/Envelope';\r\nexport default function Key() {\r\n\tthis.pt = new Coordinate();\r\n\tthis.level = 0;\r\n\tthis.env = null;\r\n\tlet itemEnv = arguments[0];\r\n\tthis.computeKey(itemEnv);\r\n}\r\nextend(Key.prototype, {\r\n\tgetLevel: function () {\r\n\t\treturn this.level;\r\n\t},\r\n\tcomputeKey: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet itemEnv = arguments[0];\r\n\t\t\tthis.level = Key.computeQuadLevel(itemEnv);\r\n\t\t\tthis.env = new Envelope();\r\n\t\t\tthis.computeKey(this.level, itemEnv);\r\n\t\t\twhile (!this.env.contains(itemEnv)) {\r\n\t\t\t\tthis.level += 1;\r\n\t\t\t\tthis.computeKey(this.level, itemEnv);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet level = arguments[0], itemEnv = arguments[1];\r\n\t\t\tvar quadSize = DoubleBits.powerOf2(level);\r\n\t\t\tthis.pt.x = Math.floor(itemEnv.getMinX() / quadSize) * quadSize;\r\n\t\t\tthis.pt.y = Math.floor(itemEnv.getMinY() / quadSize) * quadSize;\r\n\t\t\tthis.env.init(this.pt.x, this.pt.x + quadSize, this.pt.y, this.pt.y + quadSize);\r\n\t\t}\r\n\t},\r\n\tgetEnvelope: function () {\r\n\t\treturn this.env;\r\n\t},\r\n\tgetCentre: function () {\r\n\t\treturn new Coordinate((this.env.getMinX() + this.env.getMaxX()) / 2, (this.env.getMinY() + this.env.getMaxY()) / 2);\r\n\t},\r\n\tgetPoint: function () {\r\n\t\treturn this.pt;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Key;\r\n\t}\r\n});\r\nKey.computeQuadLevel = function (env) {\r\n\tvar dx = env.getWidth();\r\n\tvar dy = env.getHeight();\r\n\tvar dMax = dx > dy ? dx : dy;\r\n\tvar level = DoubleBits.exponent(dMax) + 1;\r\n\treturn level;\r\n};\r\n","import NodeBase from './NodeBase';\r\nimport extend from '../../../../../extend';\r\nimport Envelope from '../../geom/Envelope';\r\nimport Assert from '../../util/Assert';\r\nimport inherits from '../../../../../inherits';\r\nimport Key from './Key';\r\nexport default function Node() {\r\n\tNodeBase.apply(this);\r\n\tthis.env = null;\r\n\tthis.centrex = null;\r\n\tthis.centrey = null;\r\n\tthis.level = null;\r\n\tlet env = arguments[0], level = arguments[1];\r\n\tthis.env = env;\r\n\tthis.level = level;\r\n\tthis.centrex = (env.getMinX() + env.getMaxX()) / 2;\r\n\tthis.centrey = (env.getMinY() + env.getMaxY()) / 2;\r\n}\r\ninherits(Node, NodeBase);\r\nextend(Node.prototype, {\r\n\tfind: function (searchEnv) {\r\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this.centrex, this.centrey);\r\n\t\tif (subnodeIndex === -1) return this;\r\n\t\tif (this.subnode[subnodeIndex] !== null) {\r\n\t\t\tvar node = this.subnode[subnodeIndex];\r\n\t\t\treturn node.find(searchEnv);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\tisSearchMatch: function (searchEnv) {\r\n\t\treturn this.env.intersects(searchEnv);\r\n\t},\r\n\tgetSubnode: function (index) {\r\n\t\tif (this.subnode[index] === null) {\r\n\t\t\tthis.subnode[index] = this.createSubnode(index);\r\n\t\t}\r\n\t\treturn this.subnode[index];\r\n\t},\r\n\tgetEnvelope: function () {\r\n\t\treturn this.env;\r\n\t},\r\n\tgetNode: function (searchEnv) {\r\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this.centrex, this.centrey);\r\n\t\tif (subnodeIndex !== -1) {\r\n\t\t\tvar node = this.getSubnode(subnodeIndex);\r\n\t\t\treturn node.getNode(searchEnv);\r\n\t\t} else {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\tcreateSubnode: function (index) {\r\n\t\tvar minx = 0.0;\r\n\t\tvar maxx = 0.0;\r\n\t\tvar miny = 0.0;\r\n\t\tvar maxy = 0.0;\r\n\t\tswitch (index) {\r\n\t\t\tcase 0:\r\n\t\t\t\tminx = this.env.getMinX();\r\n\t\t\t\tmaxx = this.centrex;\r\n\t\t\t\tminy = this.env.getMinY();\r\n\t\t\t\tmaxy = this.centrey;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tminx = this.centrex;\r\n\t\t\t\tmaxx = this.env.getMaxX();\r\n\t\t\t\tminy = this.env.getMinY();\r\n\t\t\t\tmaxy = this.centrey;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tminx = this.env.getMinX();\r\n\t\t\t\tmaxx = this.centrex;\r\n\t\t\t\tminy = this.centrey;\r\n\t\t\t\tmaxy = this.env.getMaxY();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tminx = this.centrex;\r\n\t\t\t\tmaxx = this.env.getMaxX();\r\n\t\t\t\tminy = this.centrey;\r\n\t\t\t\tmaxy = this.env.getMaxY();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tvar sqEnv = new Envelope(minx, maxx, miny, maxy);\r\n\t\tvar node = new Node(sqEnv, this.level - 1);\r\n\t\treturn node;\r\n\t},\r\n\tinsertNode: function (node) {\r\n\t\tAssert.isTrue(this.env === null || this.env.contains(node.env));\r\n\t\tvar index = NodeBase.getSubnodeIndex(node.env, this.centrex, this.centrey);\r\n\t\tif (node.level === this.level - 1) {\r\n\t\t\tthis.subnode[index] = node;\r\n\t\t} else {\r\n\t\t\tvar childNode = this.createSubnode(index);\r\n\t\t\tchildNode.insertNode(node);\r\n\t\t\tthis.subnode[index] = childNode;\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Node;\r\n\t}\r\n});\r\nNode.createNode = function (env) {\r\n\tvar key = new Key(env);\r\n\tvar node = new Node(key.getEnvelope(), key.getLevel());\r\n\treturn node;\r\n};\r\nNode.createExpanded = function (node, addEnv) {\r\n\tvar expandEnv = new Envelope(addEnv);\r\n\tif (node !== null) expandEnv.expandToInclude(node.env);\r\n\tvar largerNode = Node.createNode(expandEnv);\r\n\tif (node !== null) largerNode.insertNode(node);\r\n\treturn largerNode;\r\n};\r\n","import Coordinate from '../../geom/Coordinate';\r\nimport NodeBase from './NodeBase';\r\nimport Node from './Node';\r\nimport extend from '../../../../../extend';\r\nimport IntervalSize from './IntervalSize';\r\nimport Assert from '../../util/Assert';\r\nimport inherits from '../../../../../inherits';\r\nexport default function Root() {\r\n\tNodeBase.apply(this);\r\n}\r\ninherits(Root, NodeBase);\r\nextend(Root.prototype, {\r\n\tinsert: function (itemEnv, item) {\r\n\t\tvar index = NodeBase.getSubnodeIndex(itemEnv, Root.origin.x, Root.origin.y);\r\n\t\tif (index === -1) {\r\n\t\t\tthis.add(item);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar node = this.subnode[index];\r\n\t\tif (node === null || !node.getEnvelope().contains(itemEnv)) {\r\n\t\t\tvar largerNode = Node.createExpanded(node, itemEnv);\r\n\t\t\tthis.subnode[index] = largerNode;\r\n\t\t}\r\n\t\tthis.insertContained(this.subnode[index], itemEnv, item);\r\n\t},\r\n\tisSearchMatch: function (searchEnv) {\r\n\t\treturn true;\r\n\t},\r\n\tinsertContained: function (tree, itemEnv, item) {\r\n\t\tAssert.isTrue(tree.getEnvelope().contains(itemEnv));\r\n\t\tvar isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());\r\n\t\tvar isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY());\r\n\t\tvar node = null;\r\n\t\tif (isZeroX || isZeroY) node = tree.find(itemEnv); else node = tree.getNode(itemEnv);\r\n\t\tnode.add(item);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Root;\r\n\t}\r\n});\r\nRoot.origin = new Coordinate(0.0, 0.0);\r\n","import Root from './Root';\r\nimport SpatialIndex from '../SpatialIndex';\r\nimport extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport ArrayListVisitor from '../ArrayListVisitor';\r\nimport Serializable from '../../../../../java/io/Serializable';\r\nimport Envelope from '../../geom/Envelope';\r\nexport default function Quadtree() {\r\n\tthis.root = null;\r\n\tthis.minExtent = 1.0;\r\n\tthis.root = new Root();\r\n}\r\nextend(Quadtree.prototype, {\r\n\tsize: function () {\r\n\t\tif (this.root !== null) return this.root.size();\r\n\t\treturn 0;\r\n\t},\r\n\tinsert: function (itemEnv, item) {\r\n\t\tthis.collectStats(itemEnv);\r\n\t\tvar insertEnv = Quadtree.ensureExtent(itemEnv, this.minExtent);\r\n\t\tthis.root.insert(insertEnv, item);\r\n\t},\r\n\tquery: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet searchEnv = arguments[0];\r\n\t\t\tvar visitor = new ArrayListVisitor();\r\n\t\t\tthis.query(searchEnv, visitor);\r\n\t\t\treturn visitor.getItems();\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\r\n\t\t\tthis.root.visit(searchEnv, visitor);\r\n\t\t}\r\n\t},\r\n\tqueryAll: function () {\r\n\t\tvar foundItems = new ArrayList();\r\n\t\tthis.root.addAllItems(foundItems);\r\n\t\treturn foundItems;\r\n\t},\r\n\tremove: function (itemEnv, item) {\r\n\t\tvar posEnv = Quadtree.ensureExtent(itemEnv, this.minExtent);\r\n\t\treturn this.root.remove(posEnv, item);\r\n\t},\r\n\tcollectStats: function (itemEnv) {\r\n\t\tvar delX = itemEnv.getWidth();\r\n\t\tif (delX < this.minExtent && delX > 0.0) this.minExtent = delX;\r\n\t\tvar delY = itemEnv.getHeight();\r\n\t\tif (delY < this.minExtent && delY > 0.0) this.minExtent = delY;\r\n\t},\r\n\tdepth: function () {\r\n\t\tif (this.root !== null) return this.root.depth();\r\n\t\treturn 0;\r\n\t},\r\n\tisEmpty: function () {\r\n\t\tif (this.root === null) return true;\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [SpatialIndex, Serializable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Quadtree;\r\n\t}\r\n});\r\nQuadtree.ensureExtent = function (itemEnv, minExtent) {\r\n\tvar minx = itemEnv.getMinX();\r\n\tvar maxx = itemEnv.getMaxX();\r\n\tvar miny = itemEnv.getMinY();\r\n\tvar maxy = itemEnv.getMaxY();\r\n\tif (minx !== maxx && miny !== maxy) return itemEnv;\r\n\tif (minx === maxx) {\r\n\t\tminx = minx - minExtent / 2.0;\r\n\t\tmaxx = minx + minExtent / 2.0;\r\n\t}\r\n\tif (miny === maxy) {\r\n\t\tminy = miny - minExtent / 2.0;\r\n\t\tmaxy = miny + minExtent / 2.0;\r\n\t}\r\n\treturn new Envelope(minx, maxx, miny, maxy);\r\n};\r\nQuadtree.serialVersionUID = -7461163625812743604;\r\n","import Coordinate from '../geom/Coordinate'\r\nimport GeometryFactory from '../geom/GeometryFactory'\r\nimport extend from '../../../../extend'\r\n\r\nconst geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon']\r\n\r\n/**\r\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\r\n * NOTE: Adapted from OpenLayers 2.11 implementation.\r\n */\r\n\r\n/**\r\n * Create a new parser for GeoJSON\r\n *\r\n * @param {GeometryFactory} geometryFactory\r\n * @return An instance of GeoJsonParser.\r\n * @constructor\r\n * @private\r\n */\r\nexport default function GeoJSONParser (geometryFactory) {\r\n  this.geometryFactory = geometryFactory || new GeometryFactory()\r\n}\r\n\r\nextend(GeoJSONParser.prototype, {\r\n  /**\r\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\r\n   *\r\n   * @param {}\r\n   *          A GeoJSON object.\r\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\r\n   * @private\r\n   */\r\n  read (json) {\r\n    let obj\r\n    if (typeof json === 'string') {\r\n      obj = JSON.parse(json)\r\n    } else {\r\n      obj = json\r\n    }\r\n\r\n    const type = obj.type\r\n\r\n    if (!parse[type]) {\r\n      throw new Error('Unknown GeoJSON type: ' + obj.type)\r\n    }\r\n\r\n    if (geometryTypes.indexOf(type) !== -1) {\r\n      return parse[type].apply(this, [obj.coordinates])\r\n    } else if (type === 'GeometryCollection') {\r\n      return parse[type].apply(this, [obj.geometries])\r\n    }\r\n\r\n    // feature or feature collection\r\n    return parse[type].apply(this, [obj])\r\n  },\r\n\r\n  /**\r\n   * Serialize a Geometry object into GeoJSON\r\n   *\r\n   * @param {Geometry}\r\n   *          geometry A Geometry or array of Geometries.\r\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\r\n   * @private\r\n   */\r\n  write (geometry) {\r\n    const type = geometry.getGeometryType()\r\n\r\n    if (!extract[type]) {\r\n      throw new Error('Geometry is not supported')\r\n    }\r\n\r\n    return extract[type].apply(this, [geometry])\r\n  }\r\n})\r\n\r\nconst parse = {\r\n  /**\r\n   * Parse a GeoJSON Feature object\r\n   *\r\n   * @param {Object}\r\n   *          obj Object to parse.\r\n   *\r\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\r\n   */\r\n  Feature: function (obj) {\r\n    const feature = {}\r\n\r\n    // copy features\r\n    for (let key in obj) {\r\n      feature[key] = obj[key]\r\n    }\r\n\r\n    // parse geometry\r\n    if (obj.geometry) {\r\n      const type = obj.geometry.type\r\n      if (!parse[type]) {\r\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\r\n      }\r\n      feature.geometry = this.read(obj.geometry)\r\n    }\r\n\r\n    // bbox\r\n    if (obj.bbox) {\r\n      feature.bbox = parse.bbox.apply(this, [obj.bbox])\r\n    }\r\n\r\n    return feature\r\n  },\r\n\r\n  /**\r\n   * Parse a GeoJSON FeatureCollection object\r\n   *\r\n   * @param {Object}\r\n   *          obj Object to parse.\r\n   *\r\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\r\n   */\r\n  FeatureCollection: function (obj) {\r\n    const featureCollection = {}\r\n\r\n    if (obj.features) {\r\n      featureCollection.features = []\r\n\r\n      for (let i = 0; i < obj.features.length; ++i) {\r\n        featureCollection.features.push(this.read(obj.features[i]))\r\n      }\r\n    }\r\n\r\n    if (obj.bbox) {\r\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox])\r\n    }\r\n\r\n    return featureCollection\r\n  },\r\n\r\n  /**\r\n   * Convert the ordinates in an array to an array of Coordinates\r\n   *\r\n   * @param {Array}\r\n   *          array Array with {Number}s.\r\n   *\r\n   * @return {Array} Array with Coordinates.\r\n   */\r\n  coordinates: function (array) {\r\n    const coordinates = []\r\n    for (let i = 0; i < array.length; ++i) {\r\n      const sub = array[i]\r\n      coordinates.push(new Coordinate(sub[0], sub[1]))\r\n    }\r\n    return coordinates\r\n  },\r\n\r\n  /**\r\n   * Convert the bbox to a LinearRing\r\n   *\r\n   * @param {Array}\r\n   *          array Array with [xMin, yMin, xMax, yMax].\r\n   *\r\n   * @return {Array} Array with Coordinates.\r\n   */\r\n  bbox: function (array) {\r\n    return this.geometryFactory.createLinearRing([\r\n      new Coordinate(array[0], array[1]),\r\n      new Coordinate(array[2], array[1]),\r\n      new Coordinate(array[2], array[3]),\r\n      new Coordinate(array[0], array[3]),\r\n      new Coordinate(array[0], array[1])\r\n    ])\r\n  },\r\n\r\n  /**\r\n   * Convert an Array with ordinates to a Point\r\n   *\r\n   * @param {Array}\r\n   *          array Array with ordinates.\r\n   *\r\n   * @return {Point} Point.\r\n   */\r\n  Point: function (array) {\r\n    const coordinate = new Coordinate(array[0], array[1])\r\n    return this.geometryFactory.createPoint(coordinate)\r\n  },\r\n\r\n  /**\r\n   * Convert an Array with coordinates to a MultiPoint\r\n   *\r\n   * @param {Array}\r\n   *          array Array with coordinates.\r\n   *\r\n   * @return {MultiPoint} MultiPoint.\r\n   */\r\n  MultiPoint: function (array) {\r\n    const points = []\r\n    for (let i = 0; i < array.length; ++i) {\r\n      points.push(parse.Point.apply(this, [array[i]]))\r\n    }\r\n    return this.geometryFactory.createMultiPoint(points)\r\n  },\r\n\r\n  /**\r\n   * Convert an Array with coordinates to a LineString\r\n   *\r\n   * @param {Array}\r\n   *          array Array with coordinates.\r\n   *\r\n   * @return {LineString} LineString.\r\n   */\r\n  LineString: function (array) {\r\n    const coordinates = parse.coordinates.apply(this, [array])\r\n    return this.geometryFactory.createLineString(coordinates)\r\n  },\r\n\r\n  /**\r\n   * Convert an Array with coordinates to a MultiLineString\r\n   *\r\n   * @param {Array}\r\n   *          array Array with coordinates.\r\n   *\r\n   * @return {MultiLineString} MultiLineString.\r\n   */\r\n  MultiLineString: function (array) {\r\n    const lineStrings = []\r\n    for (let i = 0; i < array.length; ++i) {\r\n      lineStrings.push(parse.LineString.apply(this, [array[i]]))\r\n    }\r\n    return this.geometryFactory.createMultiLineString(lineStrings)\r\n  },\r\n\r\n  /**\r\n   * Convert an Array to a Polygon\r\n   *\r\n   * @param {Array}\r\n   *          array Array with shell and holes.\r\n   *\r\n   * @return {Polygon} Polygon.\r\n   */\r\n  Polygon: function (array) {\r\n    const shellCoordinates = parse.coordinates.apply(this, [array[0]])\r\n    const shell = this.geometryFactory.createLinearRing(shellCoordinates)\r\n    const holes = []\r\n    for (let i = 1; i < array.length; ++i) {\r\n      var hole = array[i]\r\n      var coordinates = parse.coordinates.apply(this, [hole])\r\n      var linearRing = this.geometryFactory.createLinearRing(coordinates)\r\n      holes.push(linearRing)\r\n    }\r\n    return this.geometryFactory.createPolygon(shell, holes)\r\n  },\r\n\r\n  /**\r\n   * Convert an Array to a MultiPolygon\r\n   *\r\n   * @param {Array}\r\n   *          array Array of arrays with shell and rings.\r\n   *\r\n   * @return {MultiPolygon} MultiPolygon.\r\n   */\r\n  MultiPolygon: function (array) {\r\n    const polygons = []\r\n    for (let i = 0; i < array.length; ++i) {\r\n      const polygon = array[i]\r\n      polygons.push(parse.Polygon.apply(this, [polygon]))\r\n    }\r\n    return this.geometryFactory.createMultiPolygon(polygons)\r\n  },\r\n\r\n  /**\r\n   * Convert an Array to a GeometryCollection\r\n   *\r\n   * @param {Array}\r\n   *          array Array of GeoJSON geometries.\r\n   *\r\n   * @return {GeometryCollection} GeometryCollection.\r\n   */\r\n  GeometryCollection: function (array) {\r\n    const geometries = []\r\n    for (let i = 0; i < array.length; ++i) {\r\n      const geometry = array[i]\r\n      geometries.push(this.read(geometry))\r\n    }\r\n    return this.geometryFactory.createGeometryCollection(geometries)\r\n  }\r\n}\r\n\r\nconst extract = {\r\n  /**\r\n   * Convert a Coordinate to an Array\r\n   *\r\n   * @param {Coordinate}\r\n   *          coordinate Coordinate to convert.\r\n   *\r\n   * @return {Array} Array of ordinates.\r\n   */\r\n  coordinate: function (coordinate) {\r\n    return [coordinate.x, coordinate.y]\r\n  },\r\n\r\n  /**\r\n   * Convert a Point to a GeoJSON object\r\n   *\r\n   * @param {Point}\r\n   *          point Point to convert.\r\n   *\r\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\r\n   */\r\n  Point: function (point) {\r\n    const array = extract.coordinate.apply(this, [point.getCoordinate()])\r\n    return {\r\n      type: 'Point',\r\n      coordinates: array\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Convert a MultiPoint to a GeoJSON object\r\n   *\r\n   * @param {MultiPoint}\r\n   *          multipoint MultiPoint to convert.\r\n   *\r\n   * @return {Array} Array of coordinates.\r\n   */\r\n  MultiPoint: function (multipoint) {\r\n    const array = []\r\n    for (let i = 0; i < multipoint.geometries.length; ++i) {\r\n      const point = multipoint.geometries[i]\r\n      const geoJson = extract.Point.apply(this, [point])\r\n      array.push(geoJson.coordinates)\r\n    }\r\n    return {\r\n      type: 'MultiPoint',\r\n      coordinates: array\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Convert a LineString to a GeoJSON object\r\n   *\r\n   * @param {LineString}\r\n   *          linestring LineString to convert.\r\n   *\r\n   * @return {Array} Array of coordinates.\r\n   */\r\n  LineString: function (linestring) {\r\n    const array = []\r\n    const coordinates = linestring.getCoordinates()\r\n    for (let i = 0; i < coordinates.length; ++i) {\r\n      const coordinate = coordinates[i]\r\n      array.push(extract.coordinate.apply(this, [coordinate]))\r\n    }\r\n    return {\r\n      type: 'LineString',\r\n      coordinates: array\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Convert a MultiLineString to a GeoJSON object\r\n   *\r\n   * @param {MultiLineString}\r\n   *          multilinestring MultiLineString to convert.\r\n   *\r\n   * @return {Array} Array of Array of coordinates.\r\n   */\r\n  MultiLineString: function (multilinestring) {\r\n    const array = []\r\n    for (let i = 0; i < multilinestring.geometries.length; ++i) {\r\n      const linestring = multilinestring.geometries[i]\r\n      const geoJson = extract.LineString.apply(this, [linestring])\r\n      array.push(geoJson.coordinates)\r\n    }\r\n    return {\r\n      type: 'MultiLineString',\r\n      coordinates: array\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Convert a Polygon to a GeoJSON object\r\n   *\r\n   * @param {Polygon}\r\n   *          polygon Polygon to convert.\r\n   *\r\n   * @return {Array} Array with shell, holes.\r\n   */\r\n  Polygon: function (polygon) {\r\n    const array = []\r\n    const shellGeoJson = extract.LineString.apply(this, [polygon.shell])\r\n    array.push(shellGeoJson.coordinates)\r\n    for (let i = 0; i < polygon.holes.length; ++i) {\r\n      const hole = polygon.holes[i]\r\n      const holeGeoJson = extract.LineString.apply(this, [hole])\r\n      array.push(holeGeoJson.coordinates)\r\n    }\r\n    return {\r\n      type: 'Polygon',\r\n      coordinates: array\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Convert a MultiPolygon to a GeoJSON object\r\n   *\r\n   * @param {MultiPolygon}\r\n   *          multipolygon MultiPolygon to convert.\r\n   *\r\n   * @return {Array} Array of polygons.\r\n   */\r\n  MultiPolygon: function (multipolygon) {\r\n    const array = []\r\n    for (let i = 0; i < multipolygon.geometries.length; ++i) {\r\n      const polygon = multipolygon.geometries[i]\r\n      const geoJson = extract.Polygon.apply(this, [polygon])\r\n      array.push(geoJson.coordinates)\r\n    }\r\n    return {\r\n      type: 'MultiPolygon',\r\n      coordinates: array\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Convert a GeometryCollection to a GeoJSON object\r\n   *\r\n   * @param {GeometryCollection}\r\n   *          collection GeometryCollection to convert.\r\n   *\r\n   * @return {Array} Array of geometries.\r\n   */\r\n  GeometryCollection: function (collection) {\r\n    const array = []\r\n    for (let i = 0; i < collection.geometries.length; ++i) {\r\n      const geometry = collection.geometries[i]\r\n      const type = geometry.getGeometryType()\r\n      array.push(extract[type].apply(this, [geometry]))\r\n    }\r\n    return {\r\n      type: 'GeometryCollection',\r\n      geometries: array\r\n    }\r\n  }\r\n}\r\n","import GeometryFactory from '../geom/GeometryFactory'\r\nimport PrecisionModel from '../geom/PrecisionModel'\r\nimport GeoJSONParser from './GeoJSONParser'\r\nimport extend from '../../../../extend'\r\n\r\n/**\r\n * Converts a geometry in GeoJSON to a {@link Geometry}.\r\n */\r\n\r\n/**\r\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\r\n * to allow it to create <code>Geometry</code> objects of the appropriate\r\n * implementation. In particular, the <code>GeometryFactory</code> determines\r\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\r\n *\r\n * @param {GeometryFactory} geometryFactory\r\n * @constructor\r\n */\r\nexport default function GeoJSONReader (geometryFactory) {\r\n  this.geometryFactory = geometryFactory || new GeometryFactory()\r\n  this.precisionModel = this.geometryFactory.getPrecisionModel()\r\n  this.parser = new GeoJSONParser(this.geometryFactory)\r\n}\r\n\r\nextend(GeoJSONReader.prototype, {\r\n  /**\r\n   * Reads a GeoJSON representation of a {@link Geometry}\r\n   *\r\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\r\n   *\r\n   * @param {Object|String} geoJson a GeoJSON Object or String.\r\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\r\n   * @memberof GeoJSONReader\r\n   */\r\n  read (geoJson) {\r\n    var geometry = this.parser.read(geoJson)\r\n\r\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\r\n      this.reducePrecision(geometry)\r\n    }\r\n\r\n    return geometry\r\n  },\r\n\r\n  // NOTE: this is a hack\r\n  reducePrecision (geometry) {\r\n    var i, len\r\n\r\n    if (geometry.coordinate) {\r\n      this.precisionModel.makePrecise(geometry.coordinate)\r\n    } else if (geometry.points) {\r\n      for (i = 0, len = geometry.points.length; i < len; i++) {\r\n        this.precisionModel.makePrecise(geometry.points[i])\r\n      }\r\n    } else if (geometry.geometries) {\r\n      for (i = 0, len = geometry.geometries.length; i < len; i++) {\r\n        this.reducePrecision(geometry.geometries[i])\r\n      }\r\n    }\r\n  }\r\n})\r\n","/**\r\n * @module GeoJSONWriter\r\n */\r\n\r\nimport GeoJSONParser from './GeoJSONParser'\r\nimport extend from '../../../../extend'\r\n\r\n/**\r\n * Writes the GeoJSON representation of a {@link Geometry}. The\r\n * The GeoJSON format is defined <A\r\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\r\n */\r\n\r\n/**\r\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\r\n * model. Only the maximum number of decimal places necessary to represent the\r\n * ordinates to the required precision will be output.\r\n *\r\n * @param {GeometryFactory} geometryFactory\r\n * @constructor\r\n */\r\nexport default function GeoJSONWriter () {\r\n  this.parser = new GeoJSONParser(this.geometryFactory)\r\n}\r\n\r\nextend(GeoJSONWriter.prototype, {\r\n  /**\r\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\r\n   *\r\n   * @param {Geometry}\r\n   *          geometry a <code>Geometry</code> to process.\r\n   * @return {Object} The GeoJSON representation of the Geometry.\r\n   * @memberof GeoJSONWriter\r\n   */\r\n  write (geometry) {\r\n    return this.parser.write(geometry)\r\n  }\r\n})\r\n","import GeometryFactory from '../geom/GeometryFactory'\r\nimport PrecisionModel from '../geom/PrecisionModel'\r\nimport WKTParser from './WKTParser'\r\nimport extend from '../../../../extend'\r\n\r\n/**\r\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\r\n * <p>\r\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\r\n * from either {@link Reader}s or {@link String}s. This allows it to function\r\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\r\n * in other data formats (e.g. XML).\r\n */\r\n\r\n/**\r\n * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\r\n * to allow it to create <code>Geometry</code> objects of the appropriate\r\n * implementation. In particular, the <code>GeometryFactory</code> determines\r\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\r\n * @param {GeometryFactory} geometryFactory\r\n * @constructor\r\n */\r\nexport default function WKTReader (geometryFactory) {\r\n  this.geometryFactory = geometryFactory || new GeometryFactory()\r\n  this.precisionModel = this.geometryFactory.getPrecisionModel()\r\n  this.parser = new WKTParser(this.geometryFactory)\r\n}\r\n\r\nextend(WKTReader.prototype, {\r\n  /**\r\n   * Reads a Well-Known Text representation of a {@link Geometry}\r\n   *\r\n   * @param {string}\r\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\r\n   *          Specification).\r\n   * @return {Geometry} a <code>Geometry</code> read from\r\n   *         <code>string.</code>\r\n   * @memberof WKTReader\r\n   */\r\n  read (wkt) {\r\n    var geometry = this.parser.read(wkt)\r\n\r\n    // TODO: port and use GeometryPrecisionReducer, this is a hack\r\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\r\n      this.reducePrecision(geometry)\r\n    }\r\n\r\n    return geometry\r\n  },\r\n\r\n  reducePrecision (geometry) {\r\n    if (geometry.coordinate) {\r\n      this.precisionModel.makePrecise(geometry.coordinate)\r\n    } else if (geometry.points) {\r\n      for (let i = 0, len = geometry.points.coordinates.length; i < len; i++) {\r\n        this.precisionModel.makePrecise(geometry.points.coordinates[i])\r\n      }\r\n    } else if (geometry.geometries) {\r\n      for (let i = 0, len = geometry.geometries.length; i < len; i++) {\r\n        this.reducePrecision(geometry.geometries[i])\r\n      }\r\n    }\r\n  }\r\n})\r\n","/*eslint-disable no-undef */\r\n\r\nimport Coordinate from '../geom/Coordinate'\r\nimport GeometryFactory from '../geom/GeometryFactory'\r\nimport extend from '../../../../extend'\r\n\r\nfunction p2c (p) { return [p.x, p.y] }\r\n\r\n/**\r\n * OpenLayers 3 Geometry parser and writer\r\n * @param {GeometryFactory} geometryFactory\r\n * @param {ol} olReference\r\n * @constructor\r\n */\r\nexport default function OL3Parser (geometryFactory, olReference) {\r\n  this.geometryFactory = geometryFactory || new GeometryFactory()\r\n  this.ol = olReference || (typeof ol !== 'undefined' && ol)\r\n}\r\n\r\nextend(OL3Parser.prototype, {\r\n  /**\r\n   * @param geometry {ol.geom.Geometry}\r\n   * @return {Geometry}\r\n   * @memberof OL3Parser\r\n   */\r\n  read (geometry) {\r\n    const ol = this.ol\r\n    if (geometry instanceof ol.geom.Point) {\r\n      return this.convertFromPoint(geometry)\r\n    } else if (geometry instanceof ol.geom.LineString) {\r\n      return this.convertFromLineString(geometry)\r\n    } else if (geometry instanceof ol.geom.LinearRing) {\r\n      return this.convertFromLinearRing(geometry)\r\n    } else if (geometry instanceof ol.geom.Polygon) {\r\n      return this.convertFromPolygon(geometry)\r\n    } else if (geometry instanceof ol.geom.MultiPoint) {\r\n      return this.convertFromMultiPoint(geometry)\r\n    } else if (geometry instanceof ol.geom.MultiLineString) {\r\n      return this.convertFromMultiLineString(geometry)\r\n    } else if (geometry instanceof ol.geom.MultiPolygon) {\r\n      return this.convertFromMultiPolygon(geometry)\r\n    } else if (geometry instanceof ol.geom.GeometryCollection) {\r\n      return this.convertFromCollection(geometry)\r\n    }\r\n  },\r\n\r\n  convertFromPoint (point) {\r\n    const coordinates = point.getCoordinates()\r\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]))\r\n  },\r\n\r\n  convertFromLineString (lineString) {\r\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\r\n      return new Coordinate(coordinates[0], coordinates[1])\r\n    }))\r\n  },\r\n\r\n  convertFromLinearRing (linearRing) {\r\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\r\n      return new Coordinate(coordinates[0], coordinates[1])\r\n    }))\r\n  },\r\n\r\n  convertFromPolygon (polygon) {\r\n    const linearRings = polygon.getLinearRings()\r\n    var shell = null\r\n    var holes = []\r\n    for (let i = 0; i < linearRings.length; i++) {\r\n      const linearRing = this.convertFromLinearRing(linearRings[i])\r\n      if (i === 0) {\r\n        shell = linearRing\r\n      } else {\r\n        holes.push(linearRing)\r\n      }\r\n    }\r\n    return this.geometryFactory.createPolygon(shell, holes)\r\n  },\r\n\r\n  convertFromMultiPoint (multiPoint) {\r\n    const points = multiPoint.getPoints().map(function (point) {\r\n      return this.convertFromPoint(point)\r\n    }, this)\r\n    return this.geometryFactory.createMultiPoint(points)\r\n  },\r\n\r\n  convertFromMultiLineString (multiLineString) {\r\n    const lineStrings = multiLineString.getLineStrings().map(function (lineString) {\r\n      return this.convertFromLineString(lineString)\r\n    }, this)\r\n    return this.geometryFactory.createMultiLineString(lineStrings)\r\n  },\r\n\r\n  convertFromMultiPolygon (multiPolygon) {\r\n    const polygons = multiPolygon.getPolygons().map(function (polygon) {\r\n      return this.convertFromPolygon(polygon)\r\n    }, this)\r\n    return this.geometryFactory.createMultiPolygon(polygons)\r\n  },\r\n\r\n  convertFromCollection (collection) {\r\n    const geometries = collection.getGeometries().map(function (geometry) {\r\n      return this.read(geometry)\r\n    }, this)\r\n    return this.geometryFactory.createGeometryCollection(geometries)\r\n  },\r\n\r\n  /**\r\n   * @param geometry\r\n   *          {Geometry}\r\n   * @return {ol.geom.Geometry}\r\n   * @memberof! OL3Parser\r\n   */\r\n  write (geometry) {\r\n    if (geometry.getGeometryType() === 'Point') {\r\n      return this.convertToPoint(geometry.getCoordinate())\r\n    } else if (geometry.getGeometryType() === 'LineString') {\r\n      return this.convertToLineString(geometry)\r\n    } else if (geometry.getGeometryType() === 'LinearRing') {\r\n      return this.convertToLinearRing(geometry)\r\n    } else if (geometry.getGeometryType() === 'Polygon') {\r\n      return this.convertToPolygon(geometry)\r\n    } else if (geometry.getGeometryType() === 'MultiPoint') {\r\n      return this.convertToMultiPoint(geometry)\r\n    } else if (geometry.getGeometryType() === 'MultiLineString') {\r\n      return this.convertToMultiLineString(geometry)\r\n    } else if (geometry.getGeometryType() === 'MultiPolygon') {\r\n      return this.convertToMultiPolygon(geometry)\r\n    } else if (geometry.getGeometryType() === 'GeometryCollection') {\r\n      return this.convertToCollection(geometry)\r\n    }\r\n  },\r\n\r\n  convertToPoint (coordinate) {\r\n    return new this.ol.geom.Point([coordinate.x, coordinate.y])\r\n  },\r\n\r\n  convertToLineString (lineString) {\r\n    var points = lineString.points.coordinates.map(p2c)\r\n    return new this.ol.geom.LineString(points)\r\n  },\r\n\r\n  convertToLinearRing (linearRing) {\r\n    var points = linearRing.points.coordinates.map(p2c)\r\n    return new this.ol.geom.LinearRing(points)\r\n  },\r\n\r\n  convertToPolygon (polygon) {\r\n    var rings = [polygon.shell.points.coordinates.map(p2c)]\r\n    for (let i = 0; i < polygon.holes.length; i++) {\r\n      rings.push(polygon.holes[i].points.coordinates.map(p2c))\r\n    }\r\n    return new this.ol.geom.Polygon(rings)\r\n  },\r\n\r\n  convertToMultiPoint (multiPoint) {\r\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))\r\n  },\r\n\r\n  convertToMultiLineString (multiLineString) {\r\n    var lineStrings = []\r\n    for (let i = 0; i < multiLineString.geometries.length; i++) {\r\n      lineStrings.push(this.convertToLineString(multiLineString.geometries[i]).getCoordinates())\r\n    }\r\n    return new this.ol.geom.MultiLineString(lineStrings)\r\n  },\r\n\r\n  convertToMultiPolygon (multiPolygon) {\r\n    var polygons = []\r\n    for (let i = 0; i < multiPolygon.geometries.length; i++) {\r\n      polygons.push(this.convertToPolygon(multiPolygon.geometries[i]).getCoordinates())\r\n    }\r\n    return new this.ol.geom.MultiPolygon(polygons)\r\n  },\r\n\r\n  convertToCollection (geometryCollection) {\r\n    var geometries = []\r\n    for (let i = 0; i < geometryCollection.geometries.length; i++) {\r\n      var geometry = geometryCollection.geometries[i]\r\n      geometries.push(this.write(geometry))\r\n    }\r\n    return new this.ol.geom.GeometryCollection(geometries)\r\n  }\r\n})\r\n","import hasInterface from '../../../../hasInterface';\r\nimport Collection from '../../../../java/util/Collection';\r\nimport Noder from './Noder';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport NodedSegmentString from './NodedSegmentString';\r\nimport extend from '../../../../extend';\r\nimport System from '../../../../java/lang/System';\r\nimport CoordinateArrays from '../geom/CoordinateArrays';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function ScaledNoder() {\r\n\tthis.noder = null;\r\n\tthis.scaleFactor = null;\r\n\tthis.offsetX = null;\r\n\tthis.offsetY = null;\r\n\tthis.isScaled = false;\r\n\tif (arguments.length === 2) {\r\n\t\tlet noder = arguments[0], scaleFactor = arguments[1];\r\n\t\tScaledNoder.call(this, noder, scaleFactor, 0, 0);\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet noder = arguments[0], scaleFactor = arguments[1], offsetX = arguments[2], offsetY = arguments[3];\r\n\t\tthis.noder = noder;\r\n\t\tthis.scaleFactor = scaleFactor;\r\n\t\tthis.isScaled = !this.isIntegerPrecision();\r\n\t}\r\n}\r\nextend(ScaledNoder.prototype, {\r\n\trescale: function () {\r\n\t\tif (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet segStrings = arguments[0];\r\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar ss = i.next();\r\n\t\t\t\tthis.rescale(ss.getCoordinates());\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof Array) {\r\n\t\t\tlet pts = arguments[0];\r\n\t\t\tvar p0 = null;\r\n\t\t\tvar p1 = null;\r\n\t\t\tif (pts.length === 2) {\r\n\t\t\t\tp0 = new Coordinate(pts[0]);\r\n\t\t\t\tp1 = new Coordinate(pts[1]);\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < pts.length; i++) {\r\n\t\t\t\tpts[i].x = pts[i].x / this.scaleFactor + this.offsetX;\r\n\t\t\t\tpts[i].y = pts[i].y / this.scaleFactor + this.offsetY;\r\n\t\t\t}\r\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) {\r\n\t\t\t\tSystem.out.println(pts);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tscale: function () {\r\n\t\tif (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet segStrings = arguments[0];\r\n\t\t\tvar nodedSegmentStrings = new ArrayList();\r\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar ss = i.next();\r\n\t\t\t\tnodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()));\r\n\t\t\t}\r\n\t\t\treturn nodedSegmentStrings;\r\n\t\t} else if (arguments[0] instanceof Array) {\r\n\t\t\tlet pts = arguments[0];\r\n\t\t\tvar roundPts = new Array(pts.length).fill(null);\r\n\t\t\tfor (var i = 0; i < pts.length; i++) {\r\n\t\t\t\troundPts[i] = new Coordinate(Math.round((pts[i].x - this.offsetX) * this.scaleFactor), Math.round((pts[i].y - this.offsetY) * this.scaleFactor), pts[i].z);\r\n\t\t\t}\r\n\t\t\tvar roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\r\n\t\t\treturn roundPtsNoDup;\r\n\t\t}\r\n\t},\r\n\tisIntegerPrecision: function () {\r\n\t\treturn this.scaleFactor === 1.0;\r\n\t},\r\n\tgetNodedSubstrings: function () {\r\n\t\tvar splitSS = this.noder.getNodedSubstrings();\r\n\t\tif (this.isScaled) this.rescale(splitSS);\r\n\t\treturn splitSS;\r\n\t},\r\n\tcomputeNodes: function (inputSegStrings) {\r\n\t\tvar intSegStrings = inputSegStrings;\r\n\t\tif (this.isScaled) intSegStrings = this.scale(inputSegStrings);\r\n\t\tthis.noder.computeNodes(intSegStrings);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Noder];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ScaledNoder;\r\n\t}\r\n});\r\n","import TreeSet from '../../../../java/util/TreeSet';\r\nimport LineString from '../geom/LineString';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport MultiPoint from '../geom/MultiPoint';\r\nimport extend from '../../../../extend';\r\nimport GeometryGraph from '../geomgraph/GeometryGraph';\r\nimport GeometryCollection from '../geom/GeometryCollection';\r\nimport Polygonal from '../geom/Polygonal';\r\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\r\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\r\nimport TreeMap from '../../../../java/util/TreeMap';\r\nimport MultiLineString from '../geom/MultiLineString';\r\nexport default function IsSimpleOp() {\r\n\tthis.inputGeom = null;\r\n\tthis.isClosedEndpointsInInterior = true;\r\n\tthis.nonSimpleLocation = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet geom = arguments[0];\r\n\t\tthis.inputGeom = geom;\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet geom = arguments[0], boundaryNodeRule = arguments[1];\r\n\t\tthis.inputGeom = geom;\r\n\t\tthis.isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2);\r\n\t}\r\n}\r\nextend(IsSimpleOp.prototype, {\r\n\tisSimpleMultiPoint: function (mp) {\r\n\t\tif (mp.isEmpty()) return true;\r\n\t\tvar points = new TreeSet();\r\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\r\n\t\t\tvar pt = mp.getGeometryN(i);\r\n\t\t\tvar p = pt.getCoordinate();\r\n\t\t\tif (points.contains(p)) {\r\n\t\t\t\tthis.nonSimpleLocation = p;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tpoints.add(p);\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tisSimplePolygonal: function (geom) {\r\n\t\tvar rings = LinearComponentExtracter.getLines(geom);\r\n\t\tfor (var i = rings.iterator(); i.hasNext(); ) {\r\n\t\t\tvar ring = i.next();\r\n\t\t\tif (!this.isSimpleLinearGeometry(ring)) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\thasClosedEndpointIntersection: function (graph) {\r\n\t\tvar endPoints = new TreeMap();\r\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\r\n\t\t\tvar isClosed = e.isClosed();\r\n\t\t\tvar p0 = e.getCoordinate(0);\r\n\t\t\tthis.addEndpoint(endPoints, p0, isClosed);\r\n\t\t\tvar p1 = e.getCoordinate(e.getNumPoints() - 1);\r\n\t\t\tthis.addEndpoint(endPoints, p1, isClosed);\r\n\t\t}\r\n\t\tfor (var i = endPoints.values().iterator(); i.hasNext(); ) {\r\n\t\t\tvar eiInfo = i.next();\r\n\t\t\tif (eiInfo.isClosed && eiInfo.degree !== 2) {\r\n\t\t\t\tthis.nonSimpleLocation = eiInfo.getCoordinate();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tgetNonSimpleLocation: function () {\r\n\t\treturn this.nonSimpleLocation;\r\n\t},\r\n\tisSimpleLinearGeometry: function (geom) {\r\n\t\tif (geom.isEmpty()) return true;\r\n\t\tvar graph = new GeometryGraph(0, geom);\r\n\t\tvar li = new RobustLineIntersector();\r\n\t\tvar si = graph.computeSelfNodes(li, true);\r\n\t\tif (!si.hasIntersection()) return true;\r\n\t\tif (si.hasProperIntersection()) {\r\n\t\t\tthis.nonSimpleLocation = si.getProperIntersectionPoint();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.hasNonEndpointIntersection(graph)) return false;\r\n\t\tif (this.isClosedEndpointsInInterior) {\r\n\t\t\tif (this.hasClosedEndpointIntersection(graph)) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\thasNonEndpointIntersection: function (graph) {\r\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\r\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\r\n\t\t\t\tvar ei = eiIt.next();\r\n\t\t\t\tif (!ei.isEndPoint(maxSegmentIndex)) {\r\n\t\t\t\t\tthis.nonSimpleLocation = ei.getCoordinate();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\taddEndpoint: function (endPoints, p, isClosed) {\r\n\t\tvar eiInfo = endPoints.get(p);\r\n\t\tif (eiInfo === null) {\r\n\t\t\teiInfo = new EndpointInfo(p);\r\n\t\t\tendPoints.put(p, eiInfo);\r\n\t\t}\r\n\t\teiInfo.addEndpoint(isClosed);\r\n\t},\r\n\tcomputeSimple: function (geom) {\r\n\t\tthis.nonSimpleLocation = null;\r\n\t\tif (geom.isEmpty()) return true;\r\n\t\tif (geom instanceof LineString) return this.isSimpleLinearGeometry(geom);\r\n\t\tif (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom);\r\n\t\tif (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom);\r\n\t\tif (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom);\r\n\t\tif (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom);\r\n\t\treturn true;\r\n\t},\r\n\tisSimple: function () {\r\n\t\tthis.nonSimpleLocation = null;\r\n\t\treturn this.computeSimple(this.inputGeom);\r\n\t},\r\n\tisSimpleGeometryCollection: function (geom) {\r\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\r\n\t\t\tvar comp = geom.getGeometryN(i);\r\n\t\t\tif (!this.computeSimple(comp)) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IsSimpleOp;\r\n\t}\r\n});\r\nfunction EndpointInfo() {\r\n\tthis.pt = null;\r\n\tthis.isClosed = null;\r\n\tthis.degree = null;\r\n\tlet pt = arguments[0];\r\n\tthis.pt = pt;\r\n\tthis.isClosed = false;\r\n\tthis.degree = 0;\r\n}\r\nextend(EndpointInfo.prototype, {\r\n\taddEndpoint: function (isClosed) {\r\n\t\tthis.degree++;\r\n\t\tthis.isClosed |= isClosed;\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.pt;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EndpointInfo;\r\n\t}\r\n});\r\nIsSimpleOp.EndpointInfo = EndpointInfo;\r\n","import extend from '../../../../../extend';\r\nexport default function BufferParameters() {\r\n\tthis.quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\r\n\tthis.endCapStyle = BufferParameters.CAP_ROUND;\r\n\tthis.joinStyle = BufferParameters.JOIN_ROUND;\r\n\tthis.mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\r\n\tthis._isSingleSided = false;\r\n\tthis.simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\r\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\r\n\t\tlet quadrantSegments = arguments[0];\r\n\t\tthis.setQuadrantSegments(quadrantSegments);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1];\r\n\t\tthis.setQuadrantSegments(quadrantSegments);\r\n\t\tthis.setEndCapStyle(endCapStyle);\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1], joinStyle = arguments[2], mitreLimit = arguments[3];\r\n\t\tthis.setQuadrantSegments(quadrantSegments);\r\n\t\tthis.setEndCapStyle(endCapStyle);\r\n\t\tthis.setJoinStyle(joinStyle);\r\n\t\tthis.setMitreLimit(mitreLimit);\r\n\t}\r\n}\r\nextend(BufferParameters.prototype, {\r\n\tgetEndCapStyle: function () {\r\n\t\treturn this.endCapStyle;\r\n\t},\r\n\tisSingleSided: function () {\r\n\t\treturn this._isSingleSided;\r\n\t},\r\n\tsetQuadrantSegments: function (quadSegs) {\r\n\t\tthis.quadrantSegments = quadSegs;\r\n\t\tif (this.quadrantSegments === 0) this.joinStyle = BufferParameters.JOIN_BEVEL;\r\n\t\tif (this.quadrantSegments < 0) {\r\n\t\t\tthis.joinStyle = BufferParameters.JOIN_MITRE;\r\n\t\t\tthis.mitreLimit = Math.abs(this.quadrantSegments);\r\n\t\t}\r\n\t\tif (quadSegs <= 0) {\r\n\t\t\tthis.quadrantSegments = 1;\r\n\t\t}\r\n\t\tif (this.joinStyle !== BufferParameters.JOIN_ROUND) {\r\n\t\t\tthis.quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\r\n\t\t}\r\n\t},\r\n\tgetJoinStyle: function () {\r\n\t\treturn this.joinStyle;\r\n\t},\r\n\tsetJoinStyle: function (joinStyle) {\r\n\t\tthis.joinStyle = joinStyle;\r\n\t},\r\n\tsetSimplifyFactor: function (simplifyFactor) {\r\n\t\tthis.simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\r\n\t},\r\n\tgetSimplifyFactor: function () {\r\n\t\treturn this.simplifyFactor;\r\n\t},\r\n\tgetQuadrantSegments: function () {\r\n\t\treturn this.quadrantSegments;\r\n\t},\r\n\tsetEndCapStyle: function (endCapStyle) {\r\n\t\tthis.endCapStyle = endCapStyle;\r\n\t},\r\n\tgetMitreLimit: function () {\r\n\t\treturn this.mitreLimit;\r\n\t},\r\n\tsetMitreLimit: function (mitreLimit) {\r\n\t\tthis.mitreLimit = mitreLimit;\r\n\t},\r\n\tsetSingleSided: function (isSingleSided) {\r\n\t\tthis._isSingleSided = isSingleSided;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BufferParameters;\r\n\t}\r\n});\r\nBufferParameters.bufferDistanceError = function (quadSegs) {\r\n\tvar alpha = Math.PI / 2.0 / quadSegs;\r\n\treturn 1 - Math.cos(alpha / 2.0);\r\n};\r\nBufferParameters.CAP_ROUND = 1;\r\nBufferParameters.CAP_FLAT = 2;\r\nBufferParameters.CAP_SQUARE = 3;\r\nBufferParameters.JOIN_ROUND = 1;\r\nBufferParameters.JOIN_MITRE = 2;\r\nBufferParameters.JOIN_BEVEL = 3;\r\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8;\r\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0;\r\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01;\r\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport Position from '../../geomgraph/Position';\r\nimport extend from '../../../../../extend';\r\nimport Assert from '../../util/Assert';\r\nexport default function RightmostEdgeFinder() {\r\n\tthis.minIndex = -1;\r\n\tthis.minCoord = null;\r\n\tthis.minDe = null;\r\n\tthis.orientedDe = null;\r\n}\r\nextend(RightmostEdgeFinder.prototype, {\r\n\tgetCoordinate: function () {\r\n\t\treturn this.minCoord;\r\n\t},\r\n\tgetRightmostSide: function (de, index) {\r\n\t\tvar side = this.getRightmostSideOfSegment(de, index);\r\n\t\tif (side < 0) side = this.getRightmostSideOfSegment(de, index - 1);\r\n\t\tif (side < 0) {\r\n\t\t\tthis.minCoord = null;\r\n\t\t\tthis.checkForRightmostCoordinate(de);\r\n\t\t}\r\n\t\treturn side;\r\n\t},\r\n\tfindRightmostEdgeAtVertex: function () {\r\n\t\tvar pts = this.minDe.getEdge().getCoordinates();\r\n\t\tAssert.isTrue(this.minIndex > 0 && this.minIndex < pts.length, \"rightmost point expected to be interior vertex of edge\");\r\n\t\tvar pPrev = pts[this.minIndex - 1];\r\n\t\tvar pNext = pts[this.minIndex + 1];\r\n\t\tvar orientation = CGAlgorithms.computeOrientation(this.minCoord, pNext, pPrev);\r\n\t\tvar usePrev = false;\r\n\t\tif (pPrev.y < this.minCoord.y && pNext.y < this.minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\r\n\t\t\tusePrev = true;\r\n\t\t} else if (pPrev.y > this.minCoord.y && pNext.y > this.minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\r\n\t\t\tusePrev = true;\r\n\t\t}\r\n\t\tif (usePrev) {\r\n\t\t\tthis.minIndex = this.minIndex - 1;\r\n\t\t}\r\n\t},\r\n\tgetRightmostSideOfSegment: function (de, i) {\r\n\t\tvar e = de.getEdge();\r\n\t\tvar coord = e.getCoordinates();\r\n\t\tif (i < 0 || i + 1 >= coord.length) return -1;\r\n\t\tif (coord[i].y === coord[i + 1].y) return -1;\r\n\t\tvar pos = Position.LEFT;\r\n\t\tif (coord[i].y < coord[i + 1].y) pos = Position.RIGHT;\r\n\t\treturn pos;\r\n\t},\r\n\tgetEdge: function () {\r\n\t\treturn this.orientedDe;\r\n\t},\r\n\tcheckForRightmostCoordinate: function (de) {\r\n\t\tvar coord = de.getEdge().getCoordinates();\r\n\t\tfor (var i = 0; i < coord.length - 1; i++) {\r\n\t\t\tif (this.minCoord === null || coord[i].x > this.minCoord.x) {\r\n\t\t\t\tthis.minDe = de;\r\n\t\t\t\tthis.minIndex = i;\r\n\t\t\t\tthis.minCoord = coord[i];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tfindRightmostEdgeAtNode: function () {\r\n\t\tvar node = this.minDe.getNode();\r\n\t\tvar star = node.getEdges();\r\n\t\tthis.minDe = star.getRightmostEdge();\r\n\t\tif (!this.minDe.isForward()) {\r\n\t\t\tthis.minDe = this.minDe.getSym();\r\n\t\t\tthis.minIndex = this.minDe.getEdge().getCoordinates().length - 1;\r\n\t\t}\r\n\t},\r\n\tfindEdge: function (dirEdgeList) {\r\n\t\tfor (var i = dirEdgeList.iterator(); i.hasNext(); ) {\r\n\t\t\tvar de = i.next();\r\n\t\t\tif (!de.isForward()) continue;\r\n\t\t\tthis.checkForRightmostCoordinate(de);\r\n\t\t}\r\n\t\tAssert.isTrue(this.minIndex !== 0 || this.minCoord.equals(this.minDe.getCoordinate()), \"inconsistency in rightmost processing\");\r\n\t\tif (this.minIndex === 0) {\r\n\t\t\tthis.findRightmostEdgeAtNode();\r\n\t\t} else {\r\n\t\t\tthis.findRightmostEdgeAtVertex();\r\n\t\t}\r\n\t\tthis.orientedDe = this.minDe;\r\n\t\tvar rightmostSide = this.getRightmostSide(this.minDe, this.minIndex);\r\n\t\tif (rightmostSide === Position.LEFT) {\r\n\t\t\tthis.orientedDe = this.minDe.getSym();\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RightmostEdgeFinder;\r\n\t}\r\n});\r\n","export default function LinkedList () {\r\n  this.array_ = []\r\n}\r\nLinkedList.prototype.addLast = function (e) {\r\n  this.array_.push(e)\r\n}\r\nLinkedList.prototype.removeFirst = function () {\r\n  return this.array_.shift()\r\n}\r\nLinkedList.prototype.isEmpty = function () {\r\n  return this.array_.length === 0\r\n}\r\n","import HashSet from '../../../../../java/util/HashSet';\r\nimport Position from '../../geomgraph/Position';\r\nimport Stack from '../../../../../java/util/Stack';\r\nimport RightmostEdgeFinder from './RightmostEdgeFinder';\r\nimport TopologyException from '../../geom/TopologyException';\r\nimport extend from '../../../../../extend';\r\nimport LinkedList from '../../../../../java/util/LinkedList';\r\nimport Comparable from '../../../../../java/lang/Comparable';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Envelope from '../../geom/Envelope';\r\nexport default function BufferSubgraph() {\r\n\tthis.finder = null;\r\n\tthis.dirEdgeList = new ArrayList();\r\n\tthis.nodes = new ArrayList();\r\n\tthis.rightMostCoord = null;\r\n\tthis.env = null;\r\n\tthis.finder = new RightmostEdgeFinder();\r\n}\r\nextend(BufferSubgraph.prototype, {\r\n\tclearVisitedEdges: function () {\r\n\t\tfor (var it = this.dirEdgeList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tde.setVisited(false);\r\n\t\t}\r\n\t},\r\n\tgetRightmostCoordinate: function () {\r\n\t\treturn this.rightMostCoord;\r\n\t},\r\n\tcomputeNodeDepth: function (n) {\r\n\t\tvar startEdge = null;\r\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\r\n\t\t\tvar de = i.next();\r\n\t\t\tif (de.isVisited() || de.getSym().isVisited()) {\r\n\t\t\t\tstartEdge = de;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (startEdge === null) throw new TopologyException(\"unable to find edge to compute depths at \" + n.getCoordinate());\r\n\t\tn.getEdges().computeDepths(startEdge);\r\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\r\n\t\t\tvar de = i.next();\r\n\t\t\tde.setVisited(true);\r\n\t\t\tthis.copySymDepths(de);\r\n\t\t}\r\n\t},\r\n\tcomputeDepth: function (outsideDepth) {\r\n\t\tthis.clearVisitedEdges();\r\n\t\tvar de = this.finder.getEdge();\r\n\t\tvar n = de.getNode();\r\n\t\tvar label = de.getLabel();\r\n\t\tde.setEdgeDepths(Position.RIGHT, outsideDepth);\r\n\t\tthis.copySymDepths(de);\r\n\t\tthis.computeDepths(de);\r\n\t},\r\n\tcreate: function (node) {\r\n\t\tthis.addReachable(node);\r\n\t\tthis.finder.findEdge(this.dirEdgeList);\r\n\t\tthis.rightMostCoord = this.finder.getCoordinate();\r\n\t},\r\n\tfindResultEdges: function () {\r\n\t\tfor (var it = this.dirEdgeList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tif (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\r\n\t\t\t\tde.setInResult(true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputeDepths: function (startEdge) {\r\n\t\tvar nodesVisited = new HashSet();\r\n\t\tvar nodeQueue = new LinkedList();\r\n\t\tvar startNode = startEdge.getNode();\r\n\t\tnodeQueue.addLast(startNode);\r\n\t\tnodesVisited.add(startNode);\r\n\t\tstartEdge.setVisited(true);\r\n\t\twhile (!nodeQueue.isEmpty()) {\r\n\t\t\tvar n = nodeQueue.removeFirst();\r\n\t\t\tnodesVisited.add(n);\r\n\t\t\tthis.computeNodeDepth(n);\r\n\t\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar de = i.next();\r\n\t\t\t\tvar sym = de.getSym();\r\n\t\t\t\tif (sym.isVisited()) continue;\r\n\t\t\t\tvar adjNode = sym.getNode();\r\n\t\t\t\tif (!nodesVisited.contains(adjNode)) {\r\n\t\t\t\t\tnodeQueue.addLast(adjNode);\r\n\t\t\t\t\tnodesVisited.add(adjNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcompareTo: function (o) {\r\n\t\tvar graph = o;\r\n\t\tif (this.rightMostCoord.x < graph.rightMostCoord.x) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (this.rightMostCoord.x > graph.rightMostCoord.x) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\tgetEnvelope: function () {\r\n\t\tif (this.env === null) {\r\n\t\t\tvar edgeEnv = new Envelope();\r\n\t\t\tfor (var it = this.dirEdgeList.iterator(); it.hasNext(); ) {\r\n\t\t\t\tvar dirEdge = it.next();\r\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\r\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\r\n\t\t\t\t\tedgeEnv.expandToInclude(pts[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.env = edgeEnv;\r\n\t\t}\r\n\t\treturn this.env;\r\n\t},\r\n\taddReachable: function (startNode) {\r\n\t\tvar nodeStack = new Stack();\r\n\t\tnodeStack.add(startNode);\r\n\t\twhile (!nodeStack.empty()) {\r\n\t\t\tvar node = nodeStack.pop();\r\n\t\t\tthis.add(node, nodeStack);\r\n\t\t}\r\n\t},\r\n\tcopySymDepths: function (de) {\r\n\t\tvar sym = de.getSym();\r\n\t\tsym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\r\n\t\tsym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\r\n\t},\r\n\tadd: function (node, nodeStack) {\r\n\t\tnode.setVisited(true);\r\n\t\tthis.nodes.add(node);\r\n\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\r\n\t\t\tvar de = i.next();\r\n\t\t\tthis.dirEdgeList.add(de);\r\n\t\t\tvar sym = de.getSym();\r\n\t\t\tvar symNode = sym.getNode();\r\n\t\t\tif (!symNode.isVisited()) nodeStack.push(symNode);\r\n\t\t}\r\n\t},\r\n\tgetNodes: function () {\r\n\t\treturn this.nodes;\r\n\t},\r\n\tgetDirectedEdges: function () {\r\n\t\treturn this.dirEdgeList;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BufferSubgraph;\r\n\t}\r\n});\r\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport CoordinateList from '../../geom/CoordinateList';\r\nimport extend from '../../../../../extend';\r\nexport default function BufferInputLineSimplifier() {\r\n\tthis.inputLine = null;\r\n\tthis.distanceTol = null;\r\n\tthis.isDeleted = null;\r\n\tthis.angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\r\n\tlet inputLine = arguments[0];\r\n\tthis.inputLine = inputLine;\r\n}\r\nextend(BufferInputLineSimplifier.prototype, {\r\n\tisDeletable: function (i0, i1, i2, distanceTol) {\r\n\t\tvar p0 = this.inputLine[i0];\r\n\t\tvar p1 = this.inputLine[i1];\r\n\t\tvar p2 = this.inputLine[i2];\r\n\t\tif (!this.isConcave(p0, p1, p2)) return false;\r\n\t\tif (!this.isShallow(p0, p1, p2, distanceTol)) return false;\r\n\t\treturn this.isShallowSampled(p0, p1, i0, i2, distanceTol);\r\n\t},\r\n\tdeleteShallowConcavities: function () {\r\n\t\tvar index = 1;\r\n\t\tvar maxIndex = this.inputLine.length - 1;\r\n\t\tvar midIndex = this.findNextNonDeletedIndex(index);\r\n\t\tvar lastIndex = this.findNextNonDeletedIndex(midIndex);\r\n\t\tvar isChanged = false;\r\n\t\twhile (lastIndex < this.inputLine.length) {\r\n\t\t\tvar isMiddleVertexDeleted = false;\r\n\t\t\tif (this.isDeletable(index, midIndex, lastIndex, this.distanceTol)) {\r\n\t\t\t\tthis.isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\r\n\t\t\t\tisMiddleVertexDeleted = true;\r\n\t\t\t\tisChanged = true;\r\n\t\t\t}\r\n\t\t\tif (isMiddleVertexDeleted) index = lastIndex; else index = midIndex;\r\n\t\t\tmidIndex = this.findNextNonDeletedIndex(index);\r\n\t\t\tlastIndex = this.findNextNonDeletedIndex(midIndex);\r\n\t\t}\r\n\t\treturn isChanged;\r\n\t},\r\n\tisShallowConcavity: function (p0, p1, p2, distanceTol) {\r\n\t\tvar orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\r\n\t\tvar isAngleToSimplify = orientation === this.angleOrientation;\r\n\t\tif (!isAngleToSimplify) return false;\r\n\t\tvar dist = CGAlgorithms.distancePointLine(p1, p0, p2);\r\n\t\treturn dist < distanceTol;\r\n\t},\r\n\tisShallowSampled: function (p0, p2, i0, i2, distanceTol) {\r\n\t\tvar inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\r\n\t\tif (inc <= 0) inc = 1;\r\n\t\tfor (var i = i0; i < i2; i += inc) {\r\n\t\t\tif (!this.isShallow(p0, p2, this.inputLine[i], distanceTol)) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tisConcave: function (p0, p1, p2) {\r\n\t\tvar orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\r\n\t\tvar isConcave = orientation === this.angleOrientation;\r\n\t\treturn isConcave;\r\n\t},\r\n\tsimplify: function (distanceTol) {\r\n\t\tthis.distanceTol = Math.abs(distanceTol);\r\n\t\tif (distanceTol < 0) this.angleOrientation = CGAlgorithms.CLOCKWISE;\r\n\t\tthis.isDeleted = new Array(this.inputLine.length).fill(null);\r\n\t\tvar isChanged = false;\r\n\t\tdo {\r\n\t\t\tisChanged = this.deleteShallowConcavities();\r\n\t\t} while (isChanged);\r\n\t\treturn this.collapseLine();\r\n\t},\r\n\tfindNextNonDeletedIndex: function (index) {\r\n\t\tvar next = index + 1;\r\n\t\twhile (next < this.inputLine.length && this.isDeleted[next] === BufferInputLineSimplifier.DELETE) next++;\r\n\t\treturn next;\r\n\t},\r\n\tisShallow: function (p0, p1, p2, distanceTol) {\r\n\t\tvar dist = CGAlgorithms.distancePointLine(p1, p0, p2);\r\n\t\treturn dist < distanceTol;\r\n\t},\r\n\tcollapseLine: function () {\r\n\t\tvar coordList = new CoordinateList();\r\n\t\tfor (var i = 0; i < this.inputLine.length; i++) {\r\n\t\t\tif (this.isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this.inputLine[i]);\r\n\t\t}\r\n\t\treturn coordList.toCoordinateArray();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BufferInputLineSimplifier;\r\n\t}\r\n});\r\nBufferInputLineSimplifier.simplify = function (inputLine, distanceTol) {\r\n\tvar simp = new BufferInputLineSimplifier(inputLine);\r\n\treturn simp.simplify(distanceTol);\r\n};\r\nBufferInputLineSimplifier.INIT = 0;\r\nBufferInputLineSimplifier.DELETE = 1;\r\nBufferInputLineSimplifier.KEEP = 1;\r\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10;\r\n","import GeometryFactory from '../../geom/GeometryFactory';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nexport default function OffsetSegmentString() {\r\n\tthis.ptList = null;\r\n\tthis.precisionModel = null;\r\n\tthis.minimimVertexDistance = 0.0;\r\n\tthis.ptList = new ArrayList();\r\n}\r\nextend(OffsetSegmentString.prototype, {\r\n\tgetCoordinates: function () {\r\n\t\tvar coord = this.ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\r\n\t\treturn coord;\r\n\t},\r\n\tsetPrecisionModel: function (precisionModel) {\r\n\t\tthis.precisionModel = precisionModel;\r\n\t},\r\n\taddPt: function (pt) {\r\n\t\tvar bufPt = new Coordinate(pt);\r\n\t\tthis.precisionModel.makePrecise(bufPt);\r\n\t\tif (this.isRedundant(bufPt)) return null;\r\n\t\tthis.ptList.add(bufPt);\r\n\t},\r\n\treverse: function () {},\r\n\taddPts: function (pt, isForward) {\r\n\t\tif (isForward) {\r\n\t\t\tfor (var i = 0; i < pt.length; i++) {\r\n\t\t\t\tthis.addPt(pt[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (var i = pt.length - 1; i >= 0; i--) {\r\n\t\t\t\tthis.addPt(pt[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisRedundant: function (pt) {\r\n\t\tif (this.ptList.size() < 1) return false;\r\n\t\tvar lastPt = this.ptList.get(this.ptList.size() - 1);\r\n\t\tvar ptDist = pt.distance(lastPt);\r\n\t\tif (ptDist < this.minimimVertexDistance) return true;\r\n\t\treturn false;\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar fact = new GeometryFactory();\r\n\t\tvar line = fact.createLineString(this.getCoordinates());\r\n\t\treturn line.toString();\r\n\t},\r\n\tcloseRing: function () {\r\n\t\tif (this.ptList.size() < 1) return null;\r\n\t\tvar startPt = new Coordinate(this.ptList.get(0));\r\n\t\tvar lastPt = this.ptList.get(this.ptList.size() - 1);\r\n\t\tvar last2Pt = null;\r\n\t\tif (this.ptList.size() >= 2) last2Pt = this.ptList.get(this.ptList.size() - 2);\r\n\t\tif (startPt.equals(lastPt)) return null;\r\n\t\tthis.ptList.add(startPt);\r\n\t},\r\n\tsetMinimumVertexDistance: function (minimimVertexDistance) {\r\n\t\tthis.minimimVertexDistance = minimimVertexDistance;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn OffsetSegmentString;\r\n\t}\r\n});\r\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null);\r\n","import BufferParameters from './BufferParameters';\r\nimport NotRepresentableException from '../../algorithm/NotRepresentableException';\r\nimport CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport Position from '../../geomgraph/Position';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport extend from '../../../../../extend';\r\nimport OffsetSegmentString from './OffsetSegmentString';\r\nimport LineSegment from '../../geom/LineSegment';\r\nimport Angle from '../../algorithm/Angle';\r\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\r\nimport HCoordinate from '../../algorithm/HCoordinate';\r\nexport default function OffsetSegmentGenerator() {\r\n\tthis.maxCurveSegmentError = 0.0;\r\n\tthis.filletAngleQuantum = null;\r\n\tthis.closingSegLengthFactor = 1;\r\n\tthis.segList = null;\r\n\tthis.distance = 0.0;\r\n\tthis.precisionModel = null;\r\n\tthis.bufParams = null;\r\n\tthis.li = null;\r\n\tthis.s0 = null;\r\n\tthis.s1 = null;\r\n\tthis.s2 = null;\r\n\tthis.seg0 = new LineSegment();\r\n\tthis.seg1 = new LineSegment();\r\n\tthis.offset0 = new LineSegment();\r\n\tthis.offset1 = new LineSegment();\r\n\tthis.side = 0;\r\n\tthis._hasNarrowConcaveAngle = false;\r\n\tlet precisionModel = arguments[0], bufParams = arguments[1], distance = arguments[2];\r\n\tthis.precisionModel = precisionModel;\r\n\tthis.bufParams = bufParams;\r\n\tthis.li = new RobustLineIntersector();\r\n\tthis.filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\r\n\tif (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this.closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;\r\n\tthis.init(distance);\r\n}\r\nextend(OffsetSegmentGenerator.prototype, {\r\n\taddNextSegment: function (p, addStartPoint) {\r\n\t\tthis.s0 = this.s1;\r\n\t\tthis.s1 = this.s2;\r\n\t\tthis.s2 = p;\r\n\t\tthis.seg0.setCoordinates(this.s0, this.s1);\r\n\t\tthis.computeOffsetSegment(this.seg0, this.side, this.distance, this.offset0);\r\n\t\tthis.seg1.setCoordinates(this.s1, this.s2);\r\n\t\tthis.computeOffsetSegment(this.seg1, this.side, this.distance, this.offset1);\r\n\t\tif (this.s1.equals(this.s2)) return null;\r\n\t\tvar orientation = CGAlgorithms.computeOrientation(this.s0, this.s1, this.s2);\r\n\t\tvar outsideTurn = orientation === CGAlgorithms.CLOCKWISE && this.side === Position.LEFT || orientation === CGAlgorithms.COUNTERCLOCKWISE && this.side === Position.RIGHT;\r\n\t\tif (orientation === 0) {\r\n\t\t\tthis.addCollinear(addStartPoint);\r\n\t\t} else if (outsideTurn) {\r\n\t\t\tthis.addOutsideTurn(orientation, addStartPoint);\r\n\t\t} else {\r\n\t\t\tthis.addInsideTurn(orientation, addStartPoint);\r\n\t\t}\r\n\t},\r\n\taddLineEndCap: function (p0, p1) {\r\n\t\tvar seg = new LineSegment(p0, p1);\r\n\t\tvar offsetL = new LineSegment();\r\n\t\tthis.computeOffsetSegment(seg, Position.LEFT, this.distance, offsetL);\r\n\t\tvar offsetR = new LineSegment();\r\n\t\tthis.computeOffsetSegment(seg, Position.RIGHT, this.distance, offsetR);\r\n\t\tvar dx = p1.x - p0.x;\r\n\t\tvar dy = p1.y - p0.y;\r\n\t\tvar angle = Math.atan2(dy, dx);\r\n\t\tswitch (this.bufParams.getEndCapStyle()) {\r\n\t\t\tcase BufferParameters.CAP_ROUND:\r\n\t\t\t\tthis.segList.addPt(offsetL.p1);\r\n\t\t\t\tthis.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this.distance);\r\n\t\t\t\tthis.segList.addPt(offsetR.p1);\r\n\t\t\t\tbreak;\r\n\t\t\tcase BufferParameters.CAP_FLAT:\r\n\t\t\t\tthis.segList.addPt(offsetL.p1);\r\n\t\t\t\tthis.segList.addPt(offsetR.p1);\r\n\t\t\t\tbreak;\r\n\t\t\tcase BufferParameters.CAP_SQUARE:\r\n\t\t\t\tvar squareCapSideOffset = new Coordinate();\r\n\t\t\t\tsquareCapSideOffset.x = Math.abs(this.distance) * Math.cos(angle);\r\n\t\t\t\tsquareCapSideOffset.y = Math.abs(this.distance) * Math.sin(angle);\r\n\t\t\t\tvar squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\r\n\t\t\t\tvar squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\r\n\t\t\t\tthis.segList.addPt(squareCapLOffset);\r\n\t\t\t\tthis.segList.addPt(squareCapROffset);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\tgetCoordinates: function () {\r\n\t\tvar pts = this.segList.getCoordinates();\r\n\t\treturn pts;\r\n\t},\r\n\taddMitreJoin: function (p, offset0, offset1, distance) {\r\n\t\tvar isMitreWithinLimit = true;\r\n\t\tvar intPt = null;\r\n\t\ttry {\r\n\t\t\tintPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\r\n\t\t\tvar mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\r\n\t\t\tif (mitreRatio > this.bufParams.getMitreLimit()) isMitreWithinLimit = false;\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex instanceof NotRepresentableException) {\r\n\t\t\t\tintPt = new Coordinate(0, 0);\r\n\t\t\t\tisMitreWithinLimit = false;\r\n\t\t\t} else throw ex;\r\n\t\t} finally {}\r\n\t\tif (isMitreWithinLimit) {\r\n\t\t\tthis.segList.addPt(intPt);\r\n\t\t} else {\r\n\t\t\tthis.addLimitedMitreJoin(offset0, offset1, distance, this.bufParams.getMitreLimit());\r\n\t\t}\r\n\t},\r\n\taddFilletCorner: function (p, p0, p1, direction, radius) {\r\n\t\tvar dx0 = p0.x - p.x;\r\n\t\tvar dy0 = p0.y - p.y;\r\n\t\tvar startAngle = Math.atan2(dy0, dx0);\r\n\t\tvar dx1 = p1.x - p.x;\r\n\t\tvar dy1 = p1.y - p.y;\r\n\t\tvar endAngle = Math.atan2(dy1, dx1);\r\n\t\tif (direction === CGAlgorithms.CLOCKWISE) {\r\n\t\t\tif (startAngle <= endAngle) startAngle += 2.0 * Math.PI;\r\n\t\t} else {\r\n\t\t\tif (startAngle >= endAngle) startAngle -= 2.0 * Math.PI;\r\n\t\t}\r\n\t\tthis.segList.addPt(p0);\r\n\t\tthis.addFilletArc(p, startAngle, endAngle, direction, radius);\r\n\t\tthis.segList.addPt(p1);\r\n\t},\r\n\taddOutsideTurn: function (orientation, addStartPoint) {\r\n\t\tif (this.offset0.p1.distance(this.offset1.p0) < this.distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\r\n\t\t\tthis.segList.addPt(this.offset0.p1);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (this.bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\r\n\t\t\tthis.addMitreJoin(this.s1, this.offset0, this.offset1, this.distance);\r\n\t\t} else if (this.bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\r\n\t\t\tthis.addBevelJoin(this.offset0, this.offset1);\r\n\t\t} else {\r\n\t\t\tif (addStartPoint) this.segList.addPt(this.offset0.p1);\r\n\t\t\tthis.addFilletCorner(this.s1, this.offset0.p1, this.offset1.p0, orientation, this.distance);\r\n\t\t\tthis.segList.addPt(this.offset1.p0);\r\n\t\t}\r\n\t},\r\n\tcreateSquare: function (p) {\r\n\t\tthis.segList.addPt(new Coordinate(p.x + this.distance, p.y + this.distance));\r\n\t\tthis.segList.addPt(new Coordinate(p.x + this.distance, p.y - this.distance));\r\n\t\tthis.segList.addPt(new Coordinate(p.x - this.distance, p.y - this.distance));\r\n\t\tthis.segList.addPt(new Coordinate(p.x - this.distance, p.y + this.distance));\r\n\t\tthis.segList.closeRing();\r\n\t},\r\n\taddSegments: function (pt, isForward) {\r\n\t\tthis.segList.addPts(pt, isForward);\r\n\t},\r\n\taddFirstSegment: function () {\r\n\t\tthis.segList.addPt(this.offset1.p0);\r\n\t},\r\n\taddLastSegment: function () {\r\n\t\tthis.segList.addPt(this.offset1.p1);\r\n\t},\r\n\tinitSideSegments: function (s1, s2, side) {\r\n\t\tthis.s1 = s1;\r\n\t\tthis.s2 = s2;\r\n\t\tthis.side = side;\r\n\t\tthis.seg1.setCoordinates(s1, s2);\r\n\t\tthis.computeOffsetSegment(this.seg1, side, this.distance, this.offset1);\r\n\t},\r\n\taddLimitedMitreJoin: function (offset0, offset1, distance, mitreLimit) {\r\n\t\tvar basePt = this.seg0.p1;\r\n\t\tvar ang0 = Angle.angle(basePt, this.seg0.p0);\r\n\t\tvar ang1 = Angle.angle(basePt, this.seg1.p1);\r\n\t\tvar angDiff = Angle.angleBetweenOriented(this.seg0.p0, basePt, this.seg1.p1);\r\n\t\tvar angDiffHalf = angDiff / 2;\r\n\t\tvar midAng = Angle.normalize(ang0 + angDiffHalf);\r\n\t\tvar mitreMidAng = Angle.normalize(midAng + Math.PI);\r\n\t\tvar mitreDist = mitreLimit * distance;\r\n\t\tvar bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\r\n\t\tvar bevelHalfLen = distance - bevelDelta;\r\n\t\tvar bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\r\n\t\tvar bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\r\n\t\tvar bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\r\n\t\tvar mitreMidLine = new LineSegment(basePt, bevelMidPt);\r\n\t\tvar bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\r\n\t\tvar bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\r\n\t\tif (this.side === Position.LEFT) {\r\n\t\t\tthis.segList.addPt(bevelEndLeft);\r\n\t\t\tthis.segList.addPt(bevelEndRight);\r\n\t\t} else {\r\n\t\t\tthis.segList.addPt(bevelEndRight);\r\n\t\t\tthis.segList.addPt(bevelEndLeft);\r\n\t\t}\r\n\t},\r\n\tcomputeOffsetSegment: function (seg, side, distance, offset) {\r\n\t\tvar sideSign = side === Position.LEFT ? 1 : -1;\r\n\t\tvar dx = seg.p1.x - seg.p0.x;\r\n\t\tvar dy = seg.p1.y - seg.p0.y;\r\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\r\n\t\tvar ux = sideSign * distance * dx / len;\r\n\t\tvar uy = sideSign * distance * dy / len;\r\n\t\toffset.p0.x = seg.p0.x - uy;\r\n\t\toffset.p0.y = seg.p0.y + ux;\r\n\t\toffset.p1.x = seg.p1.x - uy;\r\n\t\toffset.p1.y = seg.p1.y + ux;\r\n\t},\r\n\taddFilletArc: function (p, startAngle, endAngle, direction, radius) {\r\n\t\tvar directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\r\n\t\tvar totalAngle = Math.abs(startAngle - endAngle);\r\n\t\tvar nSegs = Math.trunc(totalAngle / this.filletAngleQuantum + 0.5);\r\n\t\tif (nSegs < 1) return null;\r\n\t\tvar initAngle = null, currAngleInc = null;\r\n\t\tinitAngle = 0.0;\r\n\t\tcurrAngleInc = totalAngle / nSegs;\r\n\t\tvar currAngle = initAngle;\r\n\t\tvar pt = new Coordinate();\r\n\t\twhile (currAngle < totalAngle) {\r\n\t\t\tvar angle = startAngle + directionFactor * currAngle;\r\n\t\t\tpt.x = p.x + radius * Math.cos(angle);\r\n\t\t\tpt.y = p.y + radius * Math.sin(angle);\r\n\t\t\tthis.segList.addPt(pt);\r\n\t\t\tcurrAngle += currAngleInc;\r\n\t\t}\r\n\t},\r\n\taddInsideTurn: function (orientation, addStartPoint) {\r\n\t\tthis.li.computeIntersection(this.offset0.p0, this.offset0.p1, this.offset1.p0, this.offset1.p1);\r\n\t\tif (this.li.hasIntersection()) {\r\n\t\t\tthis.segList.addPt(this.li.getIntersection(0));\r\n\t\t} else {\r\n\t\t\tthis._hasNarrowConcaveAngle = true;\r\n\t\t\tif (this.offset0.p1.distance(this.offset1.p0) < this.distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\r\n\t\t\t\tthis.segList.addPt(this.offset0.p1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.segList.addPt(this.offset0.p1);\r\n\t\t\t\tif (this.closingSegLengthFactor > 0) {\r\n\t\t\t\t\tvar mid0 = new Coordinate((this.closingSegLengthFactor * this.offset0.p1.x + this.s1.x) / (this.closingSegLengthFactor + 1), (this.closingSegLengthFactor * this.offset0.p1.y + this.s1.y) / (this.closingSegLengthFactor + 1));\r\n\t\t\t\t\tthis.segList.addPt(mid0);\r\n\t\t\t\t\tvar mid1 = new Coordinate((this.closingSegLengthFactor * this.offset1.p0.x + this.s1.x) / (this.closingSegLengthFactor + 1), (this.closingSegLengthFactor * this.offset1.p0.y + this.s1.y) / (this.closingSegLengthFactor + 1));\r\n\t\t\t\t\tthis.segList.addPt(mid1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.segList.addPt(this.s1);\r\n\t\t\t\t}\r\n\t\t\t\tthis.segList.addPt(this.offset1.p0);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreateCircle: function (p) {\r\n\t\tvar pt = new Coordinate(p.x + this.distance, p.y);\r\n\t\tthis.segList.addPt(pt);\r\n\t\tthis.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this.distance);\r\n\t\tthis.segList.closeRing();\r\n\t},\r\n\taddBevelJoin: function (offset0, offset1) {\r\n\t\tthis.segList.addPt(offset0.p1);\r\n\t\tthis.segList.addPt(offset1.p0);\r\n\t},\r\n\tinit: function (distance) {\r\n\t\tthis.distance = distance;\r\n\t\tthis.maxCurveSegmentError = distance * (1 - Math.cos(this.filletAngleQuantum / 2.0));\r\n\t\tthis.segList = new OffsetSegmentString();\r\n\t\tthis.segList.setPrecisionModel(this.precisionModel);\r\n\t\tthis.segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\r\n\t},\r\n\taddCollinear: function (addStartPoint) {\r\n\t\tthis.li.computeIntersection(this.s0, this.s1, this.s1, this.s2);\r\n\t\tvar numInt = this.li.getIntersectionNum();\r\n\t\tif (numInt >= 2) {\r\n\t\t\tif (this.bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this.bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\r\n\t\t\t\tif (addStartPoint) this.segList.addPt(this.offset0.p1);\r\n\t\t\t\tthis.segList.addPt(this.offset1.p0);\r\n\t\t\t} else {\r\n\t\t\t\tthis.addFilletCorner(this.s1, this.offset0.p1, this.offset1.p0, CGAlgorithms.CLOCKWISE, this.distance);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcloseRing: function () {\r\n\t\tthis.segList.closeRing();\r\n\t},\r\n\thasNarrowConcaveAngle: function () {\r\n\t\treturn this._hasNarrowConcaveAngle;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn OffsetSegmentGenerator;\r\n\t}\r\n});\r\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3;\r\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3;\r\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6;\r\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80;\r\n","import BufferParameters from './BufferParameters';\r\nimport Position from '../../geomgraph/Position';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport extend from '../../../../../extend';\r\nimport BufferInputLineSimplifier from './BufferInputLineSimplifier';\r\nimport CoordinateArrays from '../../geom/CoordinateArrays';\r\nimport OffsetSegmentGenerator from './OffsetSegmentGenerator';\r\nexport default function OffsetCurveBuilder() {\r\n\tthis.distance = 0.0;\r\n\tthis.precisionModel = null;\r\n\tthis.bufParams = null;\r\n\tlet precisionModel = arguments[0], bufParams = arguments[1];\r\n\tthis.precisionModel = precisionModel;\r\n\tthis.bufParams = bufParams;\r\n}\r\nextend(OffsetCurveBuilder.prototype, {\r\n\tgetOffsetCurve: function (inputPts, distance) {\r\n\t\tthis.distance = distance;\r\n\t\tif (distance === 0.0) return null;\r\n\t\tvar isRightSide = distance < 0.0;\r\n\t\tvar posDistance = Math.abs(distance);\r\n\t\tvar segGen = this.getSegGen(posDistance);\r\n\t\tif (inputPts.length <= 1) {\r\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\r\n\t\t} else {\r\n\t\t\tthis.computeOffsetCurve(inputPts, isRightSide, segGen);\r\n\t\t}\r\n\t\tvar curvePts = segGen.getCoordinates();\r\n\t\tif (isRightSide) CoordinateArrays.reverse(curvePts);\r\n\t\treturn curvePts;\r\n\t},\r\n\tcomputeSingleSidedBufferCurve: function (inputPts, isRightSide, segGen) {\r\n\t\tvar distTol = this.simplifyTolerance(this.distance);\r\n\t\tif (isRightSide) {\r\n\t\t\tsegGen.addSegments(inputPts, true);\r\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\r\n\t\t\tvar n2 = simp2.length - 1;\r\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\r\n\t\t\tsegGen.addFirstSegment();\r\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\r\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsegGen.addSegments(inputPts, false);\r\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\r\n\t\t\tvar n1 = simp1.length - 1;\r\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\r\n\t\t\tsegGen.addFirstSegment();\r\n\t\t\tfor (var i = 2; i <= n1; i++) {\r\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsegGen.addLastSegment();\r\n\t\tsegGen.closeRing();\r\n\t},\r\n\tcomputeRingBufferCurve: function (inputPts, side, segGen) {\r\n\t\tvar distTol = this.simplifyTolerance(this.distance);\r\n\t\tif (side === Position.RIGHT) distTol = -distTol;\r\n\t\tvar simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\r\n\t\tvar n = simp.length - 1;\r\n\t\tsegGen.initSideSegments(simp[n - 1], simp[0], side);\r\n\t\tfor (var i = 1; i <= n; i++) {\r\n\t\t\tvar addStartPoint = i !== 1;\r\n\t\t\tsegGen.addNextSegment(simp[i], addStartPoint);\r\n\t\t}\r\n\t\tsegGen.closeRing();\r\n\t},\r\n\tcomputeLineBufferCurve: function (inputPts, segGen) {\r\n\t\tvar distTol = this.simplifyTolerance(this.distance);\r\n\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\r\n\t\tvar n1 = simp1.length - 1;\r\n\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\r\n\t\tfor (var i = 2; i <= n1; i++) {\r\n\t\t\tsegGen.addNextSegment(simp1[i], true);\r\n\t\t}\r\n\t\tsegGen.addLastSegment();\r\n\t\tsegGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\r\n\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\r\n\t\tvar n2 = simp2.length - 1;\r\n\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\r\n\t\tfor (var i = n2 - 2; i >= 0; i--) {\r\n\t\t\tsegGen.addNextSegment(simp2[i], true);\r\n\t\t}\r\n\t\tsegGen.addLastSegment();\r\n\t\tsegGen.addLineEndCap(simp2[1], simp2[0]);\r\n\t\tsegGen.closeRing();\r\n\t},\r\n\tcomputePointCurve: function (pt, segGen) {\r\n\t\tswitch (this.bufParams.getEndCapStyle()) {\r\n\t\t\tcase BufferParameters.CAP_ROUND:\r\n\t\t\t\tsegGen.createCircle(pt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase BufferParameters.CAP_SQUARE:\r\n\t\t\t\tsegGen.createSquare(pt);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\tgetLineCurve: function (inputPts, distance) {\r\n\t\tthis.distance = distance;\r\n\t\tif (distance < 0.0 && !this.bufParams.isSingleSided()) return null;\r\n\t\tif (distance === 0.0) return null;\r\n\t\tvar posDistance = Math.abs(distance);\r\n\t\tvar segGen = this.getSegGen(posDistance);\r\n\t\tif (inputPts.length <= 1) {\r\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\r\n\t\t} else {\r\n\t\t\tif (this.bufParams.isSingleSided()) {\r\n\t\t\t\tvar isRightSide = distance < 0.0;\r\n\t\t\t\tthis.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\r\n\t\t\t} else this.computeLineBufferCurve(inputPts, segGen);\r\n\t\t}\r\n\t\tvar lineCoord = segGen.getCoordinates();\r\n\t\treturn lineCoord;\r\n\t},\r\n\tgetBufferParameters: function () {\r\n\t\treturn this.bufParams;\r\n\t},\r\n\tsimplifyTolerance: function (bufDistance) {\r\n\t\treturn bufDistance * this.bufParams.getSimplifyFactor();\r\n\t},\r\n\tgetRingCurve: function (inputPts, side, distance) {\r\n\t\tthis.distance = distance;\r\n\t\tif (inputPts.length <= 2) return this.getLineCurve(inputPts, distance);\r\n\t\tif (distance === 0.0) {\r\n\t\t\treturn OffsetCurveBuilder.copyCoordinates(inputPts);\r\n\t\t}\r\n\t\tvar segGen = this.getSegGen(distance);\r\n\t\tthis.computeRingBufferCurve(inputPts, side, segGen);\r\n\t\treturn segGen.getCoordinates();\r\n\t},\r\n\tcomputeOffsetCurve: function (inputPts, isRightSide, segGen) {\r\n\t\tvar distTol = this.simplifyTolerance(this.distance);\r\n\t\tif (isRightSide) {\r\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\r\n\t\t\tvar n2 = simp2.length - 1;\r\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\r\n\t\t\tsegGen.addFirstSegment();\r\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\r\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\r\n\t\t\tvar n1 = simp1.length - 1;\r\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\r\n\t\t\tsegGen.addFirstSegment();\r\n\t\t\tfor (var i = 2; i <= n1; i++) {\r\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsegGen.addLastSegment();\r\n\t},\r\n\tgetSegGen: function (distance) {\r\n\t\treturn new OffsetSegmentGenerator(this.precisionModel, this.bufParams, distance);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn OffsetCurveBuilder;\r\n\t}\r\n});\r\nOffsetCurveBuilder.copyCoordinates = function (pts) {\r\n\tvar copy = new Array(pts.length).fill(null);\r\n\tfor (var i = 0; i < copy.length; i++) {\r\n\t\tcopy[i] = new Coordinate(pts[i]);\r\n\t}\r\n\treturn copy;\r\n};\r\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport Position from '../../geomgraph/Position';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport extend from '../../../../../extend';\r\nimport Collections from '../../../../../java/util/Collections';\r\nimport DirectedEdge from '../../geomgraph/DirectedEdge';\r\nimport LineSegment from '../../geom/LineSegment';\r\nimport Comparable from '../../../../../java/lang/Comparable';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport List from '../../../../../java/util/List';\r\nexport default function SubgraphDepthLocater() {\r\n\tthis.subgraphs = null;\r\n\tthis.seg = new LineSegment();\r\n\tthis.cga = new CGAlgorithms();\r\n\tlet subgraphs = arguments[0];\r\n\tthis.subgraphs = subgraphs;\r\n}\r\nextend(SubgraphDepthLocater.prototype, {\r\n\tfindStabbedSegments: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet stabbingRayLeftPt = arguments[0];\r\n\t\t\tvar stabbedSegments = new ArrayList();\r\n\t\t\tfor (var i = this.subgraphs.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar bsg = i.next();\r\n\t\t\t\tvar env = bsg.getEnvelope();\r\n\t\t\t\tif (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue;\r\n\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\r\n\t\t\t}\r\n\t\t\treturn stabbedSegments;\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tif (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\r\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdge = arguments[1], stabbedSegments = arguments[2];\r\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\r\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\r\n\t\t\t\t\tthis.seg.p0 = pts[i];\r\n\t\t\t\t\tthis.seg.p1 = pts[i + 1];\r\n\t\t\t\t\tif (this.seg.p0.y > this.seg.p1.y) this.seg.reverse();\r\n\t\t\t\t\tvar maxx = Math.max(this.seg.p0.x, this.seg.p1.x);\r\n\t\t\t\t\tif (maxx < stabbingRayLeftPt.x) continue;\r\n\t\t\t\t\tif (this.seg.isHorizontal()) continue;\r\n\t\t\t\t\tif (stabbingRayLeftPt.y < this.seg.p0.y || stabbingRayLeftPt.y > this.seg.p1.y) continue;\r\n\t\t\t\t\tif (CGAlgorithms.computeOrientation(this.seg.p0, this.seg.p1, stabbingRayLeftPt) === CGAlgorithms.RIGHT) continue;\r\n\t\t\t\t\tvar depth = dirEdge.getDepth(Position.LEFT);\r\n\t\t\t\t\tif (!this.seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT);\r\n\t\t\t\t\tvar ds = new DepthSegment(this.seg, depth);\r\n\t\t\t\t\tstabbedSegments.add(ds);\r\n\t\t\t\t}\r\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\r\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdges = arguments[1], stabbedSegments = arguments[2];\r\n\t\t\t\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\r\n\t\t\t\t\tvar de = i.next();\r\n\t\t\t\t\tif (!de.isForward()) continue;\r\n\t\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetDepth: function (p) {\r\n\t\tvar stabbedSegments = this.findStabbedSegments(p);\r\n\t\tif (stabbedSegments.size() === 0) return 0;\r\n\t\tvar ds = Collections.min(stabbedSegments);\r\n\t\treturn ds.leftDepth;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SubgraphDepthLocater;\r\n\t}\r\n});\r\nfunction DepthSegment() {\r\n\tthis.upwardSeg = null;\r\n\tthis.leftDepth = null;\r\n\tlet seg = arguments[0], depth = arguments[1];\r\n\tthis.upwardSeg = new LineSegment(seg);\r\n\tthis.leftDepth = depth;\r\n}\r\nextend(DepthSegment.prototype, {\r\n\tcompareTo: function (obj) {\r\n\t\tvar other = obj;\r\n\t\tif (this.upwardSeg.minX() >= other.upwardSeg.maxX()) return 1;\r\n\t\tif (this.upwardSeg.maxX() <= other.upwardSeg.minX()) return -1;\r\n\t\tvar orientIndex = this.upwardSeg.orientationIndex(other.upwardSeg);\r\n\t\tif (orientIndex !== 0) return orientIndex;\r\n\t\torientIndex = -1 * other.upwardSeg.orientationIndex(this.upwardSeg);\r\n\t\tif (orientIndex !== 0) return orientIndex;\r\n\t\treturn this.upwardSeg.compareTo(other.upwardSeg);\r\n\t},\r\n\tcompareX: function (seg0, seg1) {\r\n\t\tvar compare0 = seg0.p0.compareTo(seg1.p0);\r\n\t\tif (compare0 !== 0) return compare0;\r\n\t\treturn seg0.p1.compareTo(seg1.p1);\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn this.upwardSeg.toString();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DepthSegment;\r\n\t}\r\n});\r\nSubgraphDepthLocater.DepthSegment = DepthSegment;\r\n","import Location from '../../geom/Location';\r\nimport LineString from '../../geom/LineString';\r\nimport CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport Position from '../../geomgraph/Position';\r\nimport Point from '../../geom/Point';\r\nimport NodedSegmentString from '../../noding/NodedSegmentString';\r\nimport Polygon from '../../geom/Polygon';\r\nimport MultiPoint from '../../geom/MultiPoint';\r\nimport LinearRing from '../../geom/LinearRing';\r\nimport extend from '../../../../../extend';\r\nimport MultiPolygon from '../../geom/MultiPolygon';\r\nimport Label from '../../geomgraph/Label';\r\nimport GeometryCollection from '../../geom/GeometryCollection';\r\nimport CoordinateArrays from '../../geom/CoordinateArrays';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport MultiLineString from '../../geom/MultiLineString';\r\nimport Triangle from '../../geom/Triangle';\r\nexport default function OffsetCurveSetBuilder() {\r\n\tthis.inputGeom = null;\r\n\tthis.distance = null;\r\n\tthis.curveBuilder = null;\r\n\tthis.curveList = new ArrayList();\r\n\tlet inputGeom = arguments[0], distance = arguments[1], curveBuilder = arguments[2];\r\n\tthis.inputGeom = inputGeom;\r\n\tthis.distance = distance;\r\n\tthis.curveBuilder = curveBuilder;\r\n}\r\nextend(OffsetCurveSetBuilder.prototype, {\r\n\taddPoint: function (p) {\r\n\t\tif (this.distance <= 0.0) return null;\r\n\t\tvar coord = p.getCoordinates();\r\n\t\tvar curve = this.curveBuilder.getLineCurve(coord, this.distance);\r\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\r\n\t},\r\n\taddPolygon: function (p) {\r\n\t\tvar offsetDistance = this.distance;\r\n\t\tvar offsetSide = Position.LEFT;\r\n\t\tif (this.distance < 0.0) {\r\n\t\t\toffsetDistance = -this.distance;\r\n\t\t\toffsetSide = Position.RIGHT;\r\n\t\t}\r\n\t\tvar shell = p.getExteriorRing();\r\n\t\tvar shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\r\n\t\tif (this.distance < 0.0 && this.isErodedCompletely(shell, this.distance)) return null;\r\n\t\tif (this.distance <= 0.0 && shellCoord.length < 3) return null;\r\n\t\tthis.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\r\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\r\n\t\t\tvar hole = p.getInteriorRingN(i);\r\n\t\t\tvar holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\r\n\t\t\tif (this.distance > 0.0 && this.isErodedCompletely(hole, -this.distance)) continue;\r\n\t\t\tthis.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\r\n\t\t}\r\n\t},\r\n\tisTriangleErodedCompletely: function (triangleCoord, bufferDistance) {\r\n\t\tvar tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\r\n\t\tvar inCentre = tri.inCentre();\r\n\t\tvar distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\r\n\t\treturn distToCentre < Math.abs(bufferDistance);\r\n\t},\r\n\taddLineString: function (line) {\r\n\t\tif (this.distance <= 0.0 && !this.curveBuilder.getBufferParameters().isSingleSided()) return null;\r\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\r\n\t\tvar curve = this.curveBuilder.getLineCurve(coord, this.distance);\r\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\r\n\t},\r\n\taddCurve: function (coord, leftLoc, rightLoc) {\r\n\t\tif (coord === null || coord.length < 2) return null;\r\n\t\tvar e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\r\n\t\tthis.curveList.add(e);\r\n\t},\r\n\tgetCurves: function () {\r\n\t\tthis.add(this.inputGeom);\r\n\t\treturn this.curveList;\r\n\t},\r\n\taddPolygonRing: function (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\r\n\t\tif (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null;\r\n\t\tvar leftLoc = cwLeftLoc;\r\n\t\tvar rightLoc = cwRightLoc;\r\n\t\tif (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\r\n\t\t\tleftLoc = cwRightLoc;\r\n\t\t\trightLoc = cwLeftLoc;\r\n\t\t\tside = Position.opposite(side);\r\n\t\t}\r\n\t\tvar curve = this.curveBuilder.getRingCurve(coord, side, offsetDistance);\r\n\t\tthis.addCurve(curve, leftLoc, rightLoc);\r\n\t},\r\n\tadd: function (g) {\r\n\t\tif (g.isEmpty()) return null;\r\n\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\r\n\t},\r\n\tisErodedCompletely: function (ring, bufferDistance) {\r\n\t\tvar ringCoord = ring.getCoordinates();\r\n\t\tvar minDiam = 0.0;\r\n\t\tif (ringCoord.length < 4) return bufferDistance < 0;\r\n\t\tif (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance);\r\n\t\tvar env = ring.getEnvelopeInternal();\r\n\t\tvar envMinDimension = Math.min(env.getHeight(), env.getWidth());\r\n\t\tif (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true;\r\n\t\treturn false;\r\n\t},\r\n\taddCollection: function (gc) {\r\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\r\n\t\t\tvar g = gc.getGeometryN(i);\r\n\t\t\tthis.add(g);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn OffsetCurveSetBuilder;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport SegmentIntersector from './SegmentIntersector';\r\nexport default function IntersectionAdder() {\r\n\tthis._hasIntersection = false;\r\n\tthis.hasProper = false;\r\n\tthis.hasProperInterior = false;\r\n\tthis.hasInterior = false;\r\n\tthis.properIntersectionPoint = null;\r\n\tthis.li = null;\r\n\tthis.isSelfIntersection = null;\r\n\tthis.numIntersections = 0;\r\n\tthis.numInteriorIntersections = 0;\r\n\tthis.numProperIntersections = 0;\r\n\tthis.numTests = 0;\r\n\tlet li = arguments[0];\r\n\tthis.li = li;\r\n}\r\nextend(IntersectionAdder.prototype, {\r\n\tisTrivialIntersection: function (e0, segIndex0, e1, segIndex1) {\r\n\t\tif (e0 === e1) {\r\n\t\t\tif (this.li.getIntersectionNum() === 1) {\r\n\t\t\t\tif (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true;\r\n\t\t\t\tif (e0.isClosed()) {\r\n\t\t\t\t\tvar maxSegIndex = e0.size() - 1;\r\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tgetProperIntersectionPoint: function () {\r\n\t\treturn this.properIntersectionPoint;\r\n\t},\r\n\thasProperInteriorIntersection: function () {\r\n\t\treturn this.hasProperInterior;\r\n\t},\r\n\tgetLineIntersector: function () {\r\n\t\treturn this.li;\r\n\t},\r\n\thasProperIntersection: function () {\r\n\t\treturn this.hasProper;\r\n\t},\r\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\r\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\r\n\t\tthis.numTests++;\r\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\r\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\r\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\r\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\r\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\r\n\t\tif (this.li.hasIntersection()) {\r\n\t\t\tthis.numIntersections++;\r\n\t\t\tif (this.li.isInteriorIntersection()) {\r\n\t\t\t\tthis.numInteriorIntersections++;\r\n\t\t\t\tthis.hasInterior = true;\r\n\t\t\t}\r\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\r\n\t\t\t\tthis._hasIntersection = true;\r\n\t\t\t\te0.addIntersections(this.li, segIndex0, 0);\r\n\t\t\t\te1.addIntersections(this.li, segIndex1, 1);\r\n\t\t\t\tif (this.li.isProper()) {\r\n\t\t\t\t\tthis.numProperIntersections++;\r\n\t\t\t\t\tthis.hasProper = true;\r\n\t\t\t\t\tthis.hasProperInterior = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasIntersection: function () {\r\n\t\treturn this._hasIntersection;\r\n\t},\r\n\tisDone: function () {\r\n\t\treturn false;\r\n\t},\r\n\thasInteriorIntersection: function () {\r\n\t\treturn this.hasInterior;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [SegmentIntersector];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IntersectionAdder;\r\n\t}\r\n});\r\nIntersectionAdder.isAdjacentSegments = function (i1, i2) {\r\n\treturn Math.abs(i1 - i2) === 1;\r\n};\r\n","import Location from '../../geom/Location';\r\nimport BufferSubgraph from './BufferSubgraph';\r\nimport PolygonBuilder from '../overlay/PolygonBuilder';\r\nimport GeometryFactory from '../../geom/GeometryFactory';\r\nimport Position from '../../geomgraph/Position';\r\nimport MCIndexNoder from '../../noding/MCIndexNoder';\r\nimport OffsetCurveBuilder from './OffsetCurveBuilder';\r\nimport extend from '../../../../../extend';\r\nimport Collections from '../../../../../java/util/Collections';\r\nimport SubgraphDepthLocater from './SubgraphDepthLocater';\r\nimport OffsetCurveSetBuilder from './OffsetCurveSetBuilder';\r\nimport Label from '../../geomgraph/Label';\r\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\r\nimport EdgeList from '../../geomgraph/EdgeList';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\r\nimport IntersectionAdder from '../../noding/IntersectionAdder';\r\nimport Edge from '../../geomgraph/Edge';\r\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\r\nexport default function BufferBuilder() {\r\n\tthis.bufParams = null;\r\n\tthis.workingPrecisionModel = null;\r\n\tthis.workingNoder = null;\r\n\tthis.geomFact = null;\r\n\tthis.graph = null;\r\n\tthis.edgeList = new EdgeList();\r\n\tlet bufParams = arguments[0];\r\n\tthis.bufParams = bufParams;\r\n}\r\nextend(BufferBuilder.prototype, {\r\n\tsetWorkingPrecisionModel: function (pm) {\r\n\t\tthis.workingPrecisionModel = pm;\r\n\t},\r\n\tinsertUniqueEdge: function (e) {\r\n\t\tvar existingEdge = this.edgeList.findEqualEdge(e);\r\n\t\tif (existingEdge !== null) {\r\n\t\t\tvar existingLabel = existingEdge.getLabel();\r\n\t\t\tvar labelToMerge = e.getLabel();\r\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\r\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\r\n\t\t\t\tlabelToMerge.flip();\r\n\t\t\t}\r\n\t\t\texistingLabel.merge(labelToMerge);\r\n\t\t\tvar mergeDelta = BufferBuilder.depthDelta(labelToMerge);\r\n\t\t\tvar existingDelta = existingEdge.getDepthDelta();\r\n\t\t\tvar newDelta = existingDelta + mergeDelta;\r\n\t\t\texistingEdge.setDepthDelta(newDelta);\r\n\t\t} else {\r\n\t\t\tthis.edgeList.add(e);\r\n\t\t\te.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\r\n\t\t}\r\n\t},\r\n\tbuildSubgraphs: function (subgraphList, polyBuilder) {\r\n\t\tvar processedGraphs = new ArrayList();\r\n\t\tfor (var i = subgraphList.iterator(); i.hasNext(); ) {\r\n\t\t\tvar subgraph = i.next();\r\n\t\t\tvar p = subgraph.getRightmostCoordinate();\r\n\t\t\tvar locater = new SubgraphDepthLocater(processedGraphs);\r\n\t\t\tvar outsideDepth = locater.getDepth(p);\r\n\t\t\tsubgraph.computeDepth(outsideDepth);\r\n\t\t\tsubgraph.findResultEdges();\r\n\t\t\tprocessedGraphs.add(subgraph);\r\n\t\t\tpolyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\r\n\t\t}\r\n\t},\r\n\tcreateSubgraphs: function (graph) {\r\n\t\tvar subgraphList = new ArrayList();\r\n\t\tfor (var i = graph.getNodes().iterator(); i.hasNext(); ) {\r\n\t\t\tvar node = i.next();\r\n\t\t\tif (!node.isVisited()) {\r\n\t\t\t\tvar subgraph = new BufferSubgraph();\r\n\t\t\t\tsubgraph.create(node);\r\n\t\t\t\tsubgraphList.add(subgraph);\r\n\t\t\t}\r\n\t\t}\r\n\t\tCollections.sort(subgraphList, Collections.reverseOrder());\r\n\t\treturn subgraphList;\r\n\t},\r\n\tcreateEmptyResultGeometry: function () {\r\n\t\tvar emptyGeom = this.geomFact.createPolygon();\r\n\t\treturn emptyGeom;\r\n\t},\r\n\tgetNoder: function (precisionModel) {\r\n\t\tif (this.workingNoder !== null) return this.workingNoder;\r\n\t\tvar noder = new MCIndexNoder();\r\n\t\tvar li = new RobustLineIntersector();\r\n\t\tli.setPrecisionModel(precisionModel);\r\n\t\tnoder.setSegmentIntersector(new IntersectionAdder(li));\r\n\t\treturn noder;\r\n\t},\r\n\tbuffer: function (g, distance) {\r\n\t\tvar precisionModel = this.workingPrecisionModel;\r\n\t\tif (precisionModel === null) precisionModel = g.getPrecisionModel();\r\n\t\tthis.geomFact = g.getFactory();\r\n\t\tvar curveBuilder = new OffsetCurveBuilder(precisionModel, this.bufParams);\r\n\t\tvar curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\r\n\t\tvar bufferSegStrList = curveSetBuilder.getCurves();\r\n\t\tif (bufferSegStrList.size() <= 0) {\r\n\t\t\treturn this.createEmptyResultGeometry();\r\n\t\t}\r\n\t\tthis.computeNodedEdges(bufferSegStrList, precisionModel);\r\n\t\tthis.graph = new PlanarGraph(new OverlayNodeFactory());\r\n\t\tthis.graph.addEdges(this.edgeList.getEdges());\r\n\t\tvar subgraphList = this.createSubgraphs(this.graph);\r\n\t\tvar polyBuilder = new PolygonBuilder(this.geomFact);\r\n\t\tthis.buildSubgraphs(subgraphList, polyBuilder);\r\n\t\tvar resultPolyList = polyBuilder.getPolygons();\r\n\t\tif (resultPolyList.size() <= 0) {\r\n\t\t\treturn this.createEmptyResultGeometry();\r\n\t\t}\r\n\t\tvar resultGeom = this.geomFact.buildGeometry(resultPolyList);\r\n\t\treturn resultGeom;\r\n\t},\r\n\tcomputeNodedEdges: function (bufferSegStrList, precisionModel) {\r\n\t\tvar noder = this.getNoder(precisionModel);\r\n\t\tnoder.computeNodes(bufferSegStrList);\r\n\t\tvar nodedSegStrings = noder.getNodedSubstrings();\r\n\t\tfor (var i = nodedSegStrings.iterator(); i.hasNext(); ) {\r\n\t\t\tvar segStr = i.next();\r\n\t\t\tvar pts = segStr.getCoordinates();\r\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) continue;\r\n\t\t\tvar oldLabel = segStr.getData();\r\n\t\t\tvar edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\r\n\t\t\tthis.insertUniqueEdge(edge);\r\n\t\t}\r\n\t},\r\n\tsetNoder: function (noder) {\r\n\t\tthis.workingNoder = noder;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BufferBuilder;\r\n\t}\r\n});\r\nBufferBuilder.depthDelta = function (label) {\r\n\tvar lLoc = label.getLocation(0, Position.LEFT);\r\n\tvar rLoc = label.getLocation(0, Position.RIGHT);\r\n\tif (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1; else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1;\r\n\treturn 0;\r\n};\r\nBufferBuilder.convertSegStrings = function (it) {\r\n\tvar fact = new GeometryFactory();\r\n\tvar lines = new ArrayList();\r\n\twhile (it.hasNext()) {\r\n\t\tvar ss = it.next();\r\n\t\tvar line = fact.createLineString(ss.getCoordinates());\r\n\t\tlines.add(line);\r\n\t}\r\n\treturn fact.buildGeometry(lines);\r\n};\r\n","import GeometryFactory from '../geom/GeometryFactory';\r\nimport extend from '../../../../extend';\r\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\r\nimport RuntimeException from '../../../../java/lang/RuntimeException';\r\nexport default function NodingValidator() {\r\n\tthis.li = new RobustLineIntersector();\r\n\tthis.segStrings = null;\r\n\tlet segStrings = arguments[0];\r\n\tthis.segStrings = segStrings;\r\n}\r\nextend(NodingValidator.prototype, {\r\n\tcheckEndPtVertexIntersections: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tfor (var i = this.segStrings.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar ss = i.next();\r\n\t\t\t\tvar pts = ss.getCoordinates();\r\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[0], this.segStrings);\r\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[pts.length - 1], this.segStrings);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet testPt = arguments[0], segStrings = arguments[1];\r\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar ss = i.next();\r\n\t\t\t\tvar pts = ss.getCoordinates();\r\n\t\t\t\tfor (var j = 1; j < pts.length - 1; j++) {\r\n\t\t\t\t\tif (pts[j].equals(testPt)) throw new RuntimeException(\"found endpt/interior pt intersection at index \" + j + \" :pt \" + testPt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcheckInteriorIntersections: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tfor (var i = this.segStrings.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar ss0 = i.next();\r\n\t\t\t\tfor (var j = this.segStrings.iterator(); j.hasNext(); ) {\r\n\t\t\t\t\tvar ss1 = j.next();\r\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, ss1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet ss0 = arguments[0], ss1 = arguments[1];\r\n\t\t\tvar pts0 = ss0.getCoordinates();\r\n\t\t\tvar pts1 = ss1.getCoordinates();\r\n\t\t\tfor (var i0 = 0; i0 < pts0.length - 1; i0++) {\r\n\t\t\t\tfor (var i1 = 0; i1 < pts1.length - 1; i1++) {\r\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, i0, ss1, i1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 4) {\r\n\t\t\tlet e0 = arguments[0], segIndex0 = arguments[1], e1 = arguments[2], segIndex1 = arguments[3];\r\n\t\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\r\n\t\t\tvar p00 = e0.getCoordinates()[segIndex0];\r\n\t\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\r\n\t\t\tvar p10 = e1.getCoordinates()[segIndex1];\r\n\t\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\r\n\t\t\tthis.li.computeIntersection(p00, p01, p10, p11);\r\n\t\t\tif (this.li.hasIntersection()) {\r\n\t\t\t\tif (this.li.isProper() || this.hasInteriorIntersection(this.li, p00, p01) || this.hasInteriorIntersection(this.li, p10, p11)) {\r\n\t\t\t\t\tthrow new RuntimeException(\"found non-noded intersection at \" + p00 + \"-\" + p01 + \" and \" + p10 + \"-\" + p11);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcheckValid: function () {\r\n\t\tthis.checkEndPtVertexIntersections();\r\n\t\tthis.checkInteriorIntersections();\r\n\t\tthis.checkCollapses();\r\n\t},\r\n\tcheckCollapses: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tfor (var i = this.segStrings.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar ss = i.next();\r\n\t\t\t\tthis.checkCollapses(ss);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet ss = arguments[0];\r\n\t\t\tvar pts = ss.getCoordinates();\r\n\t\t\tfor (var i = 0; i < pts.length - 2; i++) {\r\n\t\t\t\tthis.checkCollapse(pts[i], pts[i + 1], pts[i + 2]);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasInteriorIntersection: function (li, p0, p1) {\r\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\r\n\t\t\tvar intPt = li.getIntersection(i);\r\n\t\t\tif (!(intPt.equals(p0) || intPt.equals(p1))) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tcheckCollapse: function (p0, p1, p2) {\r\n\t\tif (p0.equals(p2)) throw new RuntimeException(\"found non-noded collapse at \" + NodingValidator.fact.createLineString([p0, p1, p2]));\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodingValidator;\r\n\t}\r\n});\r\nNodingValidator.fact = new GeometryFactory();\r\n","import Coordinate from '../../geom/Coordinate';\r\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../../extend';\r\nimport Envelope from '../../geom/Envelope';\r\nimport Assert from '../../util/Assert';\r\nexport default function HotPixel() {\r\n\tthis.li = null;\r\n\tthis.pt = null;\r\n\tthis.originalPt = null;\r\n\tthis.ptScaled = null;\r\n\tthis.p0Scaled = null;\r\n\tthis.p1Scaled = null;\r\n\tthis.scaleFactor = null;\r\n\tthis.minx = null;\r\n\tthis.maxx = null;\r\n\tthis.miny = null;\r\n\tthis.maxy = null;\r\n\tthis.corner = new Array(4).fill(null);\r\n\tthis.safeEnv = null;\r\n\tlet pt = arguments[0], scaleFactor = arguments[1], li = arguments[2];\r\n\tthis.originalPt = pt;\r\n\tthis.pt = pt;\r\n\tthis.scaleFactor = scaleFactor;\r\n\tthis.li = li;\r\n\tif (scaleFactor <= 0) throw new IllegalArgumentException(\"Scale factor must be non-zero\");\r\n\tif (scaleFactor !== 1.0) {\r\n\t\tthis.pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\r\n\t\tthis.p0Scaled = new Coordinate();\r\n\t\tthis.p1Scaled = new Coordinate();\r\n\t}\r\n\tthis.initCorners(this.pt);\r\n}\r\nextend(HotPixel.prototype, {\r\n\tintersectsScaled: function (p0, p1) {\r\n\t\tvar segMinx = Math.min(p0.x, p1.x);\r\n\t\tvar segMaxx = Math.max(p0.x, p1.x);\r\n\t\tvar segMiny = Math.min(p0.y, p1.y);\r\n\t\tvar segMaxy = Math.max(p0.y, p1.y);\r\n\t\tvar isOutsidePixelEnv = this.maxx < segMinx || this.minx > segMaxx || this.maxy < segMiny || this.miny > segMaxy;\r\n\t\tif (isOutsidePixelEnv) return false;\r\n\t\tvar intersects = this.intersectsToleranceSquare(p0, p1);\r\n\t\tAssert.isTrue(!(isOutsidePixelEnv && intersects), \"Found bad envelope test\");\r\n\t\treturn intersects;\r\n\t},\r\n\tinitCorners: function (pt) {\r\n\t\tvar tolerance = 0.5;\r\n\t\tthis.minx = pt.x - tolerance;\r\n\t\tthis.maxx = pt.x + tolerance;\r\n\t\tthis.miny = pt.y - tolerance;\r\n\t\tthis.maxy = pt.y + tolerance;\r\n\t\tthis.corner[0] = new Coordinate(this.maxx, this.maxy);\r\n\t\tthis.corner[1] = new Coordinate(this.minx, this.maxy);\r\n\t\tthis.corner[2] = new Coordinate(this.minx, this.miny);\r\n\t\tthis.corner[3] = new Coordinate(this.maxx, this.miny);\r\n\t},\r\n\tintersects: function (p0, p1) {\r\n\t\tif (this.scaleFactor === 1.0) return this.intersectsScaled(p0, p1);\r\n\t\tthis.copyScaled(p0, this.p0Scaled);\r\n\t\tthis.copyScaled(p1, this.p1Scaled);\r\n\t\treturn this.intersectsScaled(this.p0Scaled, this.p1Scaled);\r\n\t},\r\n\tscale: function (val) {\r\n\t\treturn Math.round(val * this.scaleFactor);\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.originalPt;\r\n\t},\r\n\tcopyScaled: function (p, pScaled) {\r\n\t\tpScaled.x = this.scale(p.x);\r\n\t\tpScaled.y = this.scale(p.y);\r\n\t},\r\n\tgetSafeEnvelope: function () {\r\n\t\tif (this.safeEnv === null) {\r\n\t\t\tvar safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this.scaleFactor;\r\n\t\t\tthis.safeEnv = new Envelope(this.originalPt.x - safeTolerance, this.originalPt.x + safeTolerance, this.originalPt.y - safeTolerance, this.originalPt.y + safeTolerance);\r\n\t\t}\r\n\t\treturn this.safeEnv;\r\n\t},\r\n\tintersectsPixelClosure: function (p0, p1) {\r\n\t\tthis.li.computeIntersection(p0, p1, this.corner[0], this.corner[1]);\r\n\t\tif (this.li.hasIntersection()) return true;\r\n\t\tthis.li.computeIntersection(p0, p1, this.corner[1], this.corner[2]);\r\n\t\tif (this.li.hasIntersection()) return true;\r\n\t\tthis.li.computeIntersection(p0, p1, this.corner[2], this.corner[3]);\r\n\t\tif (this.li.hasIntersection()) return true;\r\n\t\tthis.li.computeIntersection(p0, p1, this.corner[3], this.corner[0]);\r\n\t\tif (this.li.hasIntersection()) return true;\r\n\t\treturn false;\r\n\t},\r\n\tintersectsToleranceSquare: function (p0, p1) {\r\n\t\tvar intersectsLeft = false;\r\n\t\tvar intersectsBottom = false;\r\n\t\tthis.li.computeIntersection(p0, p1, this.corner[0], this.corner[1]);\r\n\t\tif (this.li.isProper()) return true;\r\n\t\tthis.li.computeIntersection(p0, p1, this.corner[1], this.corner[2]);\r\n\t\tif (this.li.isProper()) return true;\r\n\t\tif (this.li.hasIntersection()) intersectsLeft = true;\r\n\t\tthis.li.computeIntersection(p0, p1, this.corner[2], this.corner[3]);\r\n\t\tif (this.li.isProper()) return true;\r\n\t\tif (this.li.hasIntersection()) intersectsBottom = true;\r\n\t\tthis.li.computeIntersection(p0, p1, this.corner[3], this.corner[0]);\r\n\t\tif (this.li.isProper()) return true;\r\n\t\tif (intersectsLeft && intersectsBottom) return true;\r\n\t\tif (p0.equals(this.pt)) return true;\r\n\t\tif (p1.equals(this.pt)) return true;\r\n\t\treturn false;\r\n\t},\r\n\taddSnappedNode: function (segStr, segIndex) {\r\n\t\tvar p0 = segStr.getCoordinate(segIndex);\r\n\t\tvar p1 = segStr.getCoordinate(segIndex + 1);\r\n\t\tif (this.intersects(p0, p1)) {\r\n\t\t\tsegStr.addIntersection(this.getCoordinate(), segIndex);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn HotPixel;\r\n\t}\r\n});\r\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75;\r\n","import MonotoneChainSelectAction from '../../index/chain/MonotoneChainSelectAction';\r\nimport ItemVisitor from '../../index/ItemVisitor';\r\nimport extend from '../../../../../extend';\r\nimport inherits from '../../../../../inherits';\r\nexport default function MCIndexPointSnapper() {\r\n\tthis.index = null;\r\n\tlet index = arguments[0];\r\n\tthis.index = index;\r\n}\r\nextend(MCIndexPointSnapper.prototype, {\r\n\tsnap: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet hotPixel = arguments[0];\r\n\t\t\treturn this.snap(hotPixel, null, -1);\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\r\n\t\t\tvar pixelEnv = hotPixel.getSafeEnvelope();\r\n\t\t\tvar hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex);\r\n\t\t\tthis.index.query(pixelEnv, {\r\n\t\t\t\tinterfaces_: function () {\r\n\t\t\t\t\treturn [ItemVisitor];\r\n\t\t\t\t},\r\n\t\t\t\tvisitItem: function (item) {\r\n\t\t\t\t\tvar testChain = item;\r\n\t\t\t\t\ttestChain.select(pixelEnv, hotPixelSnapAction);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn hotPixelSnapAction.isNodeAdded();\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MCIndexPointSnapper;\r\n\t}\r\n});\r\nfunction HotPixelSnapAction() {\r\n\tMonotoneChainSelectAction.apply(this);\r\n\tthis.hotPixel = null;\r\n\tthis.parentEdge = null;\r\n\tthis.hotPixelVertexIndex = null;\r\n\tthis._isNodeAdded = false;\r\n\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\r\n\tthis.hotPixel = hotPixel;\r\n\tthis.parentEdge = parentEdge;\r\n\tthis.hotPixelVertexIndex = hotPixelVertexIndex;\r\n}\r\ninherits(HotPixelSnapAction, MonotoneChainSelectAction);\r\nextend(HotPixelSnapAction.prototype, {\r\n\tisNodeAdded: function () {\r\n\t\treturn this._isNodeAdded;\r\n\t},\r\n\tselect: function () {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\r\n\t\t\tvar ss = mc.getContext();\r\n\t\t\tif (this.parentEdge !== null) {\r\n\t\t\t\tif (ss === this.parentEdge && startIndex === this.hotPixelVertexIndex) return null;\r\n\t\t\t}\r\n\t\t\tthis._isNodeAdded = this.hotPixel.addSnappedNode(ss, startIndex);\r\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn HotPixelSnapAction;\r\n\t}\r\n});\r\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction;\r\n","import extend from '../../../../extend';\r\nimport SegmentIntersector from './SegmentIntersector';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function InteriorIntersectionFinderAdder() {\r\n\tthis.li = null;\r\n\tthis.interiorIntersections = null;\r\n\tlet li = arguments[0];\r\n\tthis.li = li;\r\n\tthis.interiorIntersections = new ArrayList();\r\n}\r\nextend(InteriorIntersectionFinderAdder.prototype, {\r\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\r\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\r\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\r\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\r\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\r\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\r\n\t\tthis.li.computeIntersection(p00, p01, p10, p11);\r\n\t\tif (this.li.hasIntersection()) {\r\n\t\t\tif (this.li.isInteriorIntersection()) {\r\n\t\t\t\tfor (var intIndex = 0; intIndex < this.li.getIntersectionNum(); intIndex++) {\r\n\t\t\t\t\tthis.interiorIntersections.add(this.li.getIntersection(intIndex));\r\n\t\t\t\t}\r\n\t\t\t\te0.addIntersections(this.li, segIndex0, 0);\r\n\t\t\t\te1.addIntersections(this.li, segIndex1, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisDone: function () {\r\n\t\treturn false;\r\n\t},\r\n\tgetInteriorIntersections: function () {\r\n\t\treturn this.interiorIntersections;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [SegmentIntersector];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn InteriorIntersectionFinderAdder;\r\n\t}\r\n});\r\n","import NodingValidator from '../NodingValidator';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport Collection from '../../../../../java/util/Collection';\r\nimport Noder from '../Noder';\r\nimport MCIndexNoder from '../MCIndexNoder';\r\nimport NodedSegmentString from '../NodedSegmentString';\r\nimport HotPixel from './HotPixel';\r\nimport extend from '../../../../../extend';\r\nimport Exception from '../../../../../java/lang/Exception';\r\nimport MCIndexPointSnapper from './MCIndexPointSnapper';\r\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\r\nimport InteriorIntersectionFinderAdder from '../InteriorIntersectionFinderAdder';\r\nexport default function MCIndexSnapRounder() {\r\n\tthis.pm = null;\r\n\tthis.li = null;\r\n\tthis.scaleFactor = null;\r\n\tthis.noder = null;\r\n\tthis.pointSnapper = null;\r\n\tthis.nodedSegStrings = null;\r\n\tlet pm = arguments[0];\r\n\tthis.pm = pm;\r\n\tthis.li = new RobustLineIntersector();\r\n\tthis.li.setPrecisionModel(pm);\r\n\tthis.scaleFactor = pm.getScale();\r\n}\r\nextend(MCIndexSnapRounder.prototype, {\r\n\tcheckCorrectness: function (inputSegmentStrings) {\r\n\t\tvar resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\r\n\t\tvar nv = new NodingValidator(resultSegStrings);\r\n\t\ttry {\r\n\t\t\tnv.checkValid();\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex instanceof Exception) {\r\n\t\t\t\tex.printStackTrace();\r\n\t\t\t} else throw ex;\r\n\t\t} finally {}\r\n\t},\r\n\tgetNodedSubstrings: function () {\r\n\t\treturn NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);\r\n\t},\r\n\tsnapRound: function (segStrings, li) {\r\n\t\tvar intersections = this.findInteriorIntersections(segStrings, li);\r\n\t\tthis.computeIntersectionSnaps(intersections);\r\n\t\tthis.computeVertexSnaps(segStrings);\r\n\t},\r\n\tfindInteriorIntersections: function (segStrings, li) {\r\n\t\tvar intFinderAdder = new InteriorIntersectionFinderAdder(li);\r\n\t\tthis.noder.setSegmentIntersector(intFinderAdder);\r\n\t\tthis.noder.computeNodes(segStrings);\r\n\t\treturn intFinderAdder.getInteriorIntersections();\r\n\t},\r\n\tcomputeVertexSnaps: function () {\r\n\t\tif (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet edges = arguments[0];\r\n\t\t\tfor (var i0 = edges.iterator(); i0.hasNext(); ) {\r\n\t\t\t\tvar edge0 = i0.next();\r\n\t\t\t\tthis.computeVertexSnaps(edge0);\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof NodedSegmentString) {\r\n\t\t\tlet e = arguments[0];\r\n\t\t\tvar pts0 = e.getCoordinates();\r\n\t\t\tfor (var i = 0; i < pts0.length; i++) {\r\n\t\t\t\tvar hotPixel = new HotPixel(pts0[i], this.scaleFactor, this.li);\r\n\t\t\t\tvar isNodeAdded = this.pointSnapper.snap(hotPixel, e, i);\r\n\t\t\t\tif (isNodeAdded) {\r\n\t\t\t\t\te.addIntersection(pts0[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputeNodes: function (inputSegmentStrings) {\r\n\t\tthis.nodedSegStrings = inputSegmentStrings;\r\n\t\tthis.noder = new MCIndexNoder();\r\n\t\tthis.pointSnapper = new MCIndexPointSnapper(this.noder.getIndex());\r\n\t\tthis.snapRound(inputSegmentStrings, this.li);\r\n\t},\r\n\tcomputeIntersectionSnaps: function (snapPts) {\r\n\t\tfor (var it = snapPts.iterator(); it.hasNext(); ) {\r\n\t\t\tvar snapPt = it.next();\r\n\t\t\tvar hotPixel = new HotPixel(snapPt, this.scaleFactor, this.li);\r\n\t\t\tthis.pointSnapper.snap(hotPixel);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Noder];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn MCIndexSnapRounder;\r\n\t}\r\n});\r\n","import BufferParameters from './BufferParameters';\r\nimport Geometry from '../../geom/Geometry';\r\nimport BufferBuilder from './BufferBuilder';\r\nimport ScaledNoder from '../../noding/ScaledNoder';\r\nimport TopologyException from '../../geom/TopologyException';\r\nimport extend from '../../../../../extend';\r\nimport MathUtil from '../../math/MathUtil';\r\nimport PrecisionModel from '../../geom/PrecisionModel';\r\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\r\nimport MCIndexSnapRounder from '../../noding/snapround/MCIndexSnapRounder';\r\nexport default function BufferOp() {\r\n\tthis.argGeom = null;\r\n\tthis.distance = null;\r\n\tthis.bufParams = new BufferParameters();\r\n\tthis.resultGeometry = null;\r\n\tthis.saveException = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet g = arguments[0];\r\n\t\tthis.argGeom = g;\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet g = arguments[0], bufParams = arguments[1];\r\n\t\tthis.argGeom = g;\r\n\t\tthis.bufParams = bufParams;\r\n\t}\r\n}\r\nextend(BufferOp.prototype, {\r\n\tbufferFixedPrecision: function (fixedPM) {\r\n\t\tvar noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\r\n\t\tvar bufBuilder = new BufferBuilder(this.bufParams);\r\n\t\tbufBuilder.setWorkingPrecisionModel(fixedPM);\r\n\t\tbufBuilder.setNoder(noder);\r\n\t\tthis.resultGeometry = bufBuilder.buffer(this.argGeom, this.distance);\r\n\t},\r\n\tbufferReducedPrecision: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tfor (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.bufferReducedPrecision(precDigits);\r\n\t\t\t\t} catch (ex) {\r\n\t\t\t\t\tif (ex instanceof TopologyException) {\r\n\t\t\t\t\t\tthis.saveException = ex;\r\n\t\t\t\t\t} else throw ex;\r\n\t\t\t\t} finally {}\r\n\t\t\t\tif (this.resultGeometry !== null) return null;\r\n\t\t\t}\r\n\t\t\tthrow this.saveException;\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet precisionDigits = arguments[0];\r\n\t\t\tvar sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this.argGeom, this.distance, precisionDigits);\r\n\t\t\tvar fixedPM = new PrecisionModel(sizeBasedScaleFactor);\r\n\t\t\tthis.bufferFixedPrecision(fixedPM);\r\n\t\t}\r\n\t},\r\n\tcomputeGeometry: function () {\r\n\t\tthis.bufferOriginalPrecision();\r\n\t\tif (this.resultGeometry !== null) return null;\r\n\t\tvar argPM = this.argGeom.getFactory().getPrecisionModel();\r\n\t\tif (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM); else this.bufferReducedPrecision();\r\n\t},\r\n\tsetQuadrantSegments: function (quadrantSegments) {\r\n\t\tthis.bufParams.setQuadrantSegments(quadrantSegments);\r\n\t},\r\n\tbufferOriginalPrecision: function () {\r\n\t\ttry {\r\n\t\t\tvar bufBuilder = new BufferBuilder(this.bufParams);\r\n\t\t\tthis.resultGeometry = bufBuilder.buffer(this.argGeom, this.distance);\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex instanceof RuntimeException) {\r\n\t\t\t\tthis.saveException = ex;\r\n\t\t\t} else throw ex;\r\n\t\t} finally {}\r\n\t},\r\n\tgetResultGeometry: function (distance) {\r\n\t\tthis.distance = distance;\r\n\t\tthis.computeGeometry();\r\n\t\treturn this.resultGeometry;\r\n\t},\r\n\tsetEndCapStyle: function (endCapStyle) {\r\n\t\tthis.bufParams.setEndCapStyle(endCapStyle);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BufferOp;\r\n\t}\r\n});\r\nBufferOp.bufferOp = function () {\r\n\tif (arguments.length === 2) {\r\n\t\tlet g = arguments[0], distance = arguments[1];\r\n\t\tvar gBuf = new BufferOp(g);\r\n\t\tvar geomBuf = gBuf.getResultGeometry(distance);\r\n\t\treturn geomBuf;\r\n\t} else if (arguments.length === 3) {\r\n\t\tif (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\r\n\t\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2];\r\n\t\t\tvar bufOp = new BufferOp(g);\r\n\t\t\tbufOp.setQuadrantSegments(quadrantSegments);\r\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\r\n\t\t\treturn geomBuf;\r\n\t\t} else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\r\n\t\t\tlet g = arguments[0], distance = arguments[1], params = arguments[2];\r\n\t\t\tvar bufOp = new BufferOp(g, params);\r\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\r\n\t\t\treturn geomBuf;\r\n\t\t}\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2], endCapStyle = arguments[3];\r\n\t\tvar bufOp = new BufferOp(g);\r\n\t\tbufOp.setQuadrantSegments(quadrantSegments);\r\n\t\tbufOp.setEndCapStyle(endCapStyle);\r\n\t\tvar geomBuf = bufOp.getResultGeometry(distance);\r\n\t\treturn geomBuf;\r\n\t}\r\n};\r\nBufferOp.precisionScaleFactor = function (g, distance, maxPrecisionDigits) {\r\n\tvar env = g.getEnvelopeInternal();\r\n\tvar envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\r\n\tvar expandByDistance = distance > 0.0 ? distance : 0.0;\r\n\tvar bufEnvMax = envMax + 2 * expandByDistance;\r\n\tvar bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\r\n\tvar minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\r\n\tvar scaleFactor = Math.pow(10.0, minUnitLog10);\r\n\treturn scaleFactor;\r\n};\r\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND;\r\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT;\r\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT;\r\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE;\r\nBufferOp.MAX_PRECISION_DIGITS = 12;\r\n","import Polygon from '../Polygon';\r\nimport extend from '../../../../../extend';\r\nimport GeometryCollection from '../GeometryCollection';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport GeometryFilter from '../GeometryFilter';\r\nexport default function PolygonExtracter() {\r\n\tthis.comps = null;\r\n\tlet comps = arguments[0];\r\n\tthis.comps = comps;\r\n}\r\nextend(PolygonExtracter.prototype, {\r\n\tfilter: function (geom) {\r\n\t\tif (geom instanceof Polygon) this.comps.add(geom);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PolygonExtracter;\r\n\t}\r\n});\r\nPolygonExtracter.getPolygons = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet geom = arguments[0];\r\n\t\treturn PolygonExtracter.getPolygons(geom, new ArrayList());\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet geom = arguments[0], list = arguments[1];\r\n\t\tif (geom instanceof Polygon) {\r\n\t\t\tlist.add(geom);\r\n\t\t} else if (geom instanceof GeometryCollection) {\r\n\t\t\tgeom.apply(new PolygonExtracter(list));\r\n\t\t}\r\n\t\treturn list;\r\n\t}\r\n};\r\n","import extend from '../../../../../extend';\r\nexport default function GeometryLocation() {\r\n\tthis.component = null;\r\n\tthis.segIndex = null;\r\n\tthis.pt = null;\r\n\tif (arguments.length === 2) {\r\n\t\tlet component = arguments[0], pt = arguments[1];\r\n\t\tGeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet component = arguments[0], segIndex = arguments[1], pt = arguments[2];\r\n\t\tthis.component = component;\r\n\t\tthis.segIndex = segIndex;\r\n\t\tthis.pt = pt;\r\n\t}\r\n}\r\nextend(GeometryLocation.prototype, {\r\n\tisInsideArea: function () {\r\n\t\treturn this.segIndex === GeometryLocation.INSIDE_AREA;\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.pt;\r\n\t},\r\n\tgetGeometryComponent: function () {\r\n\t\treturn this.component;\r\n\t},\r\n\tgetSegmentIndex: function () {\r\n\t\treturn this.segIndex;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryLocation;\r\n\t}\r\n});\r\nGeometryLocation.INSIDE_AREA = -1;\r\n","import Point from '../Point';\r\nimport extend from '../../../../../extend';\r\nimport Collections from '../../../../../java/util/Collections';\r\nimport GeometryCollection from '../GeometryCollection';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport GeometryFilter from '../GeometryFilter';\r\nexport default function PointExtracter() {\r\n\tthis.pts = null;\r\n\tlet pts = arguments[0];\r\n\tthis.pts = pts;\r\n}\r\nextend(PointExtracter.prototype, {\r\n\tfilter: function (geom) {\r\n\t\tif (geom instanceof Point) this.pts.add(geom);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PointExtracter;\r\n\t}\r\n});\r\nPointExtracter.getPoints = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet geom = arguments[0];\r\n\t\tif (geom instanceof Point) {\r\n\t\t\treturn Collections.singletonList(geom);\r\n\t\t}\r\n\t\treturn PointExtracter.getPoints(geom, new ArrayList());\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet geom = arguments[0], list = arguments[1];\r\n\t\tif (geom instanceof Point) {\r\n\t\t\tlist.add(geom);\r\n\t\t} else if (geom instanceof GeometryCollection) {\r\n\t\t\tgeom.apply(new PointExtracter(list));\r\n\t\t}\r\n\t\treturn list;\r\n\t}\r\n};\r\n","import LineString from '../../geom/LineString';\r\nimport Point from '../../geom/Point';\r\nimport Polygon from '../../geom/Polygon';\r\nimport GeometryLocation from './GeometryLocation';\r\nimport extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport GeometryFilter from '../../geom/GeometryFilter';\r\nexport default function ConnectedElementLocationFilter() {\r\n\tthis.locations = null;\r\n\tlet locations = arguments[0];\r\n\tthis.locations = locations;\r\n}\r\nextend(ConnectedElementLocationFilter.prototype, {\r\n\tfilter: function (geom) {\r\n\t\tif (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this.locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()));\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ConnectedElementLocationFilter;\r\n\t}\r\n});\r\nConnectedElementLocationFilter.getLocations = function (geom) {\r\n\tvar locations = new ArrayList();\r\n\tgeom.apply(new ConnectedElementLocationFilter(locations));\r\n\treturn locations;\r\n};\r\n","import PointLocator from '../../algorithm/PointLocator';\r\nimport PolygonExtracter from '../../geom/util/PolygonExtracter';\r\nimport Location from '../../geom/Location';\r\nimport LineString from '../../geom/LineString';\r\nimport CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\r\nimport Point from '../../geom/Point';\r\nimport Polygon from '../../geom/Polygon';\r\nimport GeometryLocation from './GeometryLocation';\r\nimport Double from '../../../../../java/lang/Double';\r\nimport PointExtracter from '../../geom/util/PointExtracter';\r\nimport extend from '../../../../../extend';\r\nimport ConnectedElementLocationFilter from './ConnectedElementLocationFilter';\r\nimport LineSegment from '../../geom/LineSegment';\r\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\r\nimport List from '../../../../../java/util/List';\r\nexport default function DistanceOp() {\r\n\tthis.geom = null;\r\n\tthis.terminateDistance = 0.0;\r\n\tthis.ptLocator = new PointLocator();\r\n\tthis.minDistanceLocation = null;\r\n\tthis.minDistance = Double.MAX_VALUE;\r\n\tif (arguments.length === 2) {\r\n\t\tlet g0 = arguments[0], g1 = arguments[1];\r\n\t\tDistanceOp.call(this, g0, g1, 0.0);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet g0 = arguments[0], g1 = arguments[1], terminateDistance = arguments[2];\r\n\t\tthis.geom = new Array(2).fill(null);\r\n\t\tthis.geom[0] = g0;\r\n\t\tthis.geom[1] = g1;\r\n\t\tthis.terminateDistance = terminateDistance;\r\n\t}\r\n}\r\nextend(DistanceOp.prototype, {\r\n\tcomputeContainmentDistance: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tvar locPtPoly = new Array(2).fill(null);\r\n\t\t\tthis.computeContainmentDistance(0, locPtPoly);\r\n\t\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\t\tthis.computeContainmentDistance(1, locPtPoly);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet polyGeomIndex = arguments[0], locPtPoly = arguments[1];\r\n\t\t\tvar locationsIndex = 1 - polyGeomIndex;\r\n\t\t\tvar polys = PolygonExtracter.getPolygons(this.geom[polyGeomIndex]);\r\n\t\t\tif (polys.size() > 0) {\r\n\t\t\t\tvar insideLocs = ConnectedElementLocationFilter.getLocations(this.geom[locationsIndex]);\r\n\t\t\t\tthis.computeContainmentDistance(insideLocs, polys, locPtPoly);\r\n\t\t\t\tif (this.minDistance <= this.terminateDistance) {\r\n\t\t\t\t\tthis.minDistanceLocation[locationsIndex] = locPtPoly[0];\r\n\t\t\t\t\tthis.minDistanceLocation[polyGeomIndex] = locPtPoly[1];\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tif (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\r\n\t\t\t\tlet locs = arguments[0], polys = arguments[1], locPtPoly = arguments[2];\r\n\t\t\t\tfor (var i = 0; i < locs.size(); i++) {\r\n\t\t\t\t\tvar loc = locs.get(i);\r\n\t\t\t\t\tfor (var j = 0; j < polys.size(); j++) {\r\n\t\t\t\t\t\tthis.computeContainmentDistance(loc, polys.get(j), locPtPoly);\r\n\t\t\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\r\n\t\t\t\tlet ptLoc = arguments[0], poly = arguments[1], locPtPoly = arguments[2];\r\n\t\t\t\tvar pt = ptLoc.getCoordinate();\r\n\t\t\t\tif (Location.EXTERIOR !== this.ptLocator.locate(pt, poly)) {\r\n\t\t\t\t\tthis.minDistance = 0.0;\r\n\t\t\t\t\tlocPtPoly[0] = ptLoc;\r\n\t\t\t\t\tlocPtPoly[1] = new GeometryLocation(poly, pt);\r\n\t\t\t\t\t;\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputeMinDistanceLinesPoints: function (lines, points, locGeom) {\r\n\t\tfor (var i = 0; i < lines.size(); i++) {\r\n\t\t\tvar line = lines.get(i);\r\n\t\t\tfor (var j = 0; j < points.size(); j++) {\r\n\t\t\t\tvar pt = points.get(j);\r\n\t\t\t\tthis.computeMinDistance(line, pt, locGeom);\r\n\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputeFacetDistance: function () {\r\n\t\tvar locGeom = new Array(2).fill(null);\r\n\t\tvar lines0 = LinearComponentExtracter.getLines(this.geom[0]);\r\n\t\tvar lines1 = LinearComponentExtracter.getLines(this.geom[1]);\r\n\t\tvar pts0 = PointExtracter.getPoints(this.geom[0]);\r\n\t\tvar pts1 = PointExtracter.getPoints(this.geom[1]);\r\n\t\tthis.computeMinDistanceLines(lines0, lines1, locGeom);\r\n\t\tthis.updateMinDistance(locGeom, false);\r\n\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\tlocGeom[0] = null;\r\n\t\tlocGeom[1] = null;\r\n\t\tthis.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\r\n\t\tthis.updateMinDistance(locGeom, false);\r\n\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\tlocGeom[0] = null;\r\n\t\tlocGeom[1] = null;\r\n\t\tthis.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\r\n\t\tthis.updateMinDistance(locGeom, true);\r\n\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\tlocGeom[0] = null;\r\n\t\tlocGeom[1] = null;\r\n\t\tthis.computeMinDistancePoints(pts0, pts1, locGeom);\r\n\t\tthis.updateMinDistance(locGeom, false);\r\n\t},\r\n\tnearestLocations: function () {\r\n\t\tthis.computeMinDistance();\r\n\t\treturn this.minDistanceLocation;\r\n\t},\r\n\tupdateMinDistance: function (locGeom, flip) {\r\n\t\tif (locGeom[0] === null) return null;\r\n\t\tif (flip) {\r\n\t\t\tthis.minDistanceLocation[0] = locGeom[1];\r\n\t\t\tthis.minDistanceLocation[1] = locGeom[0];\r\n\t\t} else {\r\n\t\t\tthis.minDistanceLocation[0] = locGeom[0];\r\n\t\t\tthis.minDistanceLocation[1] = locGeom[1];\r\n\t\t}\r\n\t},\r\n\tnearestPoints: function () {\r\n\t\tthis.computeMinDistance();\r\n\t\tvar nearestPts = [this.minDistanceLocation[0].getCoordinate(), this.minDistanceLocation[1].getCoordinate()];\r\n\t\treturn nearestPts;\r\n\t},\r\n\tcomputeMinDistance: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tif (this.minDistanceLocation !== null) return null;\r\n\t\t\tthis.minDistanceLocation = new Array(2).fill(null);\r\n\t\t\tthis.computeContainmentDistance();\r\n\t\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\t\tthis.computeFacetDistance();\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tif (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\r\n\t\t\t\tlet line = arguments[0], pt = arguments[1], locGeom = arguments[2];\r\n\t\t\t\tif (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this.minDistance) return null;\r\n\t\t\t\tvar coord0 = line.getCoordinates();\r\n\t\t\t\tvar coord = pt.getCoordinate();\r\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\r\n\t\t\t\t\tvar dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\r\n\t\t\t\t\tif (dist < this.minDistance) {\r\n\t\t\t\t\t\tthis.minDistance = dist;\r\n\t\t\t\t\t\tvar seg = new LineSegment(coord0[i], coord0[i + 1]);\r\n\t\t\t\t\t\tvar segClosestPoint = seg.closestPoint(coord);\r\n\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line, i, segClosestPoint);\r\n\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt, 0, coord);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\t\t\t}\r\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\r\n\t\t\t\tlet line0 = arguments[0], line1 = arguments[1], locGeom = arguments[2];\r\n\t\t\t\tif (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this.minDistance) return null;\r\n\t\t\t\tvar coord0 = line0.getCoordinates();\r\n\t\t\t\tvar coord1 = line1.getCoordinates();\r\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\r\n\t\t\t\t\tfor (var j = 0; j < coord1.length - 1; j++) {\r\n\t\t\t\t\t\tvar dist = CGAlgorithms.distanceLineLine(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1]);\r\n\t\t\t\t\t\tif (dist < this.minDistance) {\r\n\t\t\t\t\t\t\tthis.minDistance = dist;\r\n\t\t\t\t\t\t\tvar seg0 = new LineSegment(coord0[i], coord0[i + 1]);\r\n\t\t\t\t\t\t\tvar seg1 = new LineSegment(coord1[j], coord1[j + 1]);\r\n\t\t\t\t\t\t\tvar closestPt = seg0.closestPoints(seg1);\r\n\t\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line0, i, closestPt[0]);\r\n\t\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(line1, j, closestPt[1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputeMinDistancePoints: function (points0, points1, locGeom) {\r\n\t\tfor (var i = 0; i < points0.size(); i++) {\r\n\t\t\tvar pt0 = points0.get(i);\r\n\t\t\tfor (var j = 0; j < points1.size(); j++) {\r\n\t\t\t\tvar pt1 = points1.get(j);\r\n\t\t\t\tvar dist = pt0.getCoordinate().distance(pt1.getCoordinate());\r\n\t\t\t\tif (dist < this.minDistance) {\r\n\t\t\t\t\tthis.minDistance = dist;\r\n\t\t\t\t\tlocGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\r\n\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\r\n\t\t\t\t}\r\n\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdistance: function () {\r\n\t\tif (this.geom[0] === null || this.geom[1] === null) throw new IllegalArgumentException(\"null geometries are not supported\");\r\n\t\tif (this.geom[0].isEmpty() || this.geom[1].isEmpty()) return 0.0;\r\n\t\tthis.computeMinDistance();\r\n\t\treturn this.minDistance;\r\n\t},\r\n\tcomputeMinDistanceLines: function (lines0, lines1, locGeom) {\r\n\t\tfor (var i = 0; i < lines0.size(); i++) {\r\n\t\t\tvar line0 = lines0.get(i);\r\n\t\t\tfor (var j = 0; j < lines1.size(); j++) {\r\n\t\t\t\tvar line1 = lines1.get(j);\r\n\t\t\t\tthis.computeMinDistance(line0, line1, locGeom);\r\n\t\t\t\tif (this.minDistance <= this.terminateDistance) return null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DistanceOp;\r\n\t}\r\n});\r\nDistanceOp.distance = function (g0, g1) {\r\n\tvar distOp = new DistanceOp(g0, g1);\r\n\treturn distOp.distance();\r\n};\r\nDistanceOp.isWithinDistance = function (g0, g1, distance) {\r\n\tvar distOp = new DistanceOp(g0, g1, distance);\r\n\treturn distOp.distance() <= distance;\r\n};\r\nDistanceOp.nearestPoints = function (g0, g1) {\r\n\tvar distOp = new DistanceOp(g0, g1);\r\n\treturn distOp.nearestPoints();\r\n};\r\n","import CoordinateList from '../../geom/CoordinateList';\r\nimport extend from '../../../../../extend';\r\nimport CoordinateArrays from '../../geom/CoordinateArrays';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nexport default function EdgeString() {\r\n\tthis.factory = null;\r\n\tthis.directedEdges = new ArrayList();\r\n\tthis.coordinates = null;\r\n\tlet factory = arguments[0];\r\n\tthis.factory = factory;\r\n}\r\nextend(EdgeString.prototype, {\r\n\tgetCoordinates: function () {\r\n\t\tif (this.coordinates === null) {\r\n\t\t\tvar forwardDirectedEdges = 0;\r\n\t\t\tvar reverseDirectedEdges = 0;\r\n\t\t\tvar coordinateList = new CoordinateList();\r\n\t\t\tfor (var i = this.directedEdges.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar directedEdge = i.next();\r\n\t\t\t\tif (directedEdge.getEdgeDirection()) {\r\n\t\t\t\t\tforwardDirectedEdges++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treverseDirectedEdges++;\r\n\t\t\t\t}\r\n\t\t\t\tcoordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection());\r\n\t\t\t}\r\n\t\t\tthis.coordinates = coordinateList.toCoordinateArray();\r\n\t\t\tif (reverseDirectedEdges > forwardDirectedEdges) {\r\n\t\t\t\tCoordinateArrays.reverse(this.coordinates);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.coordinates;\r\n\t},\r\n\ttoLineString: function () {\r\n\t\treturn this.factory.createLineString(this.getCoordinates());\r\n\t},\r\n\tadd: function (directedEdge) {\r\n\t\tthis.directedEdges.add(directedEdge);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeString;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nexport default function GraphComponent() {\r\n\tthis._isMarked = false;\r\n\tthis._isVisited = false;\r\n\tthis.data = null;\r\n}\r\nextend(GraphComponent.prototype, {\r\n\tsetVisited: function (isVisited) {\r\n\t\tthis._isVisited = isVisited;\r\n\t},\r\n\tisMarked: function () {\r\n\t\treturn this._isMarked;\r\n\t},\r\n\tsetData: function (data) {\r\n\t\tthis.data = data;\r\n\t},\r\n\tgetData: function () {\r\n\t\treturn this.data;\r\n\t},\r\n\tsetMarked: function (isMarked) {\r\n\t\tthis._isMarked = isMarked;\r\n\t},\r\n\tgetContext: function () {\r\n\t\treturn this.data;\r\n\t},\r\n\tisVisited: function () {\r\n\t\treturn this._isVisited;\r\n\t},\r\n\tsetContext: function (data) {\r\n\t\tthis.data = data;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GraphComponent;\r\n\t}\r\n});\r\nGraphComponent.getComponentWithVisitedState = function (i, visitedState) {\r\n\twhile (i.hasNext()) {\r\n\t\tvar comp = i.next();\r\n\t\tif (comp.isVisited() === visitedState) return comp;\r\n\t}\r\n\treturn null;\r\n};\r\nGraphComponent.setVisited = function (i, visited) {\r\n\twhile (i.hasNext()) {\r\n\t\tvar comp = i.next();\r\n\t\tcomp.setVisited(visited);\r\n\t}\r\n};\r\nGraphComponent.setMarked = function (i, marked) {\r\n\twhile (i.hasNext()) {\r\n\t\tvar comp = i.next();\r\n\t\tcomp.setMarked(marked);\r\n\t}\r\n};\r\n","import CGAlgorithms from '../algorithm/CGAlgorithms';\r\nimport extend from '../../../../extend';\r\nimport Comparable from '../../../../java/lang/Comparable';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Quadrant from '../geomgraph/Quadrant';\r\nimport inherits from '../../../../inherits';\r\nimport GraphComponent from './GraphComponent';\r\nexport default function DirectedEdge() {\r\n\tGraphComponent.apply(this);\r\n\tthis.parentEdge = null;\r\n\tthis.from = null;\r\n\tthis.to = null;\r\n\tthis.p0 = null;\r\n\tthis.p1 = null;\r\n\tthis.sym = null;\r\n\tthis.edgeDirection = null;\r\n\tthis.quadrant = null;\r\n\tthis.angle = null;\r\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\r\n\tthis.from = from;\r\n\tthis.to = to;\r\n\tthis.edgeDirection = edgeDirection;\r\n\tthis.p0 = from.getCoordinate();\r\n\tthis.p1 = directionPt;\r\n\tvar dx = this.p1.x - this.p0.x;\r\n\tvar dy = this.p1.y - this.p0.y;\r\n\tthis.quadrant = Quadrant.quadrant(dx, dy);\r\n\tthis.angle = Math.atan2(dy, dx);\r\n}\r\ninherits(DirectedEdge, GraphComponent);\r\nextend(DirectedEdge.prototype, {\r\n\tisRemoved: function () {\r\n\t\treturn this.parentEdge === null;\r\n\t},\r\n\tcompareDirection: function (e) {\r\n\t\tif (this.quadrant > e.quadrant) return 1;\r\n\t\tif (this.quadrant < e.quadrant) return -1;\r\n\t\treturn CGAlgorithms.computeOrientation(e.p0, e.p1, this.p1);\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.from.getCoordinate();\r\n\t},\r\n\tprint: function (out) {\r\n\t\tvar className = this.getClass().getName();\r\n\t\tvar lastDotPos = className.lastIndexOf('.');\r\n\t\tvar name = className.substring(lastDotPos + 1);\r\n\t\tout.print(\"  \" + name + \": \" + this.p0 + \" - \" + this.p1 + \" \" + this.quadrant + \":\" + this.angle);\r\n\t},\r\n\tgetDirectionPt: function () {\r\n\t\treturn this.p1;\r\n\t},\r\n\tgetAngle: function () {\r\n\t\treturn this.angle;\r\n\t},\r\n\tcompareTo: function (obj) {\r\n\t\tvar de = obj;\r\n\t\treturn this.compareDirection(de);\r\n\t},\r\n\tgetFromNode: function () {\r\n\t\treturn this.from;\r\n\t},\r\n\tgetSym: function () {\r\n\t\treturn this.sym;\r\n\t},\r\n\tsetEdge: function (parentEdge) {\r\n\t\tthis.parentEdge = parentEdge;\r\n\t},\r\n\tremove: function () {\r\n\t\tthis.sym = null;\r\n\t\tthis.parentEdge = null;\r\n\t},\r\n\tgetEdge: function () {\r\n\t\treturn this.parentEdge;\r\n\t},\r\n\tgetQuadrant: function () {\r\n\t\treturn this.quadrant;\r\n\t},\r\n\tsetSym: function (sym) {\r\n\t\tthis.sym = sym;\r\n\t},\r\n\tgetToNode: function () {\r\n\t\treturn this.to;\r\n\t},\r\n\tgetEdgeDirection: function () {\r\n\t\treturn this.edgeDirection;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparable];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DirectedEdge;\r\n\t}\r\n});\r\nDirectedEdge.toEdges = function (dirEdges) {\r\n\tvar edges = new ArrayList();\r\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\r\n\t\tedges.add(i.next().parentEdge);\r\n\t}\r\n\treturn edges;\r\n};\r\n","import extend from '../../../../../extend';\r\nimport DirectedEdge from '../../planargraph/DirectedEdge';\r\nimport Assert from '../../util/Assert';\r\nimport inherits from '../../../../../inherits';\r\nexport default function LineMergeDirectedEdge() {\r\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\r\n\tDirectedEdge.call(this, from, to, directionPt, edgeDirection);\r\n}\r\ninherits(LineMergeDirectedEdge, DirectedEdge);\r\nextend(LineMergeDirectedEdge.prototype, {\r\n\tgetNext: function () {\r\n\t\tif (this.getToNode().getDegree() !== 2) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) {\r\n\t\t\treturn this.getToNode().getOutEdges().getEdges().get(1);\r\n\t\t}\r\n\t\tAssert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym());\r\n\t\treturn this.getToNode().getOutEdges().getEdges().get(0);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineMergeDirectedEdge;\r\n\t}\r\n});\r\n","import Node from './Node';\r\nimport extend from '../../../../extend';\r\nimport inherits from '../../../../inherits';\r\nimport GraphComponent from './GraphComponent';\r\nexport default function Edge() {\r\n\tGraphComponent.apply(this);\r\n\tthis.dirEdge = null;\r\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\r\n\t\tlet de0 = arguments[0], de1 = arguments[1];\r\n\t\tthis.setDirectedEdges(de0, de1);\r\n\t}\r\n}\r\ninherits(Edge, GraphComponent);\r\nextend(Edge.prototype, {\r\n\tisRemoved: function () {\r\n\t\treturn this.dirEdge === null;\r\n\t},\r\n\tsetDirectedEdges: function (de0, de1) {\r\n\t\tthis.dirEdge = [de0, de1];\r\n\t\tde0.setEdge(this);\r\n\t\tde1.setEdge(this);\r\n\t\tde0.setSym(de1);\r\n\t\tde1.setSym(de0);\r\n\t\tde0.getFromNode().addOutEdge(de0);\r\n\t\tde1.getFromNode().addOutEdge(de1);\r\n\t},\r\n\tgetDirEdge: function () {\r\n\t\tif (Number.isInteger(arguments[0])) {\r\n\t\t\tlet i = arguments[0];\r\n\t\t\treturn this.dirEdge[i];\r\n\t\t} else if (arguments[0] instanceof Node) {\r\n\t\t\tlet fromNode = arguments[0];\r\n\t\t\tif (this.dirEdge[0].getFromNode() === fromNode) return this.dirEdge[0];\r\n\t\t\tif (this.dirEdge[1].getFromNode() === fromNode) return this.dirEdge[1];\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tremove: function () {\r\n\t\tthis.dirEdge = null;\r\n\t},\r\n\tgetOppositeNode: function (node) {\r\n\t\tif (this.dirEdge[0].getFromNode() === node) return this.dirEdge[0].getToNode();\r\n\t\tif (this.dirEdge[1].getFromNode() === node) return this.dirEdge[1].getToNode();\r\n\t\treturn null;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Edge;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport Collections from '../../../../java/util/Collections';\r\nimport DirectedEdge from './DirectedEdge';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Edge from './Edge';\r\nexport default function DirectedEdgeStar() {\r\n\tthis.outEdges = new ArrayList();\r\n\tthis.sorted = false;\r\n}\r\nextend(DirectedEdgeStar.prototype, {\r\n\tgetNextEdge: function (dirEdge) {\r\n\t\tvar i = this.getIndex(dirEdge);\r\n\t\treturn this.outEdges.get(this.getIndex(i + 1));\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\tvar it = this.iterator();\r\n\t\tif (!it.hasNext()) return null;\r\n\t\tvar e = it.next();\r\n\t\treturn e.getCoordinate();\r\n\t},\r\n\titerator: function () {\r\n\t\tthis.sortEdges();\r\n\t\treturn this.outEdges.iterator();\r\n\t},\r\n\tsortEdges: function () {\r\n\t\tif (!this.sorted) {\r\n\t\t\tCollections.sort(this.outEdges);\r\n\t\t\tthis.sorted = true;\r\n\t\t}\r\n\t},\r\n\tremove: function (de) {\r\n\t\tthis.outEdges.remove(de);\r\n\t},\r\n\tgetEdges: function () {\r\n\t\tthis.sortEdges();\r\n\t\treturn this.outEdges;\r\n\t},\r\n\tgetNextCWEdge: function (dirEdge) {\r\n\t\tvar i = this.getIndex(dirEdge);\r\n\t\treturn this.outEdges.get(this.getIndex(i - 1));\r\n\t},\r\n\tgetIndex: function () {\r\n\t\tif (arguments[0] instanceof Edge) {\r\n\t\t\tlet edge = arguments[0];\r\n\t\t\tthis.sortEdges();\r\n\t\t\tfor (var i = 0; i < this.outEdges.size(); i++) {\r\n\t\t\t\tvar de = this.outEdges.get(i);\r\n\t\t\t\tif (de.getEdge() === edge) return i;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\r\n\t\t\tlet dirEdge = arguments[0];\r\n\t\t\tthis.sortEdges();\r\n\t\t\tfor (var i = 0; i < this.outEdges.size(); i++) {\r\n\t\t\t\tvar de = this.outEdges.get(i);\r\n\t\t\t\tif (de === dirEdge) return i;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t} else if (Number.isInteger(arguments[0])) {\r\n\t\t\tlet i = arguments[0];\r\n\t\t\tvar modi = i % this.outEdges.size();\r\n\t\t\tif (modi < 0) modi += this.outEdges.size();\r\n\t\t\treturn modi;\r\n\t\t}\r\n\t},\r\n\tadd: function (de) {\r\n\t\tthis.outEdges.add(de);\r\n\t\tthis.sorted = false;\r\n\t},\r\n\tgetDegree: function () {\r\n\t\treturn this.outEdges.size();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DirectedEdgeStar;\r\n\t}\r\n});\r\n","import DirectedEdgeStar from './DirectedEdgeStar';\r\nimport HashSet from '../../../../java/util/HashSet';\r\nimport extend from '../../../../extend';\r\nimport DirectedEdge from './DirectedEdge';\r\nimport inherits from '../../../../inherits';\r\nimport GraphComponent from './GraphComponent';\r\nexport default function Node() {\r\n\tGraphComponent.apply(this);\r\n\tthis.pt = null;\r\n\tthis.deStar = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet pt = arguments[0];\r\n\t\tNode.call(this, pt, new DirectedEdgeStar());\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet pt = arguments[0], deStar = arguments[1];\r\n\t\tthis.pt = pt;\r\n\t\tthis.deStar = deStar;\r\n\t}\r\n}\r\ninherits(Node, GraphComponent);\r\nextend(Node.prototype, {\r\n\tisRemoved: function () {\r\n\t\treturn this.pt === null;\r\n\t},\r\n\taddOutEdge: function (de) {\r\n\t\tthis.deStar.add(de);\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.pt;\r\n\t},\r\n\tgetOutEdges: function () {\r\n\t\treturn this.deStar;\r\n\t},\r\n\tremove: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\tthis.pt = null;\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet de = arguments[0];\r\n\t\t\tthis.deStar.remove(de);\r\n\t\t}\r\n\t},\r\n\tgetIndex: function (edge) {\r\n\t\treturn this.deStar.getIndex(edge);\r\n\t},\r\n\tgetDegree: function () {\r\n\t\treturn this.deStar.getDegree();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Node;\r\n\t}\r\n});\r\nNode.getEdgesBetween = function (node0, node1) {\r\n\tvar edges0 = DirectedEdge.toEdges(node0.getOutEdges().getEdges());\r\n\tvar commonEdges = new HashSet(edges0);\r\n\tvar edges1 = DirectedEdge.toEdges(node1.getOutEdges().getEdges());\r\n\tcommonEdges.retainAll(edges1);\r\n\treturn commonEdges;\r\n};\r\n","import extend from '../../../../../extend';\r\nimport Edge from '../../planargraph/Edge';\r\nimport inherits from '../../../../../inherits';\r\nexport default function LineMergeEdge() {\r\n\tEdge.apply(this);\r\n\tthis.line = null;\r\n\tlet line = arguments[0];\r\n\tthis.line = line;\r\n}\r\ninherits(LineMergeEdge, Edge);\r\nextend(LineMergeEdge.prototype, {\r\n\tgetLine: function () {\r\n\t\treturn this.line;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineMergeEdge;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport TreeMap from '../../../../java/util/TreeMap';\r\nexport default function NodeMap() {\r\n\tthis.nodeMap = new TreeMap();\r\n}\r\nextend(NodeMap.prototype, {\r\n\tfind: function (coord) {\r\n\t\treturn this.nodeMap.get(coord);\r\n\t},\r\n\titerator: function () {\r\n\t\treturn this.nodeMap.values().iterator();\r\n\t},\r\n\tremove: function (pt) {\r\n\t\treturn this.nodeMap.remove(pt);\r\n\t},\r\n\tvalues: function () {\r\n\t\treturn this.nodeMap.values();\r\n\t},\r\n\tadd: function (n) {\r\n\t\tthis.nodeMap.put(n.getCoordinate(), n);\r\n\t\treturn n;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NodeMap;\r\n\t}\r\n});\r\n","import HashSet from '../../../../java/util/HashSet';\r\nimport Node from './Node';\r\nimport extend from '../../../../extend';\r\nimport NodeMap from './NodeMap';\r\nimport DirectedEdge from './DirectedEdge';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Edge from './Edge';\r\nexport default function PlanarGraph() {\r\n\tthis.edges = new HashSet();\r\n\tthis.dirEdges = new HashSet();\r\n\tthis.nodeMap = new NodeMap();\r\n}\r\nextend(PlanarGraph.prototype, {\r\n\tfindNodesOfDegree: function (degree) {\r\n\t\tvar nodesFound = new ArrayList();\r\n\t\tfor (var i = this.nodeIterator(); i.hasNext(); ) {\r\n\t\t\tvar node = i.next();\r\n\t\t\tif (node.getDegree() === degree) nodesFound.add(node);\r\n\t\t}\r\n\t\treturn nodesFound;\r\n\t},\r\n\tdirEdgeIterator: function () {\r\n\t\treturn this.dirEdges.iterator();\r\n\t},\r\n\tedgeIterator: function () {\r\n\t\treturn this.edges.iterator();\r\n\t},\r\n\tremove: function () {\r\n\t\tif (arguments[0] instanceof Edge) {\r\n\t\t\tlet edge = arguments[0];\r\n\t\t\tthis.remove(edge.getDirEdge(0));\r\n\t\t\tthis.remove(edge.getDirEdge(1));\r\n\t\t\tthis.edges.remove(edge);\r\n\t\t\tedge.remove();\r\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\r\n\t\t\tlet de = arguments[0];\r\n\t\t\tvar sym = de.getSym();\r\n\t\t\tif (sym !== null) sym.setSym(null);\r\n\t\t\tde.getFromNode().remove(de);\r\n\t\t\tde.remove();\r\n\t\t\tthis.dirEdges.remove(de);\r\n\t\t} else if (arguments[0] instanceof Node) {\r\n\t\t\tlet node = arguments[0];\r\n\t\t\tvar outEdges = node.getOutEdges().getEdges();\r\n\t\t\tfor (var i = outEdges.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar de = i.next();\r\n\t\t\t\tvar sym = de.getSym();\r\n\t\t\t\tif (sym !== null) this.remove(sym);\r\n\t\t\t\tthis.dirEdges.remove(de);\r\n\t\t\t\tvar edge = de.getEdge();\r\n\t\t\t\tif (edge !== null) {\r\n\t\t\t\t\tthis.edges.remove(edge);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.nodeMap.remove(node.getCoordinate());\r\n\t\t\tnode.remove();\r\n\t\t}\r\n\t},\r\n\tfindNode: function (pt) {\r\n\t\treturn this.nodeMap.find(pt);\r\n\t},\r\n\tgetEdges: function () {\r\n\t\treturn this.edges;\r\n\t},\r\n\tnodeIterator: function () {\r\n\t\treturn this.nodeMap.iterator();\r\n\t},\r\n\tcontains: function () {\r\n\t\tif (arguments[0] instanceof Edge) {\r\n\t\t\tlet e = arguments[0];\r\n\t\t\treturn this.edges.contains(e);\r\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\r\n\t\t\tlet de = arguments[0];\r\n\t\t\treturn this.dirEdges.contains(de);\r\n\t\t}\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments[0] instanceof Node) {\r\n\t\t\tlet node = arguments[0];\r\n\t\t\tthis.nodeMap.add(node);\r\n\t\t} else if (arguments[0] instanceof Edge) {\r\n\t\t\tlet edge = arguments[0];\r\n\t\t\tthis.edges.add(edge);\r\n\t\t\tthis.add(edge.getDirEdge(0));\r\n\t\t\tthis.add(edge.getDirEdge(1));\r\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\r\n\t\t\tlet dirEdge = arguments[0];\r\n\t\t\tthis.dirEdges.add(dirEdge);\r\n\t\t}\r\n\t},\r\n\tgetNodes: function () {\r\n\t\treturn this.nodeMap.values();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PlanarGraph;\r\n\t}\r\n});\r\n","import LineMergeDirectedEdge from './LineMergeDirectedEdge';\r\nimport Node from '../../planargraph/Node';\r\nimport extend from '../../../../../extend';\r\nimport CoordinateArrays from '../../geom/CoordinateArrays';\r\nimport LineMergeEdge from './LineMergeEdge';\r\nimport inherits from '../../../../../inherits';\r\nimport PlanarGraph from '../../planargraph/PlanarGraph';\r\nexport default function LineMergeGraph() {\r\n\tPlanarGraph.apply(this);\r\n}\r\ninherits(LineMergeGraph, PlanarGraph);\r\nextend(LineMergeGraph.prototype, {\r\n\taddEdge: function (lineString) {\r\n\t\tif (lineString.isEmpty()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());\r\n\t\tif (coordinates.length <= 1) return null;\r\n\t\tvar startCoordinate = coordinates[0];\r\n\t\tvar endCoordinate = coordinates[coordinates.length - 1];\r\n\t\tvar startNode = this.getNode(startCoordinate);\r\n\t\tvar endNode = this.getNode(endCoordinate);\r\n\t\tvar directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true);\r\n\t\tvar directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false);\r\n\t\tvar edge = new LineMergeEdge(lineString);\r\n\t\tedge.setDirectedEdges(directedEdge0, directedEdge1);\r\n\t\tthis.add(edge);\r\n\t},\r\n\tgetNode: function (coordinate) {\r\n\t\tvar node = this.findNode(coordinate);\r\n\t\tif (node === null) {\r\n\t\t\tnode = new Node(coordinate);\r\n\t\t\tthis.add(node);\r\n\t\t}\r\n\t\treturn node;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineMergeGraph;\r\n\t}\r\n});\r\n","import LineString from '../../geom/LineString';\r\nimport Geometry from '../../geom/Geometry';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport Collection from '../../../../../java/util/Collection';\r\nimport EdgeString from './EdgeString';\r\nimport extend from '../../../../../extend';\r\nimport LineMergeGraph from './LineMergeGraph';\r\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Assert from '../../util/Assert';\r\nimport GraphComponent from '../../planargraph/GraphComponent';\r\nexport default function LineMerger() {\r\n\tthis.graph = new LineMergeGraph();\r\n\tthis.mergedLineStrings = null;\r\n\tthis.factory = null;\r\n\tthis.edgeStrings = null;\r\n}\r\nextend(LineMerger.prototype, {\r\n\tbuildEdgeStringsForUnprocessedNodes: function () {\r\n\t\tfor (var i = this.graph.getNodes().iterator(); i.hasNext(); ) {\r\n\t\t\tvar node = i.next();\r\n\t\t\tif (!node.isMarked()) {\r\n\t\t\t\tAssert.isTrue(node.getDegree() === 2);\r\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\r\n\t\t\t\tnode.setMarked(true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tbuildEdgeStringsForNonDegree2Nodes: function () {\r\n\t\tfor (var i = this.graph.getNodes().iterator(); i.hasNext(); ) {\r\n\t\t\tvar node = i.next();\r\n\t\t\tif (node.getDegree() !== 2) {\r\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\r\n\t\t\t\tnode.setMarked(true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tbuildEdgeStringsForObviousStartNodes: function () {\r\n\t\tthis.buildEdgeStringsForNonDegree2Nodes();\r\n\t},\r\n\tgetMergedLineStrings: function () {\r\n\t\tthis.merge();\r\n\t\treturn this.mergedLineStrings;\r\n\t},\r\n\tbuildEdgeStringsStartingAt: function (node) {\r\n\t\tfor (var i = node.getOutEdges().iterator(); i.hasNext(); ) {\r\n\t\t\tvar directedEdge = i.next();\r\n\t\t\tif (directedEdge.getEdge().isMarked()) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge));\r\n\t\t}\r\n\t},\r\n\tmerge: function () {\r\n\t\tif (this.mergedLineStrings !== null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tGraphComponent.setMarked(this.graph.nodeIterator(), false);\r\n\t\tGraphComponent.setMarked(this.graph.edgeIterator(), false);\r\n\t\tthis.edgeStrings = new ArrayList();\r\n\t\tthis.buildEdgeStringsForObviousStartNodes();\r\n\t\tthis.buildEdgeStringsForIsolatedLoops();\r\n\t\tthis.mergedLineStrings = new ArrayList();\r\n\t\tfor (var i = this.edgeStrings.iterator(); i.hasNext(); ) {\r\n\t\t\tvar edgeString = i.next();\r\n\t\t\tthis.mergedLineStrings.add(edgeString.toLineString());\r\n\t\t}\r\n\t},\r\n\tbuildEdgeStringStartingWith: function (start) {\r\n\t\tvar edgeString = new EdgeString(this.factory);\r\n\t\tvar current = start;\r\n\t\tdo {\r\n\t\t\tedgeString.add(current);\r\n\t\t\tcurrent.getEdge().setMarked(true);\r\n\t\t\tcurrent = current.getNext();\r\n\t\t} while (current !== null && current !== start);\r\n\t\treturn edgeString;\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geometry = arguments[0];\r\n\t\t\tgeometry.apply({\r\n\t\t\t\tinterfaces_: function () {\r\n\t\t\t\t\treturn [GeometryComponentFilter];\r\n\t\t\t\t},\r\n\t\t\t\tfilter: function (component) {\r\n\t\t\t\t\tif (component instanceof LineString) {\r\n\t\t\t\t\t\tthis.add(component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet geometries = arguments[0];\r\n\t\t\tthis.mergedLineStrings = null;\r\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar geometry = i.next();\r\n\t\t\t\tthis.add(geometry);\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof LineString) {\r\n\t\t\tlet lineString = arguments[0];\r\n\t\t\tif (this.factory === null) {\r\n\t\t\t\tthis.factory = lineString.getFactory();\r\n\t\t\t}\r\n\t\t\tthis.graph.addEdge(lineString);\r\n\t\t}\r\n\t},\r\n\tbuildEdgeStringsForIsolatedLoops: function () {\r\n\t\tthis.buildEdgeStringsForUnprocessedNodes();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineMerger;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport DirectedEdge from '../../planargraph/DirectedEdge';\r\nimport inherits from '../../../../../inherits';\r\nexport default function PolygonizeDirectedEdge() {\r\n\tthis.edgeRing = null;\r\n\tthis.next = null;\r\n\tthis.label = -1;\r\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\r\n\tDirectedEdge.call(this, from, to, directionPt, edgeDirection);\r\n}\r\ninherits(PolygonizeDirectedEdge, DirectedEdge);\r\nextend(PolygonizeDirectedEdge.prototype, {\r\n\tgetNext: function () {\r\n\t\treturn this.next;\r\n\t},\r\n\tisInRing: function () {\r\n\t\treturn this.edgeRing !== null;\r\n\t},\r\n\tsetRing: function (edgeRing) {\r\n\t\tthis.edgeRing = edgeRing;\r\n\t},\r\n\tsetLabel: function (label) {\r\n\t\tthis.label = label;\r\n\t},\r\n\tgetLabel: function () {\r\n\t\treturn this.label;\r\n\t},\r\n\tsetNext: function (next) {\r\n\t\tthis.next = next;\r\n\t},\r\n\tgetRing: function () {\r\n\t\treturn this.edgeRing;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PolygonizeDirectedEdge;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport Edge from '../../planargraph/Edge';\r\nimport inherits from '../../../../../inherits';\r\nexport default function PolygonizeEdge() {\r\n\tEdge.apply(this);\r\n\tthis.line = null;\r\n\tlet line = arguments[0];\r\n\tthis.line = line;\r\n}\r\ninherits(PolygonizeEdge, Edge);\r\nextend(PolygonizeEdge.prototype, {\r\n\tgetLine: function () {\r\n\t\treturn this.line;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PolygonizeEdge;\r\n\t}\r\n});\r\n","import Location from '../../geom/Location';\r\nimport GeometryFactory from '../../geom/GeometryFactory';\r\nimport Position from '../../geomgraph/Position';\r\nimport Polygon from '../../geom/Polygon';\r\nimport extend from '../../../../../extend';\r\nimport MultiPolygon from '../../geom/MultiPolygon';\r\nimport MaximalEdgeRing from '../overlay/MaximalEdgeRing';\r\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Assert from '../../util/Assert';\r\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\r\nexport default function ConnectedInteriorTester() {\r\n\tthis.geometryFactory = new GeometryFactory();\r\n\tthis.geomGraph = null;\r\n\tthis.disconnectedRingcoord = null;\r\n\tlet geomGraph = arguments[0];\r\n\tthis.geomGraph = geomGraph;\r\n}\r\nextend(ConnectedInteriorTester.prototype, {\r\n\tvisitInteriorRing: function (ring, graph) {\r\n\t\tvar pts = ring.getCoordinates();\r\n\t\tvar pt0 = pts[0];\r\n\t\tvar pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0);\r\n\t\tvar e = graph.findEdgeInSameDirection(pt0, pt1);\r\n\t\tvar de = graph.findEdgeEnd(e);\r\n\t\tvar intDe = null;\r\n\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\r\n\t\t\tintDe = de;\r\n\t\t} else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\r\n\t\t\tintDe = de.getSym();\r\n\t\t}\r\n\t\tAssert.isTrue(intDe !== null, \"unable to find dirEdge with Interior on RHS\");\r\n\t\tthis.visitLinkedDirectedEdges(intDe);\r\n\t},\r\n\tvisitShellInteriors: function (g, graph) {\r\n\t\tif (g instanceof Polygon) {\r\n\t\t\tvar p = g;\r\n\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\r\n\t\t}\r\n\t\tif (g instanceof MultiPolygon) {\r\n\t\t\tvar mp = g;\r\n\t\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\r\n\t\t\t\tvar p = mp.getGeometryN(i);\r\n\t\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.disconnectedRingcoord;\r\n\t},\r\n\tsetInteriorEdgesInResult: function (graph) {\r\n\t\tfor (var it = graph.getEdgeEnds().iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\r\n\t\t\t\tde.setInResult(true);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tvisitLinkedDirectedEdges: function (start) {\r\n\t\tvar startDe = start;\r\n\t\tvar de = start;\r\n\t\tdo {\r\n\t\t\tAssert.isTrue(de !== null, \"found null Directed Edge\");\r\n\t\t\tde.setVisited(true);\r\n\t\t\tde = de.getNext();\r\n\t\t} while (de !== startDe);\r\n\t},\r\n\tbuildEdgeRings: function (dirEdges) {\r\n\t\tvar edgeRings = new ArrayList();\r\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\r\n\t\t\tvar de = it.next();\r\n\t\t\tif (de.isInResult() && de.getEdgeRing() === null) {\r\n\t\t\t\tvar er = new MaximalEdgeRing(de, this.geometryFactory);\r\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\r\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\r\n\t\t\t\tedgeRings.addAll(minEdgeRings);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn edgeRings;\r\n\t},\r\n\thasUnvisitedShellEdge: function (edgeRings) {\r\n\t\tfor (var i = 0; i < edgeRings.size(); i++) {\r\n\t\t\tvar er = edgeRings.get(i);\r\n\t\t\tif (er.isHole()) continue;\r\n\t\t\tvar edges = er.getEdges();\r\n\t\t\tvar de = edges.get(0);\r\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue;\r\n\t\t\tfor (var j = 0; j < edges.size(); j++) {\r\n\t\t\t\tde = edges.get(j);\r\n\t\t\t\tif (!de.isVisited()) {\r\n\t\t\t\t\tthis.disconnectedRingcoord = de.getCoordinate();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tisInteriorsConnected: function () {\r\n\t\tvar splitEdges = new ArrayList();\r\n\t\tthis.geomGraph.computeSplitEdges(splitEdges);\r\n\t\tvar graph = new PlanarGraph(new OverlayNodeFactory());\r\n\t\tgraph.addEdges(splitEdges);\r\n\t\tthis.setInteriorEdgesInResult(graph);\r\n\t\tgraph.linkResultDirectedEdges();\r\n\t\tvar edgeRings = this.buildEdgeRings(graph.getEdgeEnds());\r\n\t\tthis.visitShellInteriors(this.geomGraph.getGeometry(), graph);\r\n\t\treturn !this.hasUnvisitedShellEdge(edgeRings);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ConnectedInteriorTester;\r\n\t}\r\n});\r\nConnectedInteriorTester.findDifferentPoint = function (coord, pt) {\r\n\tfor (var i = 0; i < coord.length; i++) {\r\n\t\tif (!coord[i].equals(pt)) return coord[i];\r\n\t}\r\n\treturn null;\r\n};\r\n","import EdgeEnd from '../../geomgraph/EdgeEnd';\r\nimport extend from '../../../../../extend';\r\nimport Label from '../../geomgraph/Label';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nexport default function EdgeEndBuilder() {}\r\nextend(EdgeEndBuilder.prototype, {\r\n\tcreateEdgeEndForNext: function (edge, l, eiCurr, eiNext) {\r\n\t\tvar iNext = eiCurr.segmentIndex + 1;\r\n\t\tif (iNext >= edge.getNumPoints() && eiNext === null) return null;\r\n\t\tvar pNext = edge.getCoordinate(iNext);\r\n\t\tif (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord;\r\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()));\r\n\t\tl.add(e);\r\n\t},\r\n\tcreateEdgeEndForPrev: function (edge, l, eiCurr, eiPrev) {\r\n\t\tvar iPrev = eiCurr.segmentIndex;\r\n\t\tif (eiCurr.dist === 0.0) {\r\n\t\t\tif (iPrev === 0) return null;\r\n\t\t\tiPrev--;\r\n\t\t}\r\n\t\tvar pPrev = edge.getCoordinate(iPrev);\r\n\t\tif (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord;\r\n\t\tvar label = new Label(edge.getLabel());\r\n\t\tlabel.flip();\r\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pPrev, label);\r\n\t\tl.add(e);\r\n\t},\r\n\tcomputeEdgeEnds: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet edges = arguments[0];\r\n\t\t\tvar l = new ArrayList();\r\n\t\t\tfor (var i = edges; i.hasNext(); ) {\r\n\t\t\t\tvar e = i.next();\r\n\t\t\t\tthis.computeEdgeEnds(e, l);\r\n\t\t\t}\r\n\t\t\treturn l;\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet edge = arguments[0], l = arguments[1];\r\n\t\t\tvar eiList = edge.getEdgeIntersectionList();\r\n\t\t\teiList.addEndpoints();\r\n\t\t\tvar it = eiList.iterator();\r\n\t\t\tvar eiPrev = null;\r\n\t\t\tvar eiCurr = null;\r\n\t\t\tif (!it.hasNext()) return null;\r\n\t\t\tvar eiNext = it.next();\r\n\t\t\tdo {\r\n\t\t\t\teiPrev = eiCurr;\r\n\t\t\t\teiCurr = eiNext;\r\n\t\t\t\teiNext = null;\r\n\t\t\t\tif (it.hasNext()) eiNext = it.next();\r\n\t\t\t\tif (eiCurr !== null) {\r\n\t\t\t\t\tthis.createEdgeEndForPrev(edge, l, eiCurr, eiPrev);\r\n\t\t\t\t\tthis.createEdgeEndForNext(edge, l, eiCurr, eiNext);\r\n\t\t\t\t}\r\n\t\t\t} while (eiCurr !== null);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeEndBuilder;\r\n\t}\r\n});\r\n","import Location from '../../geom/Location';\r\nimport EdgeEnd from '../../geomgraph/EdgeEnd';\r\nimport Position from '../../geomgraph/Position';\r\nimport extend from '../../../../../extend';\r\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\r\nimport Label from '../../geomgraph/Label';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Edge from '../../geomgraph/Edge';\r\nimport inherits from '../../../../../inherits';\r\nexport default function EdgeEndBundle() {\r\n\tthis.edgeEnds = new ArrayList();\r\n\tif (arguments.length === 1) {\r\n\t\tlet e = arguments[0];\r\n\t\tEdgeEndBundle.call(this, null, e);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet boundaryNodeRule = arguments[0], e = arguments[1];\r\n\t\tEdgeEnd.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()));\r\n\t\tthis.insert(e);\r\n\t}\r\n}\r\ninherits(EdgeEndBundle, EdgeEnd);\r\nextend(EdgeEndBundle.prototype, {\r\n\tinsert: function (e) {\r\n\t\tthis.edgeEnds.add(e);\r\n\t},\r\n\tprint: function (out) {\r\n\t\tout.println(\"EdgeEndBundle--> Label: \" + this.label);\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar ee = it.next();\r\n\t\t\tee.print(out);\r\n\t\t\tout.println();\r\n\t\t}\r\n\t},\r\n\titerator: function () {\r\n\t\treturn this.edgeEnds.iterator();\r\n\t},\r\n\tgetEdgeEnds: function () {\r\n\t\treturn this.edgeEnds;\r\n\t},\r\n\tcomputeLabelOn: function (geomIndex, boundaryNodeRule) {\r\n\t\tvar boundaryCount = 0;\r\n\t\tvar foundInterior = false;\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tvar loc = e.getLabel().getLocation(geomIndex);\r\n\t\t\tif (loc === Location.BOUNDARY) boundaryCount++;\r\n\t\t\tif (loc === Location.INTERIOR) foundInterior = true;\r\n\t\t}\r\n\t\tvar loc = Location.NONE;\r\n\t\tif (foundInterior) loc = Location.INTERIOR;\r\n\t\tif (boundaryCount > 0) {\r\n\t\t\tloc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount);\r\n\t\t}\r\n\t\tthis.label.setLocation(geomIndex, loc);\r\n\t},\r\n\tcomputeLabelSide: function (geomIndex, side) {\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tif (e.getLabel().isArea()) {\r\n\t\t\t\tvar loc = e.getLabel().getLocation(geomIndex, side);\r\n\t\t\t\tif (loc === Location.INTERIOR) {\r\n\t\t\t\t\tthis.label.setLocation(geomIndex, side, Location.INTERIOR);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t} else if (loc === Location.EXTERIOR) this.label.setLocation(geomIndex, side, Location.EXTERIOR);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetLabel: function () {\r\n\t\treturn this.label;\r\n\t},\r\n\tcomputeLabelSides: function (geomIndex) {\r\n\t\tthis.computeLabelSide(geomIndex, Position.LEFT);\r\n\t\tthis.computeLabelSide(geomIndex, Position.RIGHT);\r\n\t},\r\n\tupdateIM: function (im) {\r\n\t\tEdge.updateIM(this.label, im);\r\n\t},\r\n\tcomputeLabel: function (boundaryNodeRule) {\r\n\t\tvar isArea = false;\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar e = it.next();\r\n\t\t\tif (e.getLabel().isArea()) isArea = true;\r\n\t\t}\r\n\t\tif (isArea) this.label = new Label(Location.NONE, Location.NONE, Location.NONE); else this.label = new Label(Location.NONE);\r\n\t\tfor (var i = 0; i < 2; i++) {\r\n\t\t\tthis.computeLabelOn(i, boundaryNodeRule);\r\n\t\t\tif (isArea) this.computeLabelSides(i);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeEndBundle;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport EdgeEndStar from '../../geomgraph/EdgeEndStar';\r\nimport inherits from '../../../../../inherits';\r\nimport EdgeEndBundle from './EdgeEndBundle';\r\nexport default function EdgeEndBundleStar() {\r\n\tEdgeEndStar.apply(this);\r\n}\r\ninherits(EdgeEndBundleStar, EdgeEndStar);\r\nextend(EdgeEndBundleStar.prototype, {\r\n\tupdateIM: function (im) {\r\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\r\n\t\t\tvar esb = it.next();\r\n\t\t\tesb.updateIM(im);\r\n\t\t}\r\n\t},\r\n\tinsert: function (e) {\r\n\t\tvar eb = this.edgeMap.get(e);\r\n\t\tif (eb === null) {\r\n\t\t\teb = new EdgeEndBundle(e);\r\n\t\t\tthis.insertEdgeEnd(e, eb);\r\n\t\t} else {\r\n\t\t\teb.insert(e);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeEndBundleStar;\r\n\t}\r\n});\r\n","import Node from '../../geomgraph/Node';\r\nimport extend from '../../../../../extend';\r\nimport inherits from '../../../../../inherits';\r\nexport default function RelateNode() {\r\n\tlet coord = arguments[0], edges = arguments[1];\r\n\tNode.call(this, coord, edges);\r\n}\r\ninherits(RelateNode, Node);\r\nextend(RelateNode.prototype, {\r\n\tupdateIMFromEdges: function (im) {\r\n\t\tthis.edges.updateIM(im);\r\n\t},\r\n\tcomputeIM: function (im) {\r\n\t\tim.setAtLeastIfValid(this.label.getLocation(0), this.label.getLocation(1), 0);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RelateNode;\r\n\t}\r\n});\r\n","import EdgeEndBundleStar from './EdgeEndBundleStar';\r\nimport extend from '../../../../../extend';\r\nimport RelateNode from './RelateNode';\r\nimport inherits from '../../../../../inherits';\r\nimport NodeFactory from '../../geomgraph/NodeFactory';\r\nexport default function RelateNodeFactory() {\r\n\tNodeFactory.apply(this);\r\n}\r\ninherits(RelateNodeFactory, NodeFactory);\r\nextend(RelateNodeFactory.prototype, {\r\n\tcreateNode: function (coord) {\r\n\t\treturn new RelateNode(coord, new EdgeEndBundleStar());\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RelateNodeFactory;\r\n\t}\r\n});\r\n","import Location from '../../geom/Location';\r\nimport EdgeEndBuilder from './EdgeEndBuilder';\r\nimport extend from '../../../../../extend';\r\nimport NodeMap from '../../geomgraph/NodeMap';\r\nimport RelateNodeFactory from './RelateNodeFactory';\r\nexport default function RelateNodeGraph() {\r\n\tthis.nodes = new NodeMap(new RelateNodeFactory());\r\n}\r\nextend(RelateNodeGraph.prototype, {\r\n\tinsertEdgeEnds: function (ee) {\r\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tthis.nodes.add(e);\r\n\t\t}\r\n\t},\r\n\tgetNodeIterator: function () {\r\n\t\treturn this.nodes.iterator();\r\n\t},\r\n\tcopyNodesAndLabels: function (geomGraph, argIndex) {\r\n\t\tfor (var nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext(); ) {\r\n\t\t\tvar graphNode = nodeIt.next();\r\n\t\t\tvar newNode = this.nodes.addNode(graphNode.getCoordinate());\r\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\r\n\t\t}\r\n\t},\r\n\tbuild: function (geomGraph) {\r\n\t\tthis.computeIntersectionNodes(geomGraph, 0);\r\n\t\tthis.copyNodesAndLabels(geomGraph, 0);\r\n\t\tvar eeBuilder = new EdgeEndBuilder();\r\n\t\tvar eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());\r\n\t\tthis.insertEdgeEnds(eeList);\r\n\t},\r\n\tcomputeIntersectionNodes: function (geomGraph, argIndex) {\r\n\t\tfor (var edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext(); ) {\r\n\t\t\tvar e = edgeIt.next();\r\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\r\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\r\n\t\t\t\tvar ei = eiIt.next();\r\n\t\t\t\tvar n = this.nodes.addNode(ei.coord);\r\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\r\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RelateNodeGraph;\r\n\t}\r\n});\r\n","import RelateNodeGraph from '../relate/RelateNodeGraph';\r\nimport extend from '../../../../../extend';\r\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\r\nexport default function ConsistentAreaTester() {\r\n\tthis.li = new RobustLineIntersector();\r\n\tthis.geomGraph = null;\r\n\tthis.nodeGraph = new RelateNodeGraph();\r\n\tthis.invalidPoint = null;\r\n\tlet geomGraph = arguments[0];\r\n\tthis.geomGraph = geomGraph;\r\n}\r\nextend(ConsistentAreaTester.prototype, {\r\n\tisNodeEdgeAreaLabelsConsistent: function () {\r\n\t\tfor (var nodeIt = this.nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\r\n\t\t\tvar node = nodeIt.next();\r\n\t\t\tif (!node.getEdges().isAreaLabelsConsistent(this.geomGraph)) {\r\n\t\t\t\tthis.invalidPoint = node.getCoordinate().copy();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tgetInvalidPoint: function () {\r\n\t\treturn this.invalidPoint;\r\n\t},\r\n\thasDuplicateRings: function () {\r\n\t\tfor (var nodeIt = this.nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\r\n\t\t\tvar node = nodeIt.next();\r\n\t\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar eeb = i.next();\r\n\t\t\t\tif (eeb.getEdgeEnds().size() > 1) {\r\n\t\t\t\t\tthis.invalidPoint = eeb.getEdge().getCoordinate(0);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tisNodeConsistentArea: function () {\r\n\t\tvar intersector = this.geomGraph.computeSelfNodes(this.li, true, true);\r\n\t\tif (intersector.hasProperIntersection()) {\r\n\t\t\tthis.invalidPoint = intersector.getProperIntersectionPoint();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.nodeGraph.build(this.geomGraph);\r\n\t\treturn this.isNodeEdgeAreaLabelsConsistent();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ConsistentAreaTester;\r\n\t}\r\n});\r\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport STRtree from '../../index/strtree/STRtree';\r\nimport IsValidOp from './IsValidOp';\r\nimport extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Envelope from '../../geom/Envelope';\r\nexport default function IndexedNestedRingTester() {\r\n\tthis.graph = null;\r\n\tthis.rings = new ArrayList();\r\n\tthis.totalEnv = new Envelope();\r\n\tthis.index = null;\r\n\tthis.nestedPt = null;\r\n\tlet graph = arguments[0];\r\n\tthis.graph = graph;\r\n}\r\nextend(IndexedNestedRingTester.prototype, {\r\n\tbuildIndex: function () {\r\n\t\tthis.index = new STRtree();\r\n\t\tfor (var i = 0; i < this.rings.size(); i++) {\r\n\t\t\tvar ring = this.rings.get(i);\r\n\t\t\tvar env = ring.getEnvelopeInternal();\r\n\t\t\tthis.index.insert(env, ring);\r\n\t\t}\r\n\t},\r\n\tgetNestedPoint: function () {\r\n\t\treturn this.nestedPt;\r\n\t},\r\n\tisNonNested: function () {\r\n\t\tthis.buildIndex();\r\n\t\tfor (var i = 0; i < this.rings.size(); i++) {\r\n\t\t\tvar innerRing = this.rings.get(i);\r\n\t\t\tvar innerRingPts = innerRing.getCoordinates();\r\n\t\t\tvar results = this.index.query(innerRing.getEnvelopeInternal());\r\n\t\t\tfor (var j = 0; j < results.size(); j++) {\r\n\t\t\t\tvar searchRing = results.get(j);\r\n\t\t\t\tvar searchRingPts = searchRing.getCoordinates();\r\n\t\t\t\tif (innerRing === searchRing) continue;\r\n\t\t\t\tif (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue;\r\n\t\t\t\tvar innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this.graph);\r\n\t\t\t\tif (innerRingPt === null) continue;\r\n\t\t\t\tvar isInside = CGAlgorithms.isPointInRing(innerRingPt, searchRingPts);\r\n\t\t\t\tif (isInside) {\r\n\t\t\t\t\tthis.nestedPt = innerRingPt;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tadd: function (ring) {\r\n\t\tthis.rings.add(ring);\r\n\t\tthis.totalEnv.expandToInclude(ring.getEnvelopeInternal());\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IndexedNestedRingTester;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nexport default function TopologyValidationError() {\r\n\tthis.errorType = null;\r\n\tthis.pt = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet errorType = arguments[0];\r\n\t\tTopologyValidationError.call(this, errorType, null);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet errorType = arguments[0], pt = arguments[1];\r\n\t\tthis.errorType = errorType;\r\n\t\tif (pt !== null) this.pt = pt.copy();\r\n\t}\r\n}\r\nextend(TopologyValidationError.prototype, {\r\n\tgetErrorType: function () {\r\n\t\treturn this.errorType;\r\n\t},\r\n\tgetMessage: function () {\r\n\t\treturn TopologyValidationError.errMsg[this.errorType];\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.pt;\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar locStr = \"\";\r\n\t\tif (this.pt !== null) locStr = \" at or near point \" + this.pt;\r\n\t\treturn this.getMessage() + locStr;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TopologyValidationError;\r\n\t}\r\n});\r\nTopologyValidationError.ERROR = 0;\r\nTopologyValidationError.REPEATED_POINT = 1;\r\nTopologyValidationError.HOLE_OUTSIDE_SHELL = 2;\r\nTopologyValidationError.NESTED_HOLES = 3;\r\nTopologyValidationError.DISCONNECTED_INTERIOR = 4;\r\nTopologyValidationError.SELF_INTERSECTION = 5;\r\nTopologyValidationError.RING_SELF_INTERSECTION = 6;\r\nTopologyValidationError.NESTED_SHELLS = 7;\r\nTopologyValidationError.DUPLICATE_RINGS = 8;\r\nTopologyValidationError.TOO_FEW_POINTS = 9;\r\nTopologyValidationError.INVALID_COORDINATE = 10;\r\nTopologyValidationError.RING_NOT_CLOSED = 11;\r\nTopologyValidationError.errMsg = [\"Topology Validation Error\", \"Repeated Point\", \"Hole lies outside shell\", \"Holes are nested\", \"Interior is disconnected\", \"Self-intersection\", \"Ring Self-intersection\", \"Nested shells\", \"Duplicate Rings\", \"Too few distinct points in geometry component\", \"Invalid Coordinate\", \"Ring is not closed\"];\r\n","import TreeSet from '../../../../../java/util/TreeSet';\r\nimport LineString from '../../geom/LineString';\r\nimport CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport Geometry from '../../geom/Geometry';\r\nimport ConnectedInteriorTester from './ConnectedInteriorTester';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport Point from '../../geom/Point';\r\nimport Polygon from '../../geom/Polygon';\r\nimport MultiPoint from '../../geom/MultiPoint';\r\nimport LinearRing from '../../geom/LinearRing';\r\nimport Double from '../../../../../java/lang/Double';\r\nimport extend from '../../../../../extend';\r\nimport MCPointInRing from '../../algorithm/MCPointInRing';\r\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\r\nimport MultiPolygon from '../../geom/MultiPolygon';\r\nimport ConsistentAreaTester from './ConsistentAreaTester';\r\nimport GeometryCollection from '../../geom/GeometryCollection';\r\nimport IndexedNestedRingTester from './IndexedNestedRingTester';\r\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\r\nimport TopologyValidationError from './TopologyValidationError';\r\nimport Assert from '../../util/Assert';\r\nexport default function IsValidOp() {\r\n\tthis.parentGeometry = null;\r\n\tthis.isSelfTouchingRingFormingHoleValid = false;\r\n\tthis.validErr = null;\r\n\tlet parentGeometry = arguments[0];\r\n\tthis.parentGeometry = parentGeometry;\r\n}\r\nextend(IsValidOp.prototype, {\r\n\tcheckInvalidCoordinates: function () {\r\n\t\tif (arguments[0] instanceof Array) {\r\n\t\t\tlet coords = arguments[0];\r\n\t\t\tfor (var i = 0; i < coords.length; i++) {\r\n\t\t\t\tif (!IsValidOp.isValid(coords[i])) {\r\n\t\t\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i]);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof Polygon) {\r\n\t\t\tlet poly = arguments[0];\r\n\t\t\tthis.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\r\n\t\t\t\tthis.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());\r\n\t\t\t\tif (this.validErr !== null) return null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcheckHolesNotNested: function (p, graph) {\r\n\t\tvar nestedTester = new IndexedNestedRingTester(graph);\r\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\r\n\t\t\tvar innerHole = p.getInteriorRingN(i);\r\n\t\t\tnestedTester.add(innerHole);\r\n\t\t}\r\n\t\tvar isNonNested = nestedTester.isNonNested();\r\n\t\tif (!isNonNested) {\r\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint());\r\n\t\t}\r\n\t},\r\n\tcheckConsistentArea: function (graph) {\r\n\t\tvar cat = new ConsistentAreaTester(graph);\r\n\t\tvar isValidArea = cat.isNodeConsistentArea();\r\n\t\tif (!isValidArea) {\r\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint());\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (cat.hasDuplicateRings()) {\r\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint());\r\n\t\t}\r\n\t},\r\n\tisValid: function () {\r\n\t\tthis.checkValid(this.parentGeometry);\r\n\t\treturn this.validErr === null;\r\n\t},\r\n\tcheckShellInsideHole: function (shell, hole, graph) {\r\n\t\tvar shellPts = shell.getCoordinates();\r\n\t\tvar holePts = hole.getCoordinates();\r\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph);\r\n\t\tif (shellPt !== null) {\r\n\t\t\tvar insideHole = CGAlgorithms.isPointInRing(shellPt, holePts);\r\n\t\t\tif (!insideHole) {\r\n\t\t\t\treturn shellPt;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar holePt = IsValidOp.findPtNotNode(holePts, shell, graph);\r\n\t\tif (holePt !== null) {\r\n\t\t\tvar insideShell = CGAlgorithms.isPointInRing(holePt, shellPts);\r\n\t\t\tif (insideShell) {\r\n\t\t\t\treturn holePt;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tAssert.shouldNeverReachHere(\"points in shell and hole appear to be equal\");\r\n\t\treturn null;\r\n\t},\r\n\tcheckNoSelfIntersectingRings: function (graph) {\r\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tthis.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t}\r\n\t},\r\n\tcheckConnectedInteriors: function (graph) {\r\n\t\tvar cit = new ConnectedInteriorTester(graph);\r\n\t\tif (!cit.isInteriorsConnected()) this.validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate());\r\n\t},\r\n\tcheckNoSelfIntersectingRing: function (eiList) {\r\n\t\tvar nodeSet = new TreeSet();\r\n\t\tvar isFirst = true;\r\n\t\tfor (var i = eiList.iterator(); i.hasNext(); ) {\r\n\t\t\tvar ei = i.next();\r\n\t\t\tif (isFirst) {\r\n\t\t\t\tisFirst = false;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (nodeSet.contains(ei.coord)) {\r\n\t\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord);\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\tnodeSet.add(ei.coord);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcheckHolesInShell: function (p, graph) {\r\n\t\tvar shell = p.getExteriorRing();\r\n\t\tvar pir = new MCPointInRing(shell);\r\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\r\n\t\t\tvar hole = p.getInteriorRingN(i);\r\n\t\t\tvar holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph);\r\n\t\t\tif (holePt === null) return null;\r\n\t\t\tvar outside = !pir.isInside(holePt);\r\n\t\t\tif (outside) {\r\n\t\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcheckTooFewPoints: function (graph) {\r\n\t\tif (graph.hasTooFewPoints()) {\r\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint());\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tgetValidationError: function () {\r\n\t\tthis.checkValid(this.parentGeometry);\r\n\t\treturn this.validErr;\r\n\t},\r\n\tcheckValid: function () {\r\n\t\tif (arguments[0] instanceof Point) {\r\n\t\t\tlet g = arguments[0];\r\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\r\n\t\t} else if (arguments[0] instanceof MultiPoint) {\r\n\t\t\tlet g = arguments[0];\r\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\r\n\t\t} else if (arguments[0] instanceof LinearRing) {\r\n\t\t\tlet g = arguments[0];\r\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tthis.checkClosedRing(g);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tvar graph = new GeometryGraph(0, g);\r\n\t\t\tthis.checkTooFewPoints(graph);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tvar li = new RobustLineIntersector();\r\n\t\t\tgraph.computeSelfNodes(li, true, true);\r\n\t\t\tthis.checkNoSelfIntersectingRings(graph);\r\n\t\t} else if (arguments[0] instanceof LineString) {\r\n\t\t\tlet g = arguments[0];\r\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tvar graph = new GeometryGraph(0, g);\r\n\t\t\tthis.checkTooFewPoints(graph);\r\n\t\t} else if (arguments[0] instanceof Polygon) {\r\n\t\t\tlet g = arguments[0];\r\n\t\t\tthis.checkInvalidCoordinates(g);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tthis.checkClosedRings(g);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tvar graph = new GeometryGraph(0, g);\r\n\t\t\tthis.checkTooFewPoints(graph);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tthis.checkConsistentArea(graph);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tif (!this.isSelfTouchingRingFormingHoleValid) {\r\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\r\n\t\t\t\tif (this.validErr !== null) return null;\r\n\t\t\t}\r\n\t\t\tthis.checkHolesInShell(g, graph);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tthis.checkHolesNotNested(g, graph);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tthis.checkConnectedInteriors(graph);\r\n\t\t} else if (arguments[0] instanceof MultiPolygon) {\r\n\t\t\tlet g = arguments[0];\r\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\r\n\t\t\t\tvar p = g.getGeometryN(i);\r\n\t\t\t\tthis.checkInvalidCoordinates(p);\r\n\t\t\t\tif (this.validErr !== null) return null;\r\n\t\t\t\tthis.checkClosedRings(p);\r\n\t\t\t\tif (this.validErr !== null) return null;\r\n\t\t\t}\r\n\t\t\tvar graph = new GeometryGraph(0, g);\r\n\t\t\tthis.checkTooFewPoints(graph);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tthis.checkConsistentArea(graph);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tif (!this.isSelfTouchingRingFormingHoleValid) {\r\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\r\n\t\t\t\tif (this.validErr !== null) return null;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\r\n\t\t\t\tvar p = g.getGeometryN(i);\r\n\t\t\t\tthis.checkHolesInShell(p, graph);\r\n\t\t\t\tif (this.validErr !== null) return null;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\r\n\t\t\t\tvar p = g.getGeometryN(i);\r\n\t\t\t\tthis.checkHolesNotNested(p, graph);\r\n\t\t\t\tif (this.validErr !== null) return null;\r\n\t\t\t}\r\n\t\t\tthis.checkShellsNotNested(g, graph);\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t\tthis.checkConnectedInteriors(graph);\r\n\t\t} else if (arguments[0] instanceof GeometryCollection) {\r\n\t\t\tlet gc = arguments[0];\r\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\r\n\t\t\t\tvar g = gc.getGeometryN(i);\r\n\t\t\t\tthis.checkValid(g);\r\n\t\t\t\tif (this.validErr !== null) return null;\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof Geometry) {\r\n\t\t\tlet g = arguments[0];\r\n\t\t\tthis.validErr = null;\r\n\t\t\tif (g.isEmpty()) return null;\r\n\t\t\tif (g instanceof Point) this.checkValid(g); else if (g instanceof MultiPoint) this.checkValid(g); else if (g instanceof LinearRing) this.checkValid(g); else if (g instanceof LineString) this.checkValid(g); else if (g instanceof Polygon) this.checkValid(g); else if (g instanceof MultiPolygon) this.checkValid(g); else if (g instanceof GeometryCollection) this.checkValid(g); else throw new UnsupportedOperationException(g.getClass().getName());\r\n\t\t}\r\n\t},\r\n\tsetSelfTouchingRingFormingHoleValid: function (isValid) {\r\n\t\tthis.isSelfTouchingRingFormingHoleValid = isValid;\r\n\t},\r\n\tcheckShellNotNested: function (shell, p, graph) {\r\n\t\tvar shellPts = shell.getCoordinates();\r\n\t\tvar polyShell = p.getExteriorRing();\r\n\t\tvar polyPts = polyShell.getCoordinates();\r\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph);\r\n\t\tif (shellPt === null) return null;\r\n\t\tvar insidePolyShell = CGAlgorithms.isPointInRing(shellPt, polyPts);\r\n\t\tif (!insidePolyShell) return null;\r\n\t\tif (p.getNumInteriorRing() <= 0) {\r\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar badNestedPt = null;\r\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\r\n\t\t\tvar hole = p.getInteriorRingN(i);\r\n\t\t\tbadNestedPt = this.checkShellInsideHole(shell, hole, graph);\r\n\t\t\tif (badNestedPt === null) return null;\r\n\t\t}\r\n\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt);\r\n\t},\r\n\tcheckClosedRings: function (poly) {\r\n\t\tthis.checkClosedRing(poly.getExteriorRing());\r\n\t\tif (this.validErr !== null) return null;\r\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\r\n\t\t\tthis.checkClosedRing(poly.getInteriorRingN(i));\r\n\t\t\tif (this.validErr !== null) return null;\r\n\t\t}\r\n\t},\r\n\tcheckClosedRing: function (ring) {\r\n\t\tif (!ring.isClosed()) {\r\n\t\t\tvar pt = null;\r\n\t\t\tif (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0);\r\n\t\t\tthis.validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt);\r\n\t\t}\r\n\t},\r\n\tcheckShellsNotNested: function (mp, graph) {\r\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\r\n\t\t\tvar p = mp.getGeometryN(i);\r\n\t\t\tvar shell = p.getExteriorRing();\r\n\t\t\tfor (var j = 0; j < mp.getNumGeometries(); j++) {\r\n\t\t\t\tif (i === j) continue;\r\n\t\t\t\tvar p2 = mp.getGeometryN(j);\r\n\t\t\t\tthis.checkShellNotNested(shell, p2, graph);\r\n\t\t\t\tif (this.validErr !== null) return null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IsValidOp;\r\n\t}\r\n});\r\nIsValidOp.findPtNotNode = function (testCoords, searchRing, graph) {\r\n\tvar searchEdge = graph.findEdge(searchRing);\r\n\tvar eiList = searchEdge.getEdgeIntersectionList();\r\n\tfor (var i = 0; i < testCoords.length; i++) {\r\n\t\tvar pt = testCoords[i];\r\n\t\tif (!eiList.isIntersection(pt)) return pt;\r\n\t}\r\n\treturn null;\r\n};\r\nIsValidOp.isValid = function () {\r\n\tif (arguments[0] instanceof Geometry) {\r\n\t\tlet geom = arguments[0];\r\n\t\tvar isValidOp = new IsValidOp(geom);\r\n\t\treturn isValidOp.isValid();\r\n\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\tlet coord = arguments[0];\r\n\t\tif (Double.isNaN(coord.x)) return false;\r\n\t\tif (Double.isInfinite(coord.x)) return false;\r\n\t\tif (Double.isNaN(coord.y)) return false;\r\n\t\tif (Double.isInfinite(coord.y)) return false;\r\n\t\treturn true;\r\n\t}\r\n};\r\n","import CGAlgorithms from '../../algorithm/CGAlgorithms';\r\nimport CoordinateList from '../../geom/CoordinateList';\r\nimport WKTWriter from '../../io/WKTWriter';\r\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\r\nimport IsValidOp from '../valid/IsValidOp';\r\nimport LinearRing from '../../geom/LinearRing';\r\nimport extend from '../../../../../extend';\r\nimport Exception from '../../../../../java/lang/Exception';\r\nimport System from '../../../../../java/lang/System';\r\nimport CoordinateArrays from '../../geom/CoordinateArrays';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Comparator from '../../../../../java/util/Comparator';\r\nimport Assert from '../../util/Assert';\r\nexport default function EdgeRing() {\r\n\tthis.factory = null;\r\n\tthis.deList = new ArrayList();\r\n\tthis.lowestEdge = null;\r\n\tthis.ring = null;\r\n\tthis.ringPts = null;\r\n\tthis.holes = null;\r\n\tthis.shell = null;\r\n\tthis._isHole = null;\r\n\tthis._isProcessed = false;\r\n\tthis._isIncludedSet = false;\r\n\tthis._isIncluded = false;\r\n\tlet factory = arguments[0];\r\n\tthis.factory = factory;\r\n}\r\nextend(EdgeRing.prototype, {\r\n\tisIncluded: function () {\r\n\t\treturn this._isIncluded;\r\n\t},\r\n\tgetCoordinates: function () {\r\n\t\tif (this.ringPts === null) {\r\n\t\t\tvar coordList = new CoordinateList();\r\n\t\t\tfor (var i = this.deList.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar de = i.next();\r\n\t\t\t\tvar edge = de.getEdge();\r\n\t\t\t\tEdgeRing.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList);\r\n\t\t\t}\r\n\t\t\tthis.ringPts = coordList.toCoordinateArray();\r\n\t\t}\r\n\t\treturn this.ringPts;\r\n\t},\r\n\tisIncludedSet: function () {\r\n\t\treturn this._isIncludedSet;\r\n\t},\r\n\tisValid: function () {\r\n\t\tthis.getCoordinates();\r\n\t\tif (this.ringPts.length <= 3) return false;\r\n\t\tthis.getRing();\r\n\t\treturn IsValidOp.isValid(this.ring);\r\n\t},\r\n\tbuild: function (startDE) {\r\n\t\tvar de = startDE;\r\n\t\tdo {\r\n\t\t\tthis.add(de);\r\n\t\t\tde.setRing(this);\r\n\t\t\tde = de.getNext();\r\n\t\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\r\n\t\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\r\n\t\t} while (de !== startDE);\r\n\t},\r\n\tisOuterHole: function () {\r\n\t\tif (!this._isHole) return false;\r\n\t\treturn !this.hasShell();\r\n\t},\r\n\tgetPolygon: function () {\r\n\t\tvar holeLR = null;\r\n\t\tif (this.holes !== null) {\r\n\t\t\tholeLR = new Array(this.holes.size()).fill(null);\r\n\t\t\tfor (var i = 0; i < this.holes.size(); i++) {\r\n\t\t\t\tholeLR[i] = this.holes.get(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar poly = this.factory.createPolygon(this.ring, holeLR);\r\n\t\treturn poly;\r\n\t},\r\n\tisHole: function () {\r\n\t\treturn this._isHole;\r\n\t},\r\n\tisProcessed: function () {\r\n\t\treturn this._isProcessed;\r\n\t},\r\n\taddHole: function () {\r\n\t\tif (arguments[0] instanceof LinearRing) {\r\n\t\t\tlet hole = arguments[0];\r\n\t\t\tif (this.holes === null) this.holes = new ArrayList();\r\n\t\t\tthis.holes.add(hole);\r\n\t\t} else if (arguments[0] instanceof EdgeRing) {\r\n\t\t\tlet holeER = arguments[0];\r\n\t\t\tholeER.setShell(this);\r\n\t\t\tvar hole = holeER.getRing();\r\n\t\t\tif (this.holes === null) this.holes = new ArrayList();\r\n\t\t\tthis.holes.add(hole);\r\n\t\t}\r\n\t},\r\n\tsetIncluded: function (isIncluded) {\r\n\t\tthis._isIncluded = isIncluded;\r\n\t\tthis._isIncludedSet = true;\r\n\t},\r\n\tgetOuterHole: function () {\r\n\t\tif (this.isHole()) return null;\r\n\t\tfor (var i = 0; i < this.deList.size(); i++) {\r\n\t\t\tvar de = this.deList.get(i);\r\n\t\t\tvar adjRing = de.getSym().getRing();\r\n\t\t\tif (adjRing.isOuterHole()) return adjRing;\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\tcomputeHole: function () {\r\n\t\tvar ring = this.getRing();\r\n\t\tthis._isHole = CGAlgorithms.isCCW(ring.getCoordinates());\r\n\t},\r\n\thasShell: function () {\r\n\t\treturn this.shell !== null;\r\n\t},\r\n\tisOuterShell: function () {\r\n\t\treturn this.getOuterHole() !== null;\r\n\t},\r\n\tgetLineString: function () {\r\n\t\tthis.getCoordinates();\r\n\t\treturn this.factory.createLineString(this.ringPts);\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()));\r\n\t},\r\n\tgetShell: function () {\r\n\t\tif (this.isHole()) return this.shell;\r\n\t\treturn this;\r\n\t},\r\n\tadd: function (de) {\r\n\t\tthis.deList.add(de);\r\n\t},\r\n\tgetRing: function () {\r\n\t\tif (this.ring !== null) return this.ring;\r\n\t\tthis.getCoordinates();\r\n\t\tif (this.ringPts.length < 3) System.out.println(this.ringPts);\r\n\t\ttry {\r\n\t\t\tthis.ring = this.factory.createLinearRing(this.ringPts);\r\n\t\t} catch (ex) {\r\n\t\t\tif (ex instanceof Exception) {\r\n\t\t\t\tSystem.out.println(this.ringPts);\r\n\t\t\t} else throw ex;\r\n\t\t} finally {}\r\n\t\treturn this.ring;\r\n\t},\r\n\tupdateIncluded: function () {\r\n\t\tif (this.isHole()) return null;\r\n\t\tfor (var i = 0; i < this.deList.size(); i++) {\r\n\t\t\tvar de = this.deList.get(i);\r\n\t\t\tvar adjShell = de.getSym().getRing().getShell();\r\n\t\t\tif (adjShell !== null && adjShell.isIncludedSet()) {\r\n\t\t\t\tthis.setIncluded(!adjShell.isIncluded());\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tsetShell: function (shell) {\r\n\t\tthis.shell = shell;\r\n\t},\r\n\tsetProcessed: function (isProcessed) {\r\n\t\tthis._isProcessed = isProcessed;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EdgeRing;\r\n\t}\r\n});\r\nEdgeRing.findDirEdgesInRing = function (startDE) {\r\n\tvar de = startDE;\r\n\tvar edges = new ArrayList();\r\n\tdo {\r\n\t\tedges.add(de);\r\n\t\tde = de.getNext();\r\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\r\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\r\n\t} while (de !== startDE);\r\n\treturn edges;\r\n};\r\nEdgeRing.addEdge = function (coords, isForward, coordList) {\r\n\tif (isForward) {\r\n\t\tfor (var i = 0; i < coords.length; i++) {\r\n\t\t\tcoordList.add(coords[i], false);\r\n\t\t}\r\n\t} else {\r\n\t\tfor (var i = coords.length - 1; i >= 0; i--) {\r\n\t\t\tcoordList.add(coords[i], false);\r\n\t\t}\r\n\t}\r\n};\r\nEdgeRing.findEdgeRingContaining = function (testEr, shellList) {\r\n\tvar testRing = testEr.getRing();\r\n\tvar testEnv = testRing.getEnvelopeInternal();\r\n\tvar testPt = testRing.getCoordinateN(0);\r\n\tvar minShell = null;\r\n\tvar minShellEnv = null;\r\n\tfor (var it = shellList.iterator(); it.hasNext(); ) {\r\n\t\tvar tryShell = it.next();\r\n\t\tvar tryShellRing = tryShell.getRing();\r\n\t\tvar tryShellEnv = tryShellRing.getEnvelopeInternal();\r\n\t\tif (tryShellEnv.equals(testEnv)) continue;\r\n\t\tif (!tryShellEnv.contains(testEnv)) continue;\r\n\t\ttestPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates());\r\n\t\tvar isContained = false;\r\n\t\tif (CGAlgorithms.isPointInRing(testPt, tryShellRing.getCoordinates())) isContained = true;\r\n\t\tif (isContained) {\r\n\t\t\tif (minShell === null || minShellEnv.contains(tryShellEnv)) {\r\n\t\t\t\tminShell = tryShell;\r\n\t\t\t\tminShellEnv = minShell.getRing().getEnvelopeInternal();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn minShell;\r\n};\r\nfunction EnvelopeComparator() {}\r\nextend(EnvelopeComparator.prototype, {\r\n\tcompare: function (obj0, obj1) {\r\n\t\tvar r0 = obj0;\r\n\t\tvar r1 = obj1;\r\n\t\treturn r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope());\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [Comparator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EnvelopeComparator;\r\n\t}\r\n});\r\nEdgeRing.EnvelopeComparator = EnvelopeComparator;\r\n","import PolygonizeDirectedEdge from './PolygonizeDirectedEdge';\r\nimport HashSet from '../../../../../java/util/HashSet';\r\nimport Stack from '../../../../../java/util/Stack';\r\nimport Node from '../../planargraph/Node';\r\nimport PolygonizeEdge from './PolygonizeEdge';\r\nimport extend from '../../../../../extend';\r\nimport EdgeRing from './EdgeRing';\r\nimport CoordinateArrays from '../../geom/CoordinateArrays';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Assert from '../../util/Assert';\r\nimport inherits from '../../../../../inherits';\r\nimport PlanarGraph from '../../planargraph/PlanarGraph';\r\nexport default function PolygonizeGraph() {\r\n\tPlanarGraph.apply(this);\r\n\tthis.factory = null;\r\n\tlet factory = arguments[0];\r\n\tthis.factory = factory;\r\n}\r\ninherits(PolygonizeGraph, PlanarGraph);\r\nextend(PolygonizeGraph.prototype, {\r\n\tfindEdgeRing: function (startDE) {\r\n\t\tvar er = new EdgeRing(this.factory);\r\n\t\ter.build(startDE);\r\n\t\treturn er;\r\n\t},\r\n\tcomputeDepthParity: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\twhile (true) {\r\n\t\t\t\tvar de = null;\r\n\t\t\t\tif (de === null) return null;\r\n\t\t\t\tthis.computeDepthParity(de);\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet de = arguments[0];\r\n\t\t}\r\n\t},\r\n\tcomputeNextCWEdges: function () {\r\n\t\tfor (var iNode = this.nodeIterator(); iNode.hasNext(); ) {\r\n\t\t\tvar node = iNode.next();\r\n\t\t\tPolygonizeGraph.computeNextCWEdges(node);\r\n\t\t}\r\n\t},\r\n\taddEdge: function (line) {\r\n\t\tif (line.isEmpty()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\r\n\t\tif (linePts.length < 2) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar startPt = linePts[0];\r\n\t\tvar endPt = linePts[linePts.length - 1];\r\n\t\tvar nStart = this.getNode(startPt);\r\n\t\tvar nEnd = this.getNode(endPt);\r\n\t\tvar de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true);\r\n\t\tvar de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false);\r\n\t\tvar edge = new PolygonizeEdge(line);\r\n\t\tedge.setDirectedEdges(de0, de1);\r\n\t\tthis.add(edge);\r\n\t},\r\n\tdeleteCutEdges: function () {\r\n\t\tthis.computeNextCWEdges();\r\n\t\tPolygonizeGraph.findLabeledEdgeRings(this.dirEdges);\r\n\t\tvar cutLines = new ArrayList();\r\n\t\tfor (var i = this.dirEdges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar de = i.next();\r\n\t\t\tif (de.isMarked()) continue;\r\n\t\t\tvar sym = de.getSym();\r\n\t\t\tif (de.getLabel() === sym.getLabel()) {\r\n\t\t\t\tde.setMarked(true);\r\n\t\t\t\tsym.setMarked(true);\r\n\t\t\t\tvar e = de.getEdge();\r\n\t\t\t\tcutLines.add(e.getLine());\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cutLines;\r\n\t},\r\n\tgetEdgeRings: function () {\r\n\t\tthis.computeNextCWEdges();\r\n\t\tPolygonizeGraph.label(this.dirEdges, -1);\r\n\t\tvar maximalRings = PolygonizeGraph.findLabeledEdgeRings(this.dirEdges);\r\n\t\tthis.convertMaximalToMinimalEdgeRings(maximalRings);\r\n\t\tvar edgeRingList = new ArrayList();\r\n\t\tfor (var i = this.dirEdges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar de = i.next();\r\n\t\t\tif (de.isMarked()) continue;\r\n\t\t\tif (de.isInRing()) continue;\r\n\t\t\tvar er = this.findEdgeRing(de);\r\n\t\t\tedgeRingList.add(er);\r\n\t\t}\r\n\t\treturn edgeRingList;\r\n\t},\r\n\tgetNode: function (pt) {\r\n\t\tvar node = this.findNode(pt);\r\n\t\tif (node === null) {\r\n\t\t\tnode = new Node(pt);\r\n\t\t\tthis.add(node);\r\n\t\t}\r\n\t\treturn node;\r\n\t},\r\n\tconvertMaximalToMinimalEdgeRings: function (ringEdges) {\r\n\t\tfor (var i = ringEdges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar de = i.next();\r\n\t\t\tvar label = de.getLabel();\r\n\t\t\tvar intNodes = PolygonizeGraph.findIntersectionNodes(de, label);\r\n\t\t\tif (intNodes === null) continue;\r\n\t\t\tfor (var iNode = intNodes.iterator(); iNode.hasNext(); ) {\r\n\t\t\t\tvar node = iNode.next();\r\n\t\t\t\tPolygonizeGraph.computeNextCCWEdges(node, label);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdeleteDangles: function () {\r\n\t\tvar nodesToRemove = this.findNodesOfDegree(1);\r\n\t\tvar dangleLines = new HashSet();\r\n\t\tvar nodeStack = new Stack();\r\n\t\tfor (var i = nodesToRemove.iterator(); i.hasNext(); ) {\r\n\t\t\tnodeStack.push(i.next());\r\n\t\t}\r\n\t\twhile (!nodeStack.isEmpty()) {\r\n\t\t\tvar node = nodeStack.pop();\r\n\t\t\tPolygonizeGraph.deleteAllEdges(node);\r\n\t\t\tvar nodeOutEdges = node.getOutEdges().getEdges();\r\n\t\t\tfor (var i = nodeOutEdges.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar de = i.next();\r\n\t\t\t\tde.setMarked(true);\r\n\t\t\t\tvar sym = de.getSym();\r\n\t\t\t\tif (sym !== null) sym.setMarked(true);\r\n\t\t\t\tvar e = de.getEdge();\r\n\t\t\t\tdangleLines.add(e.getLine());\r\n\t\t\t\tvar toNode = de.getToNode();\r\n\t\t\t\tif (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dangleLines;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PolygonizeGraph;\r\n\t}\r\n});\r\nPolygonizeGraph.findLabeledEdgeRings = function (dirEdges) {\r\n\tvar edgeRingStarts = new ArrayList();\r\n\tvar currLabel = 1;\r\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\r\n\t\tvar de = i.next();\r\n\t\tif (de.isMarked()) continue;\r\n\t\tif (de.getLabel() >= 0) continue;\r\n\t\tedgeRingStarts.add(de);\r\n\t\tvar edges = EdgeRing.findDirEdgesInRing(de);\r\n\t\tPolygonizeGraph.label(edges, currLabel);\r\n\t\tcurrLabel++;\r\n\t}\r\n\treturn edgeRingStarts;\r\n};\r\nPolygonizeGraph.getDegreeNonDeleted = function (node) {\r\n\tvar edges = node.getOutEdges().getEdges();\r\n\tvar degree = 0;\r\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\r\n\t\tvar de = i.next();\r\n\t\tif (!de.isMarked()) degree++;\r\n\t}\r\n\treturn degree;\r\n};\r\nPolygonizeGraph.deleteAllEdges = function (node) {\r\n\tvar edges = node.getOutEdges().getEdges();\r\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\r\n\t\tvar de = i.next();\r\n\t\tde.setMarked(true);\r\n\t\tvar sym = de.getSym();\r\n\t\tif (sym !== null) sym.setMarked(true);\r\n\t}\r\n};\r\nPolygonizeGraph.label = function (dirEdges, label) {\r\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\r\n\t\tvar de = i.next();\r\n\t\tde.setLabel(label);\r\n\t}\r\n};\r\nPolygonizeGraph.computeNextCWEdges = function (node) {\r\n\tvar deStar = node.getOutEdges();\r\n\tvar startDE = null;\r\n\tvar prevDE = null;\r\n\tfor (var i = deStar.getEdges().iterator(); i.hasNext(); ) {\r\n\t\tvar outDE = i.next();\r\n\t\tif (outDE.isMarked()) continue;\r\n\t\tif (startDE === null) startDE = outDE;\r\n\t\tif (prevDE !== null) {\r\n\t\t\tvar sym = prevDE.getSym();\r\n\t\t\tsym.setNext(outDE);\r\n\t\t}\r\n\t\tprevDE = outDE;\r\n\t}\r\n\tif (prevDE !== null) {\r\n\t\tvar sym = prevDE.getSym();\r\n\t\tsym.setNext(startDE);\r\n\t}\r\n};\r\nPolygonizeGraph.computeNextCCWEdges = function (node, label) {\r\n\tvar deStar = node.getOutEdges();\r\n\tvar firstOutDE = null;\r\n\tvar prevInDE = null;\r\n\tvar edges = deStar.getEdges();\r\n\tfor (var i = edges.size() - 1; i >= 0; i--) {\r\n\t\tvar de = edges.get(i);\r\n\t\tvar sym = de.getSym();\r\n\t\tvar outDE = null;\r\n\t\tif (de.getLabel() === label) outDE = de;\r\n\t\tvar inDE = null;\r\n\t\tif (sym.getLabel() === label) inDE = sym;\r\n\t\tif (outDE === null && inDE === null) continue;\r\n\t\tif (inDE !== null) {\r\n\t\t\tprevInDE = inDE;\r\n\t\t}\r\n\t\tif (outDE !== null) {\r\n\t\t\tif (prevInDE !== null) {\r\n\t\t\t\tprevInDE.setNext(outDE);\r\n\t\t\t\tprevInDE = null;\r\n\t\t\t}\r\n\t\t\tif (firstOutDE === null) firstOutDE = outDE;\r\n\t\t}\r\n\t}\r\n\tif (prevInDE !== null) {\r\n\t\tAssert.isTrue(firstOutDE !== null);\r\n\t\tprevInDE.setNext(firstOutDE);\r\n\t}\r\n};\r\nPolygonizeGraph.getDegree = function (node, label) {\r\n\tvar edges = node.getOutEdges().getEdges();\r\n\tvar degree = 0;\r\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\r\n\t\tvar de = i.next();\r\n\t\tif (de.getLabel() === label) degree++;\r\n\t}\r\n\treturn degree;\r\n};\r\nPolygonizeGraph.findIntersectionNodes = function (startDE, label) {\r\n\tvar de = startDE;\r\n\tvar intNodes = null;\r\n\tdo {\r\n\t\tvar node = de.getFromNode();\r\n\t\tif (PolygonizeGraph.getDegree(node, label) > 1) {\r\n\t\t\tif (intNodes === null) intNodes = new ArrayList();\r\n\t\t\tintNodes.add(node);\r\n\t\t}\r\n\t\tde = de.getNext();\r\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\r\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\r\n\t} while (de !== startDE);\r\n\treturn intNodes;\r\n};\r\n","import LineString from '../../geom/LineString';\r\nimport Geometry from '../../geom/Geometry';\r\nimport PolygonizeGraph from './PolygonizeGraph';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport GeometryFactory from '../../geom/GeometryFactory';\r\nimport Collection from '../../../../../java/util/Collection';\r\nimport extend from '../../../../../extend';\r\nimport Collections from '../../../../../java/util/Collections';\r\nimport EdgeRing from './EdgeRing';\r\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nexport default function Polygonizer() {\r\n\tthis.lineStringAdder = new LineStringAdder(this);\r\n\tthis.graph = null;\r\n\tthis.dangles = new ArrayList();\r\n\tthis.cutEdges = new ArrayList();\r\n\tthis.invalidRingLines = new ArrayList();\r\n\tthis.holeList = null;\r\n\tthis.shellList = null;\r\n\tthis.polyList = null;\r\n\tthis.isCheckingRingsValid = true;\r\n\tthis.extractOnlyPolygonal = null;\r\n\tthis.geomFactory = null;\r\n\tif (arguments.length === 0) {\r\n\t\tPolygonizer.call(this, false);\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet extractOnlyPolygonal = arguments[0];\r\n\t\tthis.extractOnlyPolygonal = extractOnlyPolygonal;\r\n\t}\r\n}\r\nextend(Polygonizer.prototype, {\r\n\tgetGeometry: function () {\r\n\t\tif (this.geomFactory === null) this.geomFactory = new GeometryFactory();\r\n\t\tthis.polygonize();\r\n\t\tif (this.extractOnlyPolygonal) {\r\n\t\t\treturn this.geomFactory.buildGeometry(this.polyList);\r\n\t\t}\r\n\t\treturn this.geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this.polyList));\r\n\t},\r\n\tgetInvalidRingLines: function () {\r\n\t\tthis.polygonize();\r\n\t\treturn this.invalidRingLines;\r\n\t},\r\n\tfindValidRings: function (edgeRingList, validEdgeRingList, invalidRingList) {\r\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\r\n\t\t\tvar er = i.next();\r\n\t\t\tif (er.isValid()) validEdgeRingList.add(er); else invalidRingList.add(er.getLineString());\r\n\t\t}\r\n\t},\r\n\tpolygonize: function () {\r\n\t\tif (this.polyList !== null) return null;\r\n\t\tthis.polyList = new ArrayList();\r\n\t\tif (this.graph === null) return null;\r\n\t\tthis.dangles = this.graph.deleteDangles();\r\n\t\tthis.cutEdges = this.graph.deleteCutEdges();\r\n\t\tvar edgeRingList = this.graph.getEdgeRings();\r\n\t\tvar validEdgeRingList = new ArrayList();\r\n\t\tthis.invalidRingLines = new ArrayList();\r\n\t\tif (this.isCheckingRingsValid) {\r\n\t\t\tthis.findValidRings(edgeRingList, validEdgeRingList, this.invalidRingLines);\r\n\t\t} else {\r\n\t\t\tvalidEdgeRingList = edgeRingList;\r\n\t\t}\r\n\t\tthis.findShellsAndHoles(validEdgeRingList);\r\n\t\tPolygonizer.assignHolesToShells(this.holeList, this.shellList);\r\n\t\tCollections.sort(this.shellList, new EdgeRing.EnvelopeComparator());\r\n\t\tvar includeAll = true;\r\n\t\tif (this.extractOnlyPolygonal) {\r\n\t\t\tPolygonizer.findDisjointShells(this.shellList);\r\n\t\t\tincludeAll = false;\r\n\t\t}\r\n\t\tthis.polyList = Polygonizer.extractPolygons(this.shellList, includeAll);\r\n\t},\r\n\tgetDangles: function () {\r\n\t\tthis.polygonize();\r\n\t\treturn this.dangles;\r\n\t},\r\n\tgetCutEdges: function () {\r\n\t\tthis.polygonize();\r\n\t\treturn this.cutEdges;\r\n\t},\r\n\tgetPolygons: function () {\r\n\t\tthis.polygonize();\r\n\t\treturn this.polyList;\r\n\t},\r\n\tadd: function () {\r\n\t\tif (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet geomList = arguments[0];\r\n\t\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar geometry = i.next();\r\n\t\t\t\tthis.add(geometry);\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof LineString) {\r\n\t\t\tlet line = arguments[0];\r\n\t\t\tthis.geomFactory = line.getFactory();\r\n\t\t\tif (this.graph === null) this.graph = new PolygonizeGraph(this.geomFactory);\r\n\t\t\tthis.graph.addEdge(line);\r\n\t\t} else if (arguments[0] instanceof Geometry) {\r\n\t\t\tlet g = arguments[0];\r\n\t\t\tg.apply(this.lineStringAdder);\r\n\t\t}\r\n\t},\r\n\tsetCheckRingsValid: function (isCheckingRingsValid) {\r\n\t\tthis.isCheckingRingsValid = isCheckingRingsValid;\r\n\t},\r\n\tfindShellsAndHoles: function (edgeRingList) {\r\n\t\tthis.holeList = new ArrayList();\r\n\t\tthis.shellList = new ArrayList();\r\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\r\n\t\t\tvar er = i.next();\r\n\t\t\ter.computeHole();\r\n\t\t\tif (er.isHole()) this.holeList.add(er); else this.shellList.add(er);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Polygonizer;\r\n\t}\r\n});\r\nPolygonizer.findOuterShells = function (shellList) {\r\n\tfor (var i = shellList.iterator(); i.hasNext(); ) {\r\n\t\tvar er = i.next();\r\n\t\tvar outerHoleER = er.getOuterHole();\r\n\t\tif (outerHoleER !== null && !outerHoleER.isProcessed()) {\r\n\t\t\ter.setIncluded(true);\r\n\t\t\touterHoleER.setProcessed(true);\r\n\t\t}\r\n\t}\r\n};\r\nPolygonizer.extractPolygons = function (shellList, includeAll) {\r\n\tvar polyList = new ArrayList();\r\n\tfor (var i = shellList.iterator(); i.hasNext(); ) {\r\n\t\tvar er = i.next();\r\n\t\tif (includeAll || er.isIncluded()) {\r\n\t\t\tpolyList.add(er.getPolygon());\r\n\t\t}\r\n\t}\r\n\treturn polyList;\r\n};\r\nPolygonizer.assignHolesToShells = function (holeList, shellList) {\r\n\tfor (var i = holeList.iterator(); i.hasNext(); ) {\r\n\t\tvar holeER = i.next();\r\n\t\tPolygonizer.assignHoleToShell(holeER, shellList);\r\n\t}\r\n};\r\nPolygonizer.assignHoleToShell = function (holeER, shellList) {\r\n\tvar shell = EdgeRing.findEdgeRingContaining(holeER, shellList);\r\n\tif (shell !== null) {\r\n\t\tshell.addHole(holeER);\r\n\t}\r\n};\r\nPolygonizer.findDisjointShells = function (shellList) {\r\n\tPolygonizer.findOuterShells(shellList);\r\n\tvar isMoreToScan = null;\r\n\tdo {\r\n\t\tisMoreToScan = false;\r\n\t\tfor (var i = shellList.iterator(); i.hasNext(); ) {\r\n\t\t\tvar er = i.next();\r\n\t\t\tif (er.isIncludedSet()) continue;\r\n\t\t\ter.updateIncluded();\r\n\t\t\tif (!er.isIncludedSet()) {\r\n\t\t\t\tisMoreToScan = true;\r\n\t\t\t}\r\n\t\t}\r\n\t} while (isMoreToScan);\r\n};\r\nfunction LineStringAdder() {\r\n\tthis.p = null;\r\n\tlet p = arguments[0];\r\n\tthis.p = p;\r\n}\r\nextend(LineStringAdder.prototype, {\r\n\tfilter: function (g) {\r\n\t\tif (g instanceof LineString) this.p.add(g);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryComponentFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineStringAdder;\r\n\t}\r\n});\r\nPolygonizer.LineStringAdder = LineStringAdder;\r\n","import PointLocator from '../../algorithm/PointLocator';\r\nimport Location from '../../geom/Location';\r\nimport IntersectionMatrix from '../../geom/IntersectionMatrix';\r\nimport EdgeEndBuilder from './EdgeEndBuilder';\r\nimport extend from '../../../../../extend';\r\nimport NodeMap from '../../geomgraph/NodeMap';\r\nimport RelateNodeFactory from './RelateNodeFactory';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\r\nimport Assert from '../../util/Assert';\r\nexport default function RelateComputer() {\r\n\tthis.li = new RobustLineIntersector();\r\n\tthis.ptLocator = new PointLocator();\r\n\tthis.arg = null;\r\n\tthis.nodes = new NodeMap(new RelateNodeFactory());\r\n\tthis.im = null;\r\n\tthis.isolatedEdges = new ArrayList();\r\n\tthis.invalidPoint = null;\r\n\tlet arg = arguments[0];\r\n\tthis.arg = arg;\r\n}\r\nextend(RelateComputer.prototype, {\r\n\tinsertEdgeEnds: function (ee) {\r\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tthis.nodes.add(e);\r\n\t\t}\r\n\t},\r\n\tcomputeProperIntersectionIM: function (intersector, im) {\r\n\t\tvar dimA = this.arg[0].getGeometry().getDimension();\r\n\t\tvar dimB = this.arg[1].getGeometry().getDimension();\r\n\t\tvar hasProper = intersector.hasProperIntersection();\r\n\t\tvar hasProperInterior = intersector.hasProperInteriorIntersection();\r\n\t\tif (dimA === 2 && dimB === 2) {\r\n\t\t\tif (hasProper) im.setAtLeast(\"212101212\");\r\n\t\t} else if (dimA === 2 && dimB === 1) {\r\n\t\t\tif (hasProper) im.setAtLeast(\"FFF0FFFF2\");\r\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1FFFFF1FF\");\r\n\t\t} else if (dimA === 1 && dimB === 2) {\r\n\t\t\tif (hasProper) im.setAtLeast(\"F0FFFFFF2\");\r\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1F1FFFFFF\");\r\n\t\t} else if (dimA === 1 && dimB === 1) {\r\n\t\t\tif (hasProperInterior) im.setAtLeast(\"0FFFFFFFF\");\r\n\t\t}\r\n\t},\r\n\tlabelIsolatedEdges: function (thisIndex, targetIndex) {\r\n\t\tfor (var ei = this.arg[thisIndex].getEdgeIterator(); ei.hasNext(); ) {\r\n\t\t\tvar e = ei.next();\r\n\t\t\tif (e.isIsolated()) {\r\n\t\t\t\tthis.labelIsolatedEdge(e, targetIndex, this.arg[targetIndex].getGeometry());\r\n\t\t\t\tthis.isolatedEdges.add(e);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tlabelIsolatedEdge: function (e, targetIndex, target) {\r\n\t\tif (target.getDimension() > 0) {\r\n\t\t\tvar loc = this.ptLocator.locate(e.getCoordinate(), target);\r\n\t\t\te.getLabel().setAllLocations(targetIndex, loc);\r\n\t\t} else {\r\n\t\t\te.getLabel().setAllLocations(targetIndex, Location.EXTERIOR);\r\n\t\t}\r\n\t},\r\n\tcomputeIM: function () {\r\n\t\tvar im = new IntersectionMatrix();\r\n\t\tim.set(Location.EXTERIOR, Location.EXTERIOR, 2);\r\n\t\tif (!this.arg[0].getGeometry().getEnvelopeInternal().intersects(this.arg[1].getGeometry().getEnvelopeInternal())) {\r\n\t\t\tthis.computeDisjointIM(im);\r\n\t\t\treturn im;\r\n\t\t}\r\n\t\tthis.arg[0].computeSelfNodes(this.li, false);\r\n\t\tthis.arg[1].computeSelfNodes(this.li, false);\r\n\t\tvar intersector = this.arg[0].computeEdgeIntersections(this.arg[1], this.li, false);\r\n\t\tthis.computeIntersectionNodes(0);\r\n\t\tthis.computeIntersectionNodes(1);\r\n\t\tthis.copyNodesAndLabels(0);\r\n\t\tthis.copyNodesAndLabels(1);\r\n\t\tthis.labelIsolatedNodes();\r\n\t\tthis.computeProperIntersectionIM(intersector, im);\r\n\t\tvar eeBuilder = new EdgeEndBuilder();\r\n\t\tvar ee0 = eeBuilder.computeEdgeEnds(this.arg[0].getEdgeIterator());\r\n\t\tthis.insertEdgeEnds(ee0);\r\n\t\tvar ee1 = eeBuilder.computeEdgeEnds(this.arg[1].getEdgeIterator());\r\n\t\tthis.insertEdgeEnds(ee1);\r\n\t\tthis.labelNodeEdges();\r\n\t\tthis.labelIsolatedEdges(0, 1);\r\n\t\tthis.labelIsolatedEdges(1, 0);\r\n\t\tthis.updateIM(im);\r\n\t\treturn im;\r\n\t},\r\n\tlabelNodeEdges: function () {\r\n\t\tfor (var ni = this.nodes.iterator(); ni.hasNext(); ) {\r\n\t\t\tvar node = ni.next();\r\n\t\t\tnode.getEdges().computeLabelling(this.arg);\r\n\t\t}\r\n\t},\r\n\tcopyNodesAndLabels: function (argIndex) {\r\n\t\tfor (var i = this.arg[argIndex].getNodeIterator(); i.hasNext(); ) {\r\n\t\t\tvar graphNode = i.next();\r\n\t\t\tvar newNode = this.nodes.addNode(graphNode.getCoordinate());\r\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\r\n\t\t}\r\n\t},\r\n\tlabelIntersectionNodes: function (argIndex) {\r\n\t\tfor (var i = this.arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\r\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\r\n\t\t\t\tvar ei = eiIt.next();\r\n\t\t\t\tvar n = this.nodes.find(ei.coord);\r\n\t\t\t\tif (n.getLabel().isNull(argIndex)) {\r\n\t\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else n.setLabel(argIndex, Location.INTERIOR);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tlabelIsolatedNode: function (n, targetIndex) {\r\n\t\tvar loc = this.ptLocator.locate(n.getCoordinate(), this.arg[targetIndex].getGeometry());\r\n\t\tn.getLabel().setAllLocations(targetIndex, loc);\r\n\t},\r\n\tcomputeIntersectionNodes: function (argIndex) {\r\n\t\tfor (var i = this.arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\r\n\t\t\tvar e = i.next();\r\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\r\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\r\n\t\t\t\tvar ei = eiIt.next();\r\n\t\t\t\tvar n = this.nodes.addNode(ei.coord);\r\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\r\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tlabelIsolatedNodes: function () {\r\n\t\tfor (var ni = this.nodes.iterator(); ni.hasNext(); ) {\r\n\t\t\tvar n = ni.next();\r\n\t\t\tvar label = n.getLabel();\r\n\t\t\tAssert.isTrue(label.getGeometryCount() > 0, \"node with empty label found\");\r\n\t\t\tif (n.isIsolated()) {\r\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedNode(n, 0); else this.labelIsolatedNode(n, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tupdateIM: function (im) {\r\n\t\tfor (var ei = this.isolatedEdges.iterator(); ei.hasNext(); ) {\r\n\t\t\tvar e = ei.next();\r\n\t\t\te.updateIM(im);\r\n\t\t}\r\n\t\tfor (var ni = this.nodes.iterator(); ni.hasNext(); ) {\r\n\t\t\tvar node = ni.next();\r\n\t\t\tnode.updateIM(im);\r\n\t\t\tnode.updateIMFromEdges(im);\r\n\t\t}\r\n\t},\r\n\tcomputeDisjointIM: function (im) {\r\n\t\tvar ga = this.arg[0].getGeometry();\r\n\t\tif (!ga.isEmpty()) {\r\n\t\t\tim.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension());\r\n\t\t\tim.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension());\r\n\t\t}\r\n\t\tvar gb = this.arg[1].getGeometry();\r\n\t\tif (!gb.isEmpty()) {\r\n\t\t\tim.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension());\r\n\t\t\tim.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension());\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RelateComputer;\r\n\t}\r\n});\r\n","import LineString from '../../geom/LineString';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport Point from '../../geom/Point';\r\nimport Polygon from '../../geom/Polygon';\r\nimport extend from '../../../../../extend';\r\nexport default function RectangleContains() {\r\n\tthis.rectEnv = null;\r\n\tlet rectangle = arguments[0];\r\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\r\n}\r\nextend(RectangleContains.prototype, {\r\n\tisContainedInBoundary: function (geom) {\r\n\t\tif (geom instanceof Polygon) return false;\r\n\t\tif (geom instanceof Point) return this.isPointContainedInBoundary(geom);\r\n\t\tif (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom);\r\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\r\n\t\t\tvar comp = geom.getGeometryN(i);\r\n\t\t\tif (!this.isContainedInBoundary(comp)) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tisLineSegmentContainedInBoundary: function (p0, p1) {\r\n\t\tif (p0.equals(p1)) return this.isPointContainedInBoundary(p0);\r\n\t\tif (p0.x === p1.x) {\r\n\t\t\tif (p0.x === this.rectEnv.getMinX() || p0.x === this.rectEnv.getMaxX()) return true;\r\n\t\t} else if (p0.y === p1.y) {\r\n\t\t\tif (p0.y === this.rectEnv.getMinY() || p0.y === this.rectEnv.getMaxY()) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tisLineStringContainedInBoundary: function (line) {\r\n\t\tvar seq = line.getCoordinateSequence();\r\n\t\tvar p0 = new Coordinate();\r\n\t\tvar p1 = new Coordinate();\r\n\t\tfor (var i = 0; i < seq.size() - 1; i++) {\r\n\t\t\tseq.getCoordinate(i, p0);\r\n\t\t\tseq.getCoordinate(i + 1, p1);\r\n\t\t\tif (!this.isLineSegmentContainedInBoundary(p0, p1)) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tisPointContainedInBoundary: function () {\r\n\t\tif (arguments[0] instanceof Point) {\r\n\t\t\tlet point = arguments[0];\r\n\t\t\treturn this.isPointContainedInBoundary(point.getCoordinate());\r\n\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet pt = arguments[0];\r\n\t\t\treturn pt.x === this.rectEnv.getMinX() || pt.x === this.rectEnv.getMaxX() || pt.y === this.rectEnv.getMinY() || pt.y === this.rectEnv.getMaxY();\r\n\t\t}\r\n\t},\r\n\tcontains: function (geom) {\r\n\t\tif (!this.rectEnv.contains(geom.getEnvelopeInternal())) return false;\r\n\t\tif (this.isContainedInBoundary(geom)) return false;\r\n\t\treturn true;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RectangleContains;\r\n\t}\r\n});\r\nRectangleContains.contains = function (rectangle, b) {\r\n\tvar rc = new RectangleContains(rectangle);\r\n\treturn rc.contains(b);\r\n};\r\n","import Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport RobustLineIntersector from './RobustLineIntersector';\r\nimport Envelope from '../geom/Envelope';\r\nexport default function RectangleLineIntersector() {\r\n\tthis.li = new RobustLineIntersector();\r\n\tthis.rectEnv = null;\r\n\tthis.diagUp0 = null;\r\n\tthis.diagUp1 = null;\r\n\tthis.diagDown0 = null;\r\n\tthis.diagDown1 = null;\r\n\tlet rectEnv = arguments[0];\r\n\tthis.rectEnv = rectEnv;\r\n\tthis.diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY());\r\n\tthis.diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY());\r\n\tthis.diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY());\r\n\tthis.diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY());\r\n}\r\nextend(RectangleLineIntersector.prototype, {\r\n\tintersects: function (p0, p1) {\r\n\t\tvar segEnv = new Envelope(p0, p1);\r\n\t\tif (!this.rectEnv.intersects(segEnv)) return false;\r\n\t\tif (this.rectEnv.intersects(p0)) return true;\r\n\t\tif (this.rectEnv.intersects(p1)) return true;\r\n\t\tif (p0.compareTo(p1) > 0) {\r\n\t\t\tvar tmp = p0;\r\n\t\t\tp0 = p1;\r\n\t\t\tp1 = tmp;\r\n\t\t}\r\n\t\tvar isSegUpwards = false;\r\n\t\tif (p1.y > p0.y) isSegUpwards = true;\r\n\t\tif (isSegUpwards) {\r\n\t\t\tthis.li.computeIntersection(p0, p1, this.diagDown0, this.diagDown1);\r\n\t\t} else {\r\n\t\t\tthis.li.computeIntersection(p0, p1, this.diagUp0, this.diagUp1);\r\n\t\t}\r\n\t\tif (this.li.hasIntersection()) return true;\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RectangleLineIntersector;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport GeometryCollection from '../GeometryCollection';\r\nexport default function ShortCircuitedGeometryVisitor() {\r\n\tthis._isDone = false;\r\n}\r\nextend(ShortCircuitedGeometryVisitor.prototype, {\r\n\tapplyTo: function (geom) {\r\n\t\tfor (var i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\r\n\t\t\tvar element = geom.getGeometryN(i);\r\n\t\t\tif (!(element instanceof GeometryCollection)) {\r\n\t\t\t\tthis.visit(element);\r\n\t\t\t\tif (this.isDone()) {\r\n\t\t\t\t\tthis._isDone = true;\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t} else this.applyTo(element);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ShortCircuitedGeometryVisitor;\r\n\t}\r\n});\r\n","import Coordinate from '../../geom/Coordinate';\r\nimport Polygon from '../../geom/Polygon';\r\nimport RectangleLineIntersector from '../../algorithm/RectangleLineIntersector';\r\nimport extend from '../../../../../extend';\r\nimport ShortCircuitedGeometryVisitor from '../../geom/util/ShortCircuitedGeometryVisitor';\r\nimport SimplePointInAreaLocator from '../../algorithm/locate/SimplePointInAreaLocator';\r\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\r\nimport inherits from '../../../../../inherits';\r\nexport default function RectangleIntersects() {\r\n\tthis.rectangle = null;\r\n\tthis.rectEnv = null;\r\n\tlet rectangle = arguments[0];\r\n\tthis.rectangle = rectangle;\r\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\r\n}\r\nextend(RectangleIntersects.prototype, {\r\n\tintersects: function (geom) {\r\n\t\tif (!this.rectEnv.intersects(geom.getEnvelopeInternal())) return false;\r\n\t\tvar visitor = new EnvelopeIntersectsVisitor(this.rectEnv);\r\n\t\tvisitor.applyTo(geom);\r\n\t\tif (visitor.intersects()) return true;\r\n\t\tvar ecpVisitor = new GeometryContainsPointVisitor(this.rectangle);\r\n\t\tecpVisitor.applyTo(geom);\r\n\t\tif (ecpVisitor.containsPoint()) return true;\r\n\t\tvar riVisitor = new RectangleIntersectsSegmentVisitor(this.rectangle);\r\n\t\triVisitor.applyTo(geom);\r\n\t\tif (riVisitor.intersects()) return true;\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RectangleIntersects;\r\n\t}\r\n});\r\nRectangleIntersects.intersects = function (rectangle, b) {\r\n\tvar rp = new RectangleIntersects(rectangle);\r\n\treturn rp.intersects(b);\r\n};\r\nfunction EnvelopeIntersectsVisitor() {\r\n\tShortCircuitedGeometryVisitor.apply(this);\r\n\tthis.rectEnv = null;\r\n\tthis._intersects = false;\r\n\tlet rectEnv = arguments[0];\r\n\tthis.rectEnv = rectEnv;\r\n}\r\ninherits(EnvelopeIntersectsVisitor, ShortCircuitedGeometryVisitor);\r\nextend(EnvelopeIntersectsVisitor.prototype, {\r\n\tisDone: function () {\r\n\t\treturn this._intersects === true;\r\n\t},\r\n\tvisit: function (element) {\r\n\t\tvar elementEnv = element.getEnvelopeInternal();\r\n\t\tif (!this.rectEnv.intersects(elementEnv)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (this.rectEnv.contains(elementEnv)) {\r\n\t\t\tthis._intersects = true;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (elementEnv.getMinX() >= this.rectEnv.getMinX() && elementEnv.getMaxX() <= this.rectEnv.getMaxX()) {\r\n\t\t\tthis._intersects = true;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (elementEnv.getMinY() >= this.rectEnv.getMinY() && elementEnv.getMaxY() <= this.rectEnv.getMaxY()) {\r\n\t\t\tthis._intersects = true;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tintersects: function () {\r\n\t\treturn this._intersects;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn EnvelopeIntersectsVisitor;\r\n\t}\r\n});\r\nfunction GeometryContainsPointVisitor() {\r\n\tShortCircuitedGeometryVisitor.apply(this);\r\n\tthis.rectSeq = null;\r\n\tthis.rectEnv = null;\r\n\tthis._containsPoint = false;\r\n\tlet rectangle = arguments[0];\r\n\tthis.rectSeq = rectangle.getExteriorRing().getCoordinateSequence();\r\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\r\n}\r\ninherits(GeometryContainsPointVisitor, ShortCircuitedGeometryVisitor);\r\nextend(GeometryContainsPointVisitor.prototype, {\r\n\tisDone: function () {\r\n\t\treturn this._containsPoint === true;\r\n\t},\r\n\tvisit: function (geom) {\r\n\t\tif (!(geom instanceof Polygon)) return null;\r\n\t\tvar elementEnv = geom.getEnvelopeInternal();\r\n\t\tif (!this.rectEnv.intersects(elementEnv)) return null;\r\n\t\tvar rectPt = new Coordinate();\r\n\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\tthis.rectSeq.getCoordinate(i, rectPt);\r\n\t\t\tif (!elementEnv.contains(rectPt)) continue;\r\n\t\t\tif (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\r\n\t\t\t\tthis._containsPoint = true;\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcontainsPoint: function () {\r\n\t\treturn this._containsPoint;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryContainsPointVisitor;\r\n\t}\r\n});\r\nfunction RectangleIntersectsSegmentVisitor() {\r\n\tShortCircuitedGeometryVisitor.apply(this);\r\n\tthis.rectEnv = null;\r\n\tthis.rectIntersector = null;\r\n\tthis.hasIntersection = false;\r\n\tthis.p0 = new Coordinate();\r\n\tthis.p1 = new Coordinate();\r\n\tlet rectangle = arguments[0];\r\n\tthis.rectEnv = rectangle.getEnvelopeInternal();\r\n\tthis.rectIntersector = new RectangleLineIntersector(this.rectEnv);\r\n}\r\ninherits(RectangleIntersectsSegmentVisitor, ShortCircuitedGeometryVisitor);\r\nextend(RectangleIntersectsSegmentVisitor.prototype, {\r\n\tintersects: function () {\r\n\t\treturn this.hasIntersection;\r\n\t},\r\n\tisDone: function () {\r\n\t\treturn this.hasIntersection === true;\r\n\t},\r\n\tvisit: function (geom) {\r\n\t\tvar elementEnv = geom.getEnvelopeInternal();\r\n\t\tif (!this.rectEnv.intersects(elementEnv)) return null;\r\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\r\n\t\tthis.checkIntersectionWithLineStrings(lines);\r\n\t},\r\n\tcheckIntersectionWithLineStrings: function (lines) {\r\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\r\n\t\t\tvar testLine = i.next();\r\n\t\t\tthis.checkIntersectionWithSegments(testLine);\r\n\t\t\tif (this.hasIntersection) return null;\r\n\t\t}\r\n\t},\r\n\tcheckIntersectionWithSegments: function (testLine) {\r\n\t\tvar seq1 = testLine.getCoordinateSequence();\r\n\t\tfor (var j = 1; j < seq1.size(); j++) {\r\n\t\t\tseq1.getCoordinate(j - 1, this.p0);\r\n\t\t\tseq1.getCoordinate(j, this.p1);\r\n\t\t\tif (this.rectIntersector.intersects(this.p0, this.p1)) {\r\n\t\t\t\tthis.hasIntersection = true;\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RectangleIntersectsSegmentVisitor;\r\n\t}\r\n});\r\n","import Geometry from '../../geom/Geometry';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport RelateComputer from './RelateComputer';\r\nimport BoundaryNodeRule from '../../algorithm/BoundaryNodeRule';\r\nimport extend from '../../../../../extend';\r\nimport GeometryGraphOperation from '../GeometryGraphOperation';\r\nimport RectangleContains from '../predicate/RectangleContains';\r\nimport inherits from '../../../../../inherits';\r\nimport RectangleIntersects from '../predicate/RectangleIntersects';\r\nexport default function RelateOp() {\r\n\tthis._relate = null;\r\n\tif (arguments.length === 2) {\r\n\t\tlet g0 = arguments[0], g1 = arguments[1];\r\n\t\tGeometryGraphOperation.call(this, g0, g1);\r\n\t\tthis._relate = new RelateComputer(this.arg);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\r\n\t\tGeometryGraphOperation.call(this, g0, g1, boundaryNodeRule);\r\n\t\tthis._relate = new RelateComputer(this.arg);\r\n\t}\r\n}\r\ninherits(RelateOp, GeometryGraphOperation);\r\nextend(RelateOp.prototype, {\r\n\tgetIntersectionMatrix: function () {\r\n\t\treturn this._relate.computeIM();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn RelateOp;\r\n\t}\r\n});\r\nRelateOp.covers = function (g1, g2) {\r\n\tif (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false;\r\n\tif (g1.isRectangle()) {\r\n\t\treturn true;\r\n\t}\r\n\treturn RelateOp.relate(g1, g2).isCovers();\r\n};\r\nRelateOp.intersects = function (g1, g2) {\r\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\r\n\tif (g1.isRectangle()) {\r\n\t\treturn RectangleIntersects.intersects(g1, g2);\r\n\t}\r\n\tif (g2.isRectangle()) {\r\n\t\treturn RectangleIntersects.intersects(g2, g1);\r\n\t}\r\n\treturn RelateOp.relate(g1, g2).isIntersects();\r\n};\r\nRelateOp.touches = function (g1, g2) {\r\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\r\n\treturn RelateOp.relate(g1, g2).isTouches(g1.getDimension(), g2.getDimension());\r\n};\r\nRelateOp.within = function (g1, g2) {\r\n\treturn g2.contains(g1);\r\n};\r\nRelateOp.coveredBy = function (g1, g2) {\r\n\treturn RelateOp.covers(g2, g1);\r\n};\r\nRelateOp.relate = function () {\r\n\tif (arguments.length === 2) {\r\n\t\tlet a = arguments[0], b = arguments[1];\r\n\t\tvar relOp = new RelateOp(a, b);\r\n\t\tvar im = relOp.getIntersectionMatrix();\r\n\t\treturn im;\r\n\t} else if (arguments.length === 3) {\r\n\t\tif (typeof arguments[2] === \"string\" && (arguments[0] instanceof Geometry && arguments[1] instanceof Geometry)) {\r\n\t\t\tlet g1 = arguments[0], g2 = arguments[1], intersectionPattern = arguments[2];\r\n\t\t\treturn RelateOp.relateWithCheck(g1, g2).matches(intersectionPattern);\r\n\t\t} else if (hasInterface(arguments[2], BoundaryNodeRule) && (arguments[0] instanceof Geometry && arguments[1] instanceof Geometry)) {\r\n\t\t\tlet a = arguments[0], b = arguments[1], boundaryNodeRule = arguments[2];\r\n\t\t\tvar relOp = new RelateOp(a, b, boundaryNodeRule);\r\n\t\t\tvar im = relOp.getIntersectionMatrix();\r\n\t\t\treturn im;\r\n\t\t}\r\n\t}\r\n};\r\nRelateOp.overlaps = function (g1, g2) {\r\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\r\n\treturn RelateOp.relate(g1, g2).isOverlaps(g1.getDimension(), g2.getDimension());\r\n};\r\nRelateOp.disjoint = function (g1, g2) {\r\n\treturn !g1.intersects(g2);\r\n};\r\nRelateOp.relateWithCheck = function (g1, g2) {\r\n\tg1.checkNotGeometryCollection(g1);\r\n\tg1.checkNotGeometryCollection(g2);\r\n\treturn RelateOp.relate(g1, g2);\r\n};\r\nRelateOp.crosses = function (g1, g2) {\r\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\r\n\treturn RelateOp.relate(g1, g2).isCrosses(g1.getDimension(), g2.getDimension());\r\n};\r\nRelateOp.contains = function (g1, g2) {\r\n\tif (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false;\r\n\tif (g1.isRectangle()) {\r\n\t\treturn RectangleContains.contains(g1, g2);\r\n\t}\r\n\treturn RelateOp.relate(g1, g2).isContains();\r\n};\r\n","import extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nexport default function GeometryCombiner() {\r\n\tthis.geomFactory = null;\r\n\tthis.skipEmpty = false;\r\n\tthis.inputGeoms = null;\r\n\tlet geoms = arguments[0];\r\n\tthis.geomFactory = GeometryCombiner.extractFactory(geoms);\r\n\tthis.inputGeoms = geoms;\r\n}\r\nextend(GeometryCombiner.prototype, {\r\n\textractElements: function (geom, elems) {\r\n\t\tif (geom === null) return null;\r\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\r\n\t\t\tvar elemGeom = geom.getGeometryN(i);\r\n\t\t\tif (this.skipEmpty && elemGeom.isEmpty()) continue;\r\n\t\t\telems.add(elemGeom);\r\n\t\t}\r\n\t},\r\n\tcombine: function () {\r\n\t\tvar elems = new ArrayList();\r\n\t\tfor (var i = this.inputGeoms.iterator(); i.hasNext(); ) {\r\n\t\t\tvar g = i.next();\r\n\t\t\tthis.extractElements(g, elems);\r\n\t\t}\r\n\t\tif (elems.size() === 0) {\r\n\t\t\tif (this.geomFactory !== null) {\r\n\t\t\t\treturn this.geomFactory.createGeometryCollection(null);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.geomFactory.buildGeometry(elems);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryCombiner;\r\n\t}\r\n});\r\nGeometryCombiner.combine = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet geoms = arguments[0];\r\n\t\tvar combiner = new GeometryCombiner(geoms);\r\n\t\treturn combiner.combine();\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet g0 = arguments[0], g1 = arguments[1];\r\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\r\n\t\treturn combiner.combine();\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet g0 = arguments[0], g1 = arguments[1], g2 = arguments[2];\r\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2));\r\n\t\treturn combiner.combine();\r\n\t}\r\n};\r\nGeometryCombiner.extractFactory = function (geoms) {\r\n\tif (geoms.isEmpty()) return null;\r\n\treturn geoms.iterator().next().getFactory();\r\n};\r\nGeometryCombiner.createList = function () {\r\n\tif (arguments.length === 2) {\r\n\t\tlet obj0 = arguments[0], obj1 = arguments[1];\r\n\t\tvar list = new ArrayList();\r\n\t\tlist.add(obj0);\r\n\t\tlist.add(obj1);\r\n\t\treturn list;\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet obj0 = arguments[0], obj1 = arguments[1], obj2 = arguments[2];\r\n\t\tvar list = new ArrayList();\r\n\t\tlist.add(obj0);\r\n\t\tlist.add(obj1);\r\n\t\tlist.add(obj2);\r\n\t\treturn list;\r\n\t}\r\n};\r\n","import PointLocator from '../../algorithm/PointLocator';\r\nimport Location from '../../geom/Location';\r\nimport TreeSet from '../../../../../java/util/TreeSet';\r\nimport extend from '../../../../../extend';\r\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\r\nimport CoordinateArrays from '../../geom/CoordinateArrays';\r\nexport default function PointGeometryUnion() {\r\n\tthis.pointGeom = null;\r\n\tthis.otherGeom = null;\r\n\tthis.geomFact = null;\r\n\tlet pointGeom = arguments[0], otherGeom = arguments[1];\r\n\tthis.pointGeom = pointGeom;\r\n\tthis.otherGeom = otherGeom;\r\n\tthis.geomFact = otherGeom.getFactory();\r\n}\r\nextend(PointGeometryUnion.prototype, {\r\n\tunion: function () {\r\n\t\tvar locater = new PointLocator();\r\n\t\tvar exteriorCoords = new TreeSet();\r\n\t\tfor (var i = 0; i < this.pointGeom.getNumGeometries(); i++) {\r\n\t\t\tvar point = this.pointGeom.getGeometryN(i);\r\n\t\t\tvar coord = point.getCoordinate();\r\n\t\t\tvar loc = locater.locate(coord, this.otherGeom);\r\n\t\t\tif (loc === Location.EXTERIOR) exteriorCoords.add(coord);\r\n\t\t}\r\n\t\tif (exteriorCoords.size() === 0) return this.otherGeom;\r\n\t\tvar ptComp = null;\r\n\t\tvar coords = CoordinateArrays.toCoordinateArray(exteriorCoords);\r\n\t\tif (coords.length === 1) {\r\n\t\t\tptComp = this.geomFact.createPoint(coords[0]);\r\n\t\t} else {\r\n\t\t\tptComp = this.geomFact.createMultiPointFromCoords(coords);\r\n\t\t}\r\n\t\treturn GeometryCombiner.combine(ptComp, this.otherGeom);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PointGeometryUnion;\r\n\t}\r\n});\r\nPointGeometryUnion.union = function (pointGeom, otherGeom) {\r\n\tvar unioner = new PointGeometryUnion(pointGeom, otherGeom);\r\n\treturn unioner.union();\r\n};\r\n","import extend from '../../../../../extend';\r\nimport GeometryCollection from '../GeometryCollection';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport GeometryFilter from '../GeometryFilter';\r\nexport default function GeometryExtracter() {\r\n\tthis.sortIndex = -1;\r\n\tthis.comps = null;\r\n\tlet sortIndex = arguments[0], comps = arguments[1];\r\n\tthis.sortIndex = sortIndex;\r\n\tthis.comps = comps;\r\n}\r\nextend(GeometryExtracter.prototype, {\r\n\tfilter: function (geom) {\r\n\t\tif (this.sortIndex === -1 || geom.getSortIndex() === this.sortIndex) this.comps.add(geom);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryExtracter;\r\n\t}\r\n});\r\nGeometryExtracter.extract = function () {\r\n\tif (arguments.length === 2) {\r\n\t\tlet geom = arguments[0], sortIndex = arguments[1];\r\n\t\treturn GeometryExtracter.extract(geom, sortIndex, new ArrayList());\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet geom = arguments[0], sortIndex = arguments[1], list = arguments[2];\r\n\t\tif (geom.getSortIndex() === sortIndex) {\r\n\t\t\tlist.add(geom);\r\n\t\t} else if (geom instanceof GeometryCollection) {\r\n\t\t\tgeom.apply(new GeometryExtracter(sortIndex, list));\r\n\t\t}\r\n\t\treturn list;\r\n\t}\r\n};\r\n","import PolygonExtracter from '../../geom/util/PolygonExtracter';\r\nimport STRtree from '../../index/strtree/STRtree';\r\nimport Geometry from '../../geom/Geometry';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport GeometryFactory from '../../geom/GeometryFactory';\r\nimport extend from '../../../../../extend';\r\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\r\nimport Polygonal from '../../geom/Polygonal';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport List from '../../../../../java/util/List';\r\nexport default function CascadedPolygonUnion() {\r\n\tthis.inputPolys = null;\r\n\tthis.geomFactory = null;\r\n\tlet polys = arguments[0];\r\n\tthis.inputPolys = polys;\r\n\tif (this.inputPolys === null) this.inputPolys = new ArrayList();\r\n}\r\nextend(CascadedPolygonUnion.prototype, {\r\n\treduceToGeometries: function (geomTree) {\r\n\t\tvar geoms = new ArrayList();\r\n\t\tfor (var i = geomTree.iterator(); i.hasNext(); ) {\r\n\t\t\tvar o = i.next();\r\n\t\t\tvar geom = null;\r\n\t\t\tif (hasInterface(o, List)) {\r\n\t\t\t\tgeom = this.unionTree(o);\r\n\t\t\t} else if (o instanceof Geometry) {\r\n\t\t\t\tgeom = o;\r\n\t\t\t}\r\n\t\t\tgeoms.add(geom);\r\n\t\t}\r\n\t\treturn geoms;\r\n\t},\r\n\textractByEnvelope: function (env, geom, disjointGeoms) {\r\n\t\tvar intersectingGeoms = new ArrayList();\r\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\r\n\t\t\tvar elem = geom.getGeometryN(i);\r\n\t\t\tif (elem.getEnvelopeInternal().intersects(env)) intersectingGeoms.add(elem); else disjointGeoms.add(elem);\r\n\t\t}\r\n\t\treturn this.geomFactory.buildGeometry(intersectingGeoms);\r\n\t},\r\n\tunionOptimized: function (g0, g1) {\r\n\t\tvar g0Env = g0.getEnvelopeInternal();\r\n\t\tvar g1Env = g1.getEnvelopeInternal();\r\n\t\tif (!g0Env.intersects(g1Env)) {\r\n\t\t\tvar combo = GeometryCombiner.combine(g0, g1);\r\n\t\t\treturn combo;\r\n\t\t}\r\n\t\tif (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) return this.unionActual(g0, g1);\r\n\t\tvar commonEnv = g0Env.intersection(g1Env);\r\n\t\treturn this.unionUsingEnvelopeIntersection(g0, g1, commonEnv);\r\n\t},\r\n\tunion: function () {\r\n\t\tif (this.inputPolys === null) throw new IllegalStateException(\"union() method cannot be called twice\");\r\n\t\tif (this.inputPolys.isEmpty()) return null;\r\n\t\tthis.geomFactory = this.inputPolys.iterator().next().getFactory();\r\n\t\tvar index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\r\n\t\tfor (var i = this.inputPolys.iterator(); i.hasNext(); ) {\r\n\t\t\tvar item = i.next();\r\n\t\t\tindex.insert(item.getEnvelopeInternal(), item);\r\n\t\t}\r\n\t\tthis.inputPolys = null;\r\n\t\tvar itemTree = index.itemsTree();\r\n\t\tvar unionAll = this.unionTree(itemTree);\r\n\t\treturn unionAll;\r\n\t},\r\n\tbinaryUnion: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet geoms = arguments[0];\r\n\t\t\treturn this.binaryUnion(geoms, 0, geoms.size());\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet geoms = arguments[0], start = arguments[1], end = arguments[2];\r\n\t\t\tif (end - start <= 1) {\r\n\t\t\t\tvar g0 = CascadedPolygonUnion.getGeometry(geoms, start);\r\n\t\t\t\treturn this.unionSafe(g0, null);\r\n\t\t\t} else if (end - start === 2) {\r\n\t\t\t\treturn this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1));\r\n\t\t\t} else {\r\n\t\t\t\tvar mid = Math.trunc((end + start) / 2);\r\n\t\t\t\tvar g0 = this.binaryUnion(geoms, start, mid);\r\n\t\t\t\tvar g1 = this.binaryUnion(geoms, mid, end);\r\n\t\t\t\treturn this.unionSafe(g0, g1);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\trepeatedUnion: function (geoms) {\r\n\t\tvar union = null;\r\n\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\r\n\t\t\tvar g = i.next();\r\n\t\t\tif (union === null) union = g.copy(); else union = union.union(g);\r\n\t\t}\r\n\t\treturn union;\r\n\t},\r\n\tunionSafe: function (g0, g1) {\r\n\t\tif (g0 === null && g1 === null) return null;\r\n\t\tif (g0 === null) return g1.copy();\r\n\t\tif (g1 === null) return g0.copy();\r\n\t\treturn this.unionOptimized(g0, g1);\r\n\t},\r\n\tunionActual: function (g0, g1) {\r\n\t\treturn CascadedPolygonUnion.restrictToPolygons(g0.union(g1));\r\n\t},\r\n\tunionTree: function (geomTree) {\r\n\t\tvar geoms = this.reduceToGeometries(geomTree);\r\n\t\tvar union = this.binaryUnion(geoms);\r\n\t\treturn union;\r\n\t},\r\n\tunionUsingEnvelopeIntersection: function (g0, g1, common) {\r\n\t\tvar disjointPolys = new ArrayList();\r\n\t\tvar g0Int = this.extractByEnvelope(common, g0, disjointPolys);\r\n\t\tvar g1Int = this.extractByEnvelope(common, g1, disjointPolys);\r\n\t\tvar union = this.unionActual(g0Int, g1Int);\r\n\t\tdisjointPolys.add(union);\r\n\t\tvar overallUnion = GeometryCombiner.combine(disjointPolys);\r\n\t\treturn overallUnion;\r\n\t},\r\n\tbufferUnion: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet geoms = arguments[0];\r\n\t\t\tvar factory = geoms.get(0).getFactory();\r\n\t\t\tvar gColl = factory.buildGeometry(geoms);\r\n\t\t\tvar unionAll = gColl.buffer(0.0);\r\n\t\t\treturn unionAll;\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet g0 = arguments[0], g1 = arguments[1];\r\n\t\t\tvar factory = g0.getFactory();\r\n\t\t\tvar gColl = factory.createGeometryCollection([g0, g1]);\r\n\t\t\tvar unionAll = gColl.buffer(0.0);\r\n\t\t\treturn unionAll;\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn CascadedPolygonUnion;\r\n\t}\r\n});\r\nCascadedPolygonUnion.restrictToPolygons = function (g) {\r\n\tif (hasInterface(g, Polygonal)) {\r\n\t\treturn g;\r\n\t}\r\n\tvar polygons = PolygonExtracter.getPolygons(g);\r\n\tif (polygons.size() === 1) return polygons.get(0);\r\n\treturn g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons));\r\n};\r\nCascadedPolygonUnion.getGeometry = function (list, index) {\r\n\tif (index >= list.size()) return null;\r\n\treturn list.get(index);\r\n};\r\nCascadedPolygonUnion.union = function (polys) {\r\n\tvar op = new CascadedPolygonUnion(polys);\r\n\treturn op.union();\r\n};\r\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4;\r\n","import Geometry from '../../geom/Geometry';\r\nimport PointGeometryUnion from './PointGeometryUnion';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport Collection from '../../../../../java/util/Collection';\r\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\r\nimport extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport GeometryExtracter from '../../geom/util/GeometryExtracter';\r\nimport OverlayOp from '../overlay/OverlayOp';\r\nimport CascadedPolygonUnion from './CascadedPolygonUnion';\r\nexport default function UnaryUnionOp() {\r\n\tthis.polygons = new ArrayList();\r\n\tthis.lines = new ArrayList();\r\n\tthis.points = new ArrayList();\r\n\tthis.geomFact = null;\r\n\tif (arguments.length === 1) {\r\n\t\tif (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet geoms = arguments[0];\r\n\t\t\tthis.extract(geoms);\r\n\t\t} else if (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geom = arguments[0];\r\n\t\t\tthis.extract(geom);\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet geoms = arguments[0], geomFact = arguments[1];\r\n\t\tthis.geomFact = geomFact;\r\n\t\tthis.extract(geoms);\r\n\t}\r\n}\r\nextend(UnaryUnionOp.prototype, {\r\n\tunionNoOpt: function (g0) {\r\n\t\tvar empty = this.geomFact.createPoint();\r\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION);\r\n\t},\r\n\tunionWithNull: function (g0, g1) {\r\n\t\tif (g0 === null && g1 === null) return null;\r\n\t\tif (g1 === null) return g0;\r\n\t\tif (g0 === null) return g1;\r\n\t\treturn g0.union(g1);\r\n\t},\r\n\textract: function () {\r\n\t\tif (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet geoms = arguments[0];\r\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\r\n\t\t\t\tvar geom = i.next();\r\n\t\t\t\tthis.extract(geom);\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geom = arguments[0];\r\n\t\t\tif (this.geomFact === null) this.geomFact = geom.getFactory();\r\n\t\t\tGeometryExtracter.extract(geom, Geometry.SORTINDEX_POLYGON, this.polygons);\r\n\t\t\tGeometryExtracter.extract(geom, Geometry.SORTINDEX_LINESTRING, this.lines);\r\n\t\t\tGeometryExtracter.extract(geom, Geometry.SORTINDEX_POINT, this.points);\r\n\t\t}\r\n\t},\r\n\tunion: function () {\r\n\t\tif (this.geomFact === null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar unionPoints = null;\r\n\t\tif (this.points.size() > 0) {\r\n\t\t\tvar ptGeom = this.geomFact.buildGeometry(this.points);\r\n\t\t\tunionPoints = this.unionNoOpt(ptGeom);\r\n\t\t}\r\n\t\tvar unionLines = null;\r\n\t\tif (this.lines.size() > 0) {\r\n\t\t\tvar lineGeom = this.geomFact.buildGeometry(this.lines);\r\n\t\t\tunionLines = this.unionNoOpt(lineGeom);\r\n\t\t}\r\n\t\tvar unionPolygons = null;\r\n\t\tif (this.polygons.size() > 0) {\r\n\t\t\tunionPolygons = CascadedPolygonUnion.union(this.polygons);\r\n\t\t}\r\n\t\tvar unionLA = this.unionWithNull(unionLines, unionPolygons);\r\n\t\tvar union = null;\r\n\t\tif (unionPoints === null) union = unionLA; else if (unionLA === null) union = unionPoints; else union = PointGeometryUnion.union(unionPoints, unionLA);\r\n\t\tif (union === null) return this.geomFact.createGeometryCollection();\r\n\t\treturn union;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn UnaryUnionOp;\r\n\t}\r\n});\r\nUnaryUnionOp.union = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tif (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet geoms = arguments[0];\r\n\t\t\tvar op = new UnaryUnionOp(geoms);\r\n\t\t\treturn op.union();\r\n\t\t} else if (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geom = arguments[0];\r\n\t\t\tvar op = new UnaryUnionOp(geom);\r\n\t\t\treturn op.union();\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet geoms = arguments[0], geomFact = arguments[1];\r\n\t\tvar op = new UnaryUnionOp(geoms, geomFact);\r\n\t\treturn op.union();\r\n\t}\r\n};\r\n","import LineString from '../geom/LineString';\r\nimport CoordinateList from '../geom/CoordinateList';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport GeometryEditor from '../geom/util/GeometryEditor';\r\nimport LinearRing from '../geom/LinearRing';\r\nimport extend from '../../../../extend';\r\nimport inherits from '../../../../inherits';\r\nexport default function PrecisionReducerCoordinateOperation() {\r\n\tGeometryEditor.CoordinateOperation.apply(this);\r\n\tthis.targetPM = null;\r\n\tthis.removeCollapsed = true;\r\n\tlet targetPM = arguments[0], removeCollapsed = arguments[1];\r\n\tthis.targetPM = targetPM;\r\n\tthis.removeCollapsed = removeCollapsed;\r\n}\r\ninherits(PrecisionReducerCoordinateOperation, GeometryEditor.CoordinateOperation);\r\nextend(PrecisionReducerCoordinateOperation.prototype, {\r\n\teditCoordinates: function (coordinates, geom) {\r\n\t\tif (coordinates.length === 0) return null;\r\n\t\tvar reducedCoords = new Array(coordinates.length).fill(null);\r\n\t\tfor (var i = 0; i < coordinates.length; i++) {\r\n\t\t\tvar coord = new Coordinate(coordinates[i]);\r\n\t\t\tthis.targetPM.makePrecise(coord);\r\n\t\t\treducedCoords[i] = coord;\r\n\t\t}\r\n\t\tvar noRepeatedCoordList = new CoordinateList(reducedCoords, false);\r\n\t\tvar noRepeatedCoords = noRepeatedCoordList.toCoordinateArray();\r\n\t\tvar minLength = 0;\r\n\t\tif (geom instanceof LineString) minLength = 2;\r\n\t\tif (geom instanceof LinearRing) minLength = 4;\r\n\t\tvar collapsedCoords = reducedCoords;\r\n\t\tif (this.removeCollapsed) collapsedCoords = null;\r\n\t\tif (noRepeatedCoords.length < minLength) {\r\n\t\t\treturn collapsedCoords;\r\n\t\t}\r\n\t\treturn noRepeatedCoords;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn PrecisionReducerCoordinateOperation;\r\n\t}\r\n});\r\n","import hasInterface from '../../../../hasInterface';\r\nimport GeometryFactory from '../geom/GeometryFactory';\r\nimport GeometryEditor from '../geom/util/GeometryEditor';\r\nimport extend from '../../../../extend';\r\nimport Polygonal from '../geom/Polygonal';\r\nimport PrecisionReducerCoordinateOperation from './PrecisionReducerCoordinateOperation';\r\nexport default function GeometryPrecisionReducer() {\r\n\tthis.targetPM = null;\r\n\tthis.removeCollapsed = true;\r\n\tthis.changePrecisionModel = false;\r\n\tthis.isPointwise = false;\r\n\tlet pm = arguments[0];\r\n\tthis.targetPM = pm;\r\n}\r\nextend(GeometryPrecisionReducer.prototype, {\r\n\tfixPolygonalTopology: function (geom) {\r\n\t\tvar geomToBuffer = geom;\r\n\t\tif (!this.changePrecisionModel) {\r\n\t\t\tgeomToBuffer = this.changePM(geom, this.targetPM);\r\n\t\t}\r\n\t\tvar bufGeom = geomToBuffer.buffer(0);\r\n\t\tvar finalGeom = bufGeom;\r\n\t\tif (!this.changePrecisionModel) {\r\n\t\t\tfinalGeom = this.changePM(bufGeom, geom.getPrecisionModel());\r\n\t\t}\r\n\t\treturn finalGeom;\r\n\t},\r\n\treducePointwise: function (geom) {\r\n\t\tvar geomEdit = null;\r\n\t\tif (this.changePrecisionModel) {\r\n\t\t\tvar newFactory = this.createFactory(geom.getFactory(), this.targetPM);\r\n\t\t\tgeomEdit = new GeometryEditor(newFactory);\r\n\t\t} else geomEdit = new GeometryEditor();\r\n\t\tvar finalRemoveCollapsed = this.removeCollapsed;\r\n\t\tif (geom.getDimension() >= 2) finalRemoveCollapsed = true;\r\n\t\tvar reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this.targetPM, finalRemoveCollapsed));\r\n\t\treturn reduceGeom;\r\n\t},\r\n\tchangePM: function (geom, newPM) {\r\n\t\tvar geomEditor = this.createEditor(geom.getFactory(), newPM);\r\n\t\treturn geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation());\r\n\t},\r\n\tsetRemoveCollapsedComponents: function (removeCollapsed) {\r\n\t\tthis.removeCollapsed = removeCollapsed;\r\n\t},\r\n\tcreateFactory: function (inputFactory, pm) {\r\n\t\tvar newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory());\r\n\t\treturn newFactory;\r\n\t},\r\n\tsetChangePrecisionModel: function (changePrecisionModel) {\r\n\t\tthis.changePrecisionModel = changePrecisionModel;\r\n\t},\r\n\treduce: function (geom) {\r\n\t\tvar reducePW = this.reducePointwise(geom);\r\n\t\tif (this.isPointwise) return reducePW;\r\n\t\tif (!hasInterface(reducePW, Polygonal)) return reducePW;\r\n\t\tif (reducePW.isValid()) return reducePW;\r\n\t\treturn this.fixPolygonalTopology(reducePW);\r\n\t},\r\n\tsetPointwise: function (isPointwise) {\r\n\t\tthis.isPointwise = isPointwise;\r\n\t},\r\n\tcreateEditor: function (geomFactory, newPM) {\r\n\t\tif (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor();\r\n\t\tvar newFactory = this.createFactory(geomFactory, newPM);\r\n\t\tvar geomEdit = new GeometryEditor(newFactory);\r\n\t\treturn geomEdit;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn GeometryPrecisionReducer;\r\n\t}\r\n});\r\nGeometryPrecisionReducer.reduce = function (g, precModel) {\r\n\tvar reducer = new GeometryPrecisionReducer(precModel);\r\n\treturn reducer.reduce(g);\r\n};\r\nGeometryPrecisionReducer.reducePointwise = function (g, precModel) {\r\n\tvar reducer = new GeometryPrecisionReducer(precModel);\r\n\treducer.setPointwise(true);\r\n\treturn reducer.reduce(g);\r\n};\r\n","import CoordinateList from '../geom/CoordinateList';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport LineSegment from '../geom/LineSegment';\r\nexport default function DouglasPeuckerLineSimplifier() {\r\n\tthis.pts = null;\r\n\tthis.usePt = null;\r\n\tthis.distanceTolerance = null;\r\n\tthis.seg = new LineSegment();\r\n\tlet pts = arguments[0];\r\n\tthis.pts = pts;\r\n}\r\nextend(DouglasPeuckerLineSimplifier.prototype, {\r\n\tsimplifySection: function (i, j) {\r\n\t\tif (i + 1 === j) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tthis.seg.p0 = this.pts[i];\r\n\t\tthis.seg.p1 = this.pts[j];\r\n\t\tvar maxDistance = -1.0;\r\n\t\tvar maxIndex = i;\r\n\t\tfor (var k = i + 1; k < j; k++) {\r\n\t\t\tvar distance = this.seg.distance(this.pts[k]);\r\n\t\t\tif (distance > maxDistance) {\r\n\t\t\t\tmaxDistance = distance;\r\n\t\t\t\tmaxIndex = k;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (maxDistance <= this.distanceTolerance) {\r\n\t\t\tfor (var k = i + 1; k < j; k++) {\r\n\t\t\t\tthis.usePt[k] = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.simplifySection(i, maxIndex);\r\n\t\t\tthis.simplifySection(maxIndex, j);\r\n\t\t}\r\n\t},\r\n\tsetDistanceTolerance: function (distanceTolerance) {\r\n\t\tthis.distanceTolerance = distanceTolerance;\r\n\t},\r\n\tsimplify: function () {\r\n\t\tthis.usePt = new Array(this.pts.length).fill(null);\r\n\t\tfor (var i = 0; i < this.pts.length; i++) {\r\n\t\t\tthis.usePt[i] = true;\r\n\t\t}\r\n\t\tthis.simplifySection(0, this.pts.length - 1);\r\n\t\tvar coordList = new CoordinateList();\r\n\t\tfor (var i = 0; i < this.pts.length; i++) {\r\n\t\t\tif (this.usePt[i]) coordList.add(new Coordinate(this.pts[i]));\r\n\t\t}\r\n\t\treturn coordList.toCoordinateArray();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DouglasPeuckerLineSimplifier;\r\n\t}\r\n});\r\nDouglasPeuckerLineSimplifier.simplify = function (pts, distanceTolerance) {\r\n\tvar simp = new DouglasPeuckerLineSimplifier(pts);\r\n\tsimp.setDistanceTolerance(distanceTolerance);\r\n\treturn simp.simplify();\r\n};\r\n","import DouglasPeuckerLineSimplifier from './DouglasPeuckerLineSimplifier';\r\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport Polygon from '../geom/Polygon';\r\nimport LinearRing from '../geom/LinearRing';\r\nimport extend from '../../../../extend';\r\nimport MultiPolygon from '../geom/MultiPolygon';\r\nimport inherits from '../../../../inherits';\r\nexport default function DouglasPeuckerSimplifier() {\r\n\tthis.inputGeom = null;\r\n\tthis.distanceTolerance = null;\r\n\tthis.isEnsureValidTopology = true;\r\n\tlet inputGeom = arguments[0];\r\n\tthis.inputGeom = inputGeom;\r\n}\r\nextend(DouglasPeuckerSimplifier.prototype, {\r\n\tsetEnsureValid: function (isEnsureValidTopology) {\r\n\t\tthis.isEnsureValidTopology = isEnsureValidTopology;\r\n\t},\r\n\tgetResultGeometry: function () {\r\n\t\tif (this.inputGeom.isEmpty()) return this.inputGeom.copy();\r\n\t\treturn new DPTransformer(this.isEnsureValidTopology, this.distanceTolerance).transform(this.inputGeom);\r\n\t},\r\n\tsetDistanceTolerance: function (distanceTolerance) {\r\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\r\n\t\tthis.distanceTolerance = distanceTolerance;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DouglasPeuckerSimplifier;\r\n\t}\r\n});\r\nDouglasPeuckerSimplifier.simplify = function (geom, distanceTolerance) {\r\n\tvar tss = new DouglasPeuckerSimplifier(geom);\r\n\ttss.setDistanceTolerance(distanceTolerance);\r\n\treturn tss.getResultGeometry();\r\n};\r\nfunction DPTransformer() {\r\n\tGeometryTransformer.apply(this);\r\n\tthis.isEnsureValidTopology = true;\r\n\tthis.distanceTolerance = null;\r\n\tlet isEnsureValidTopology = arguments[0], distanceTolerance = arguments[1];\r\n\tthis.isEnsureValidTopology = isEnsureValidTopology;\r\n\tthis.distanceTolerance = distanceTolerance;\r\n}\r\ninherits(DPTransformer, GeometryTransformer);\r\nextend(DPTransformer.prototype, {\r\n\ttransformPolygon: function (geom, parent) {\r\n\t\tif (geom.isEmpty()) return null;\r\n\t\tvar rawGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\r\n\t\tif (parent instanceof MultiPolygon) {\r\n\t\t\treturn rawGeom;\r\n\t\t}\r\n\t\treturn this.createValidArea(rawGeom);\r\n\t},\r\n\tcreateValidArea: function (rawAreaGeom) {\r\n\t\tif (this.isEnsureValidTopology) return rawAreaGeom.buffer(0.0);\r\n\t\treturn rawAreaGeom;\r\n\t},\r\n\ttransformCoordinates: function (coords, parent) {\r\n\t\tvar inputPts = coords.toCoordinateArray();\r\n\t\tvar newPts = null;\r\n\t\tif (inputPts.length === 0) {\r\n\t\t\tnewPts = new Array(0).fill(null);\r\n\t\t} else {\r\n\t\t\tnewPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this.distanceTolerance);\r\n\t\t}\r\n\t\treturn this.factory.getCoordinateSequenceFactory().create(newPts);\r\n\t},\r\n\ttransformMultiPolygon: function (geom, parent) {\r\n\t\tvar rawGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\r\n\t\treturn this.createValidArea(rawGeom);\r\n\t},\r\n\ttransformLinearRing: function (geom, parent) {\r\n\t\tvar removeDegenerateRings = parent instanceof Polygon;\r\n\t\tvar simpResult = GeometryTransformer.prototype.transformLinearRing.call(this, geom, parent);\r\n\t\tif (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null;\r\n\t\t;\r\n\t\treturn simpResult;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DPTransformer;\r\n\t}\r\n});\r\nDouglasPeuckerSimplifier.DPTransformer = DPTransformer;\r\n","import extend from '../../../../extend';\r\nimport LineSegment from '../geom/LineSegment';\r\nimport inherits from '../../../../inherits';\r\nexport default function TaggedLineSegment() {\r\n\tthis.parent = null;\r\n\tthis.index = null;\r\n\tif (arguments.length === 2) {\r\n\t\tlet p0 = arguments[0], p1 = arguments[1];\r\n\t\tTaggedLineSegment.call(this, p0, p1, null, -1);\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet p0 = arguments[0], p1 = arguments[1], parent = arguments[2], index = arguments[3];\r\n\t\tLineSegment.call(this, p0, p1);\r\n\t\tthis.parent = parent;\r\n\t\tthis.index = index;\r\n\t}\r\n}\r\ninherits(TaggedLineSegment, LineSegment);\r\nextend(TaggedLineSegment.prototype, {\r\n\tgetIndex: function () {\r\n\t\treturn this.index;\r\n\t},\r\n\tgetParent: function () {\r\n\t\treturn this.parent;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TaggedLineSegment;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport TaggedLineSegment from './TaggedLineSegment';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function TaggedLineString() {\r\n\tthis.parentLine = null;\r\n\tthis.segs = null;\r\n\tthis.resultSegs = new ArrayList();\r\n\tthis.minimumSize = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet parentLine = arguments[0];\r\n\t\tTaggedLineString.call(this, parentLine, 2);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet parentLine = arguments[0], minimumSize = arguments[1];\r\n\t\tthis.parentLine = parentLine;\r\n\t\tthis.minimumSize = minimumSize;\r\n\t\tthis.init();\r\n\t}\r\n}\r\nextend(TaggedLineString.prototype, {\r\n\taddToResult: function (seg) {\r\n\t\tthis.resultSegs.add(seg);\r\n\t},\r\n\tasLineString: function () {\r\n\t\treturn this.parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this.resultSegs));\r\n\t},\r\n\tgetResultSize: function () {\r\n\t\tvar resultSegsSize = this.resultSegs.size();\r\n\t\treturn resultSegsSize === 0 ? 0 : resultSegsSize + 1;\r\n\t},\r\n\tgetParent: function () {\r\n\t\treturn this.parentLine;\r\n\t},\r\n\tgetSegment: function (i) {\r\n\t\treturn this.segs[i];\r\n\t},\r\n\tgetParentCoordinates: function () {\r\n\t\treturn this.parentLine.getCoordinates();\r\n\t},\r\n\tgetMinimumSize: function () {\r\n\t\treturn this.minimumSize;\r\n\t},\r\n\tasLinearRing: function () {\r\n\t\treturn this.parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this.resultSegs));\r\n\t},\r\n\tgetSegments: function () {\r\n\t\treturn this.segs;\r\n\t},\r\n\tinit: function () {\r\n\t\tvar pts = this.parentLine.getCoordinates();\r\n\t\tthis.segs = new Array(pts.length - 1).fill(null);\r\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\r\n\t\t\tvar seg = new TaggedLineSegment(pts[i], pts[i + 1], this.parentLine, i);\r\n\t\t\tthis.segs[i] = seg;\r\n\t\t}\r\n\t},\r\n\tgetResultCoordinates: function () {\r\n\t\treturn TaggedLineString.extractCoordinates(this.resultSegs);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TaggedLineString;\r\n\t}\r\n});\r\nTaggedLineString.extractCoordinates = function (segs) {\r\n\tvar pts = new Array(segs.size() + 1).fill(null);\r\n\tvar seg = null;\r\n\tfor (var i = 0; i < segs.size(); i++) {\r\n\t\tseg = segs.get(i);\r\n\t\tpts[i] = seg.p0;\r\n\t}\r\n\tpts[pts.length - 1] = seg.p1;\r\n\treturn pts;\r\n};\r\n","import Quadtree from '../index/quadtree/Quadtree';\r\nimport ItemVisitor from '../index/ItemVisitor';\r\nimport extend from '../../../../extend';\r\nimport LineSegment from '../geom/LineSegment';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Envelope from '../geom/Envelope';\r\nimport TaggedLineString from './TaggedLineString';\r\nexport default function LineSegmentIndex() {\r\n\tthis.index = new Quadtree();\r\n}\r\nextend(LineSegmentIndex.prototype, {\r\n\tremove: function (seg) {\r\n\t\tthis.index.remove(new Envelope(seg.p0, seg.p1), seg);\r\n\t},\r\n\tadd: function () {\r\n\t\tif (arguments[0] instanceof TaggedLineString) {\r\n\t\t\tlet line = arguments[0];\r\n\t\t\tvar segs = line.getSegments();\r\n\t\t\tfor (var i = 0; i < segs.length; i++) {\r\n\t\t\t\tvar seg = segs[i];\r\n\t\t\t\tthis.add(seg);\r\n\t\t\t}\r\n\t\t} else if (arguments[0] instanceof LineSegment) {\r\n\t\t\tlet seg = arguments[0];\r\n\t\t\tthis.index.insert(new Envelope(seg.p0, seg.p1), seg);\r\n\t\t}\r\n\t},\r\n\tquery: function (querySeg) {\r\n\t\tvar env = new Envelope(querySeg.p0, querySeg.p1);\r\n\t\tvar visitor = new LineSegmentVisitor(querySeg);\r\n\t\tthis.index.query(env, visitor);\r\n\t\tvar itemsFound = visitor.getItems();\r\n\t\treturn itemsFound;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineSegmentIndex;\r\n\t}\r\n});\r\nfunction LineSegmentVisitor() {\r\n\tthis.querySeg = null;\r\n\tthis.items = new ArrayList();\r\n\tlet querySeg = arguments[0];\r\n\tthis.querySeg = querySeg;\r\n}\r\nextend(LineSegmentVisitor.prototype, {\r\n\tvisitItem: function (item) {\r\n\t\tvar seg = item;\r\n\t\tif (Envelope.intersects(seg.p0, seg.p1, this.querySeg.p0, this.querySeg.p1)) this.items.add(item);\r\n\t},\r\n\tgetItems: function () {\r\n\t\treturn this.items;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [ItemVisitor];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineSegmentVisitor;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport LineSegment from '../geom/LineSegment';\r\nimport LineSegmentIndex from './LineSegmentIndex';\r\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\r\nexport default function TaggedLineStringSimplifier() {\r\n\tthis.li = new RobustLineIntersector();\r\n\tthis.inputIndex = new LineSegmentIndex();\r\n\tthis.outputIndex = new LineSegmentIndex();\r\n\tthis.line = null;\r\n\tthis.linePts = null;\r\n\tthis.distanceTolerance = 0.0;\r\n\tlet inputIndex = arguments[0], outputIndex = arguments[1];\r\n\tthis.inputIndex = inputIndex;\r\n\tthis.outputIndex = outputIndex;\r\n}\r\nextend(TaggedLineStringSimplifier.prototype, {\r\n\tflatten: function (start, end) {\r\n\t\tvar p0 = this.linePts[start];\r\n\t\tvar p1 = this.linePts[end];\r\n\t\tvar newSeg = new LineSegment(p0, p1);\r\n\t\tthis.remove(this.line, start, end);\r\n\t\tthis.outputIndex.add(newSeg);\r\n\t\treturn newSeg;\r\n\t},\r\n\thasBadIntersection: function (parentLine, sectionIndex, candidateSeg) {\r\n\t\tif (this.hasBadOutputIntersection(candidateSeg)) return true;\r\n\t\tif (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true;\r\n\t\treturn false;\r\n\t},\r\n\tsetDistanceTolerance: function (distanceTolerance) {\r\n\t\tthis.distanceTolerance = distanceTolerance;\r\n\t},\r\n\tsimplifySection: function (i, j, depth) {\r\n\t\tdepth += 1;\r\n\t\tvar sectionIndex = new Array(2).fill(null);\r\n\t\tif (i + 1 === j) {\r\n\t\t\tvar newSeg = this.line.getSegment(i);\r\n\t\t\tthis.line.addToResult(newSeg);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar isValidToSimplify = true;\r\n\t\tif (this.line.getResultSize() < this.line.getMinimumSize()) {\r\n\t\t\tvar worstCaseSize = depth + 1;\r\n\t\t\tif (worstCaseSize < this.line.getMinimumSize()) isValidToSimplify = false;\r\n\t\t}\r\n\t\tvar distance = new Array(1).fill(null);\r\n\t\tvar furthestPtIndex = this.findFurthestPoint(this.linePts, i, j, distance);\r\n\t\tif (distance[0] > this.distanceTolerance) isValidToSimplify = false;\r\n\t\tvar candidateSeg = new LineSegment();\r\n\t\tcandidateSeg.p0 = this.linePts[i];\r\n\t\tcandidateSeg.p1 = this.linePts[j];\r\n\t\tsectionIndex[0] = i;\r\n\t\tsectionIndex[1] = j;\r\n\t\tif (this.hasBadIntersection(this.line, sectionIndex, candidateSeg)) isValidToSimplify = false;\r\n\t\tif (isValidToSimplify) {\r\n\t\t\tvar newSeg = this.flatten(i, j);\r\n\t\t\tthis.line.addToResult(newSeg);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tthis.simplifySection(i, furthestPtIndex, depth);\r\n\t\tthis.simplifySection(furthestPtIndex, j, depth);\r\n\t},\r\n\thasBadOutputIntersection: function (candidateSeg) {\r\n\t\tvar querySegs = this.outputIndex.query(candidateSeg);\r\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\r\n\t\t\tvar querySeg = i.next();\r\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tfindFurthestPoint: function (pts, i, j, maxDistance) {\r\n\t\tvar seg = new LineSegment();\r\n\t\tseg.p0 = pts[i];\r\n\t\tseg.p1 = pts[j];\r\n\t\tvar maxDist = -1.0;\r\n\t\tvar maxIndex = i;\r\n\t\tfor (var k = i + 1; k < j; k++) {\r\n\t\t\tvar midPt = pts[k];\r\n\t\t\tvar distance = seg.distance(midPt);\r\n\t\t\tif (distance > maxDist) {\r\n\t\t\t\tmaxDist = distance;\r\n\t\t\t\tmaxIndex = k;\r\n\t\t\t}\r\n\t\t}\r\n\t\tmaxDistance[0] = maxDist;\r\n\t\treturn maxIndex;\r\n\t},\r\n\tsimplify: function (line) {\r\n\t\tthis.line = line;\r\n\t\tthis.linePts = line.getParentCoordinates();\r\n\t\tthis.simplifySection(0, this.linePts.length - 1, 0);\r\n\t},\r\n\tremove: function (line, start, end) {\r\n\t\tfor (var i = start; i < end; i++) {\r\n\t\t\tvar seg = line.getSegment(i);\r\n\t\t\tthis.inputIndex.remove(seg);\r\n\t\t}\r\n\t},\r\n\thasInteriorIntersection: function (seg0, seg1) {\r\n\t\tthis.li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1);\r\n\t\treturn this.li.isInteriorIntersection();\r\n\t},\r\n\thasBadInputIntersection: function (parentLine, sectionIndex, candidateSeg) {\r\n\t\tvar querySegs = this.inputIndex.query(candidateSeg);\r\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\r\n\t\t\tvar querySeg = i.next();\r\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\r\n\t\t\t\tif (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TaggedLineStringSimplifier;\r\n\t}\r\n});\r\nTaggedLineStringSimplifier.isInLineSection = function (line, sectionIndex, seg) {\r\n\tif (seg.getParent() !== line.getParent()) return false;\r\n\tvar segIndex = seg.getIndex();\r\n\tif (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true;\r\n\treturn false;\r\n};\r\n","import extend from '../../../../extend';\r\nimport TaggedLineStringSimplifier from './TaggedLineStringSimplifier';\r\nimport LineSegmentIndex from './LineSegmentIndex';\r\nexport default function TaggedLinesSimplifier() {\r\n\tthis.inputIndex = new LineSegmentIndex();\r\n\tthis.outputIndex = new LineSegmentIndex();\r\n\tthis.distanceTolerance = 0.0;\r\n}\r\nextend(TaggedLinesSimplifier.prototype, {\r\n\tsetDistanceTolerance: function (distanceTolerance) {\r\n\t\tthis.distanceTolerance = distanceTolerance;\r\n\t},\r\n\tsimplify: function (taggedLines) {\r\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\r\n\t\t\tthis.inputIndex.add(i.next());\r\n\t\t}\r\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\r\n\t\t\tvar tlss = new TaggedLineStringSimplifier(this.inputIndex, this.outputIndex);\r\n\t\t\ttlss.setDistanceTolerance(this.distanceTolerance);\r\n\t\t\ttlss.simplify(i.next());\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TaggedLinesSimplifier;\r\n\t}\r\n});\r\n","import LineString from '../geom/LineString';\r\nimport HashMap from '../../../../java/util/HashMap';\r\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\r\nimport TaggedLinesSimplifier from './TaggedLinesSimplifier';\r\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\r\nimport extend from '../../../../extend';\r\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\r\nimport inherits from '../../../../inherits';\r\nimport TaggedLineString from './TaggedLineString';\r\nexport default function TopologyPreservingSimplifier() {\r\n\tthis.inputGeom = null;\r\n\tthis.lineSimplifier = new TaggedLinesSimplifier();\r\n\tthis.linestringMap = null;\r\n\tlet inputGeom = arguments[0];\r\n\tthis.inputGeom = inputGeom;\r\n}\r\nextend(TopologyPreservingSimplifier.prototype, {\r\n\tgetResultGeometry: function () {\r\n\t\tif (this.inputGeom.isEmpty()) return this.inputGeom.copy();\r\n\t\tthis.linestringMap = new HashMap();\r\n\t\tthis.inputGeom.apply(new LineStringMapBuilderFilter(this));\r\n\t\tthis.lineSimplifier.simplify(this.linestringMap.values());\r\n\t\tvar result = new LineStringTransformer(this.linestringMap).transform(this.inputGeom);\r\n\t\treturn result;\r\n\t},\r\n\tsetDistanceTolerance: function (distanceTolerance) {\r\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\r\n\t\tthis.lineSimplifier.setDistanceTolerance(distanceTolerance);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TopologyPreservingSimplifier;\r\n\t}\r\n});\r\nTopologyPreservingSimplifier.simplify = function (geom, distanceTolerance) {\r\n\tvar tss = new TopologyPreservingSimplifier(geom);\r\n\ttss.setDistanceTolerance(distanceTolerance);\r\n\treturn tss.getResultGeometry();\r\n};\r\nfunction LineStringTransformer() {\r\n\tGeometryTransformer.apply(this);\r\n\tthis.linestringMap = null;\r\n\tlet linestringMap = arguments[0];\r\n\tthis.linestringMap = linestringMap;\r\n}\r\ninherits(LineStringTransformer, GeometryTransformer);\r\nextend(LineStringTransformer.prototype, {\r\n\ttransformCoordinates: function (coords, parent) {\r\n\t\tif (coords.size() === 0) return null;\r\n\t\tif (parent instanceof LineString) {\r\n\t\t\tvar taggedLine = this.linestringMap.get(parent);\r\n\t\t\treturn this.createCoordinateSequence(taggedLine.getResultCoordinates());\r\n\t\t}\r\n\t\treturn GeometryTransformer.prototype.transformCoordinates.call(this, coords, parent);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineStringTransformer;\r\n\t}\r\n});\r\nfunction LineStringMapBuilderFilter() {\r\n\tthis.tps = null;\r\n\tlet tps = arguments[0];\r\n\tthis.tps = tps;\r\n}\r\nextend(LineStringMapBuilderFilter.prototype, {\r\n\tfilter: function (geom) {\r\n\t\tif (geom instanceof LineString) {\r\n\t\t\tvar line = geom;\r\n\t\t\tif (line.isEmpty()) return null;\r\n\t\t\tvar minSize = line.isClosed() ? 4 : 2;\r\n\t\t\tvar taggedLine = new TaggedLineString(line, minSize);\r\n\t\t\tthis.tps.linestringMap.put(line, taggedLine);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [GeometryComponentFilter];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LineStringMapBuilderFilter;\r\n\t}\r\n});\r\nTopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer;\r\nTopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter;\r\n","import Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nexport default function SplitSegment() {\r\n\tthis.seg = null;\r\n\tthis.segLen = null;\r\n\tthis.splitPt = null;\r\n\tthis.minimumLen = 0.0;\r\n\tlet seg = arguments[0];\r\n\tthis.seg = seg;\r\n\tthis.segLen = seg.getLength();\r\n}\r\nextend(SplitSegment.prototype, {\r\n\tsplitAt: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet pt = arguments[0];\r\n\t\t\tvar minFrac = this.minimumLen / this.segLen;\r\n\t\t\tif (pt.distance(this.seg.p0) < this.minimumLen) {\r\n\t\t\t\tthis.splitPt = this.seg.pointAlong(minFrac);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (pt.distance(this.seg.p1) < this.minimumLen) {\r\n\t\t\t\tthis.splitPt = SplitSegment.pointAlongReverse(this.seg, minFrac);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tthis.splitPt = pt;\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet length = arguments[0], endPt = arguments[1];\r\n\t\t\tvar actualLen = this.getConstrainedLength(length);\r\n\t\t\tvar frac = actualLen / this.segLen;\r\n\t\t\tif (endPt.equals2D(this.seg.p0)) this.splitPt = this.seg.pointAlong(frac); else this.splitPt = SplitSegment.pointAlongReverse(this.seg, frac);\r\n\t\t}\r\n\t},\r\n\tsetMinimumLength: function (minLen) {\r\n\t\tthis.minimumLen = minLen;\r\n\t},\r\n\tgetConstrainedLength: function (len) {\r\n\t\tif (len < this.minimumLen) return this.minimumLen;\r\n\t\treturn len;\r\n\t},\r\n\tgetSplitPoint: function () {\r\n\t\treturn this.splitPt;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn SplitSegment;\r\n\t}\r\n});\r\nSplitSegment.pointAlongReverse = function (seg, segmentLengthFraction) {\r\n\tvar coord = new Coordinate();\r\n\tcoord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x);\r\n\tcoord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y);\r\n\treturn coord;\r\n};\r\n","import extend from '../../../../extend';\r\nexport default function ConstraintSplitPointFinder() {}\r\nextend(ConstraintSplitPointFinder.prototype, {\r\n\tfindSplitPoint: function (seg, encroachPt) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ConstraintSplitPointFinder;\r\n\t}\r\n});\r\n","import extend from '../../../../extend';\r\nimport SplitSegment from './SplitSegment';\r\nimport ConstraintSplitPointFinder from './ConstraintSplitPointFinder';\r\nexport default function NonEncroachingSplitPointFinder() {}\r\nextend(NonEncroachingSplitPointFinder.prototype, {\r\n\tfindSplitPoint: function (seg, encroachPt) {\r\n\t\tvar lineSeg = seg.getLineSegment();\r\n\t\tvar segLen = lineSeg.getLength();\r\n\t\tvar midPtLen = segLen / 2;\r\n\t\tvar splitSeg = new SplitSegment(lineSeg);\r\n\t\tvar projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt);\r\n\t\tvar nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8;\r\n\t\tvar maxSplitLen = nonEncroachDiam;\r\n\t\tif (maxSplitLen > midPtLen) {\r\n\t\t\tmaxSplitLen = midPtLen;\r\n\t\t}\r\n\t\tsplitSeg.setMinimumLength(maxSplitLen);\r\n\t\tsplitSeg.splitAt(projPt);\r\n\t\treturn splitSeg.getSplitPoint();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [ConstraintSplitPointFinder];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn NonEncroachingSplitPointFinder;\r\n\t}\r\n});\r\nNonEncroachingSplitPointFinder.projectedSplitPoint = function (seg, encroachPt) {\r\n\tvar lineSeg = seg.getLineSegment();\r\n\tvar projPt = lineSeg.project(encroachPt);\r\n\treturn projPt;\r\n};\r\n","import WKTWriter from '../../io/WKTWriter';\r\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\r\nimport extend from '../../../../../extend';\r\nimport DD from '../../math/DD';\r\nimport System from '../../../../../java/lang/System';\r\nimport Triangle from '../../geom/Triangle';\r\nexport default function TrianglePredicate() {}\r\nextend(TrianglePredicate.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TrianglePredicate;\r\n\t}\r\n});\r\nTrianglePredicate.triArea = function (a, b, c) {\r\n\treturn (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\r\n};\r\nTrianglePredicate.isInCircleDDNormalized = function (a, b, c, p) {\r\n\tvar adx = DD.valueOf(a.x).selfSubtract(p.x);\r\n\tvar ady = DD.valueOf(a.y).selfSubtract(p.y);\r\n\tvar bdx = DD.valueOf(b.x).selfSubtract(p.x);\r\n\tvar bdy = DD.valueOf(b.y).selfSubtract(p.y);\r\n\tvar cdx = DD.valueOf(c.x).selfSubtract(p.x);\r\n\tvar cdy = DD.valueOf(c.y).selfSubtract(p.y);\r\n\tvar abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady));\r\n\tvar bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));\r\n\tvar cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy));\r\n\tvar alift = adx.multiply(adx).selfAdd(ady.multiply(ady));\r\n\tvar blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));\r\n\tvar clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));\r\n\tvar sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));\r\n\tvar isInCircle = sum.doubleValue() > 0;\r\n\treturn isInCircle;\r\n};\r\nTrianglePredicate.checkRobustInCircle = function (a, b, c, p) {\r\n\tvar nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p);\r\n\tvar isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p);\r\n\tvar isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p);\r\n\tvar circumCentre = Triangle.circumcentre(a, b, c);\r\n\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre));\r\n\tif (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\r\n\t\tSystem.out.println(\"inCircle robustness failure (double result = \" + nonRobustInCircle + \", DD result = \" + isInCircleDD + \", CC result = \" + isInCircleCC + \")\");\r\n\t\tSystem.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])));\r\n\t\tSystem.out.println(\"Circumcentre = \" + WKTWriter.toPoint(circumCentre) + \" radius = \" + a.distance(circumCentre));\r\n\t\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1));\r\n\t\tSystem.out.println(\"p radius diff b = \" + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1));\r\n\t\tSystem.out.println(\"p radius diff c = \" + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1));\r\n\t\tSystem.out.println();\r\n\t}\r\n};\r\nTrianglePredicate.isInCircleDDFast = function (a, b, c, p) {\r\n\tvar aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p));\r\n\tvar bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p));\r\n\tvar cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p));\r\n\tvar pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c));\r\n\tvar sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);\r\n\tvar isInCircle = sum.doubleValue() > 0;\r\n\treturn isInCircle;\r\n};\r\nTrianglePredicate.isInCircleCC = function (a, b, c, p) {\r\n\tvar cc = Triangle.circumcentre(a, b, c);\r\n\tvar ccRadius = a.distance(cc);\r\n\tvar pRadiusDiff = p.distance(cc) - ccRadius;\r\n\treturn pRadiusDiff <= 0;\r\n};\r\nTrianglePredicate.isInCircleNormalized = function (a, b, c, p) {\r\n\tvar adx = a.x - p.x;\r\n\tvar ady = a.y - p.y;\r\n\tvar bdx = b.x - p.x;\r\n\tvar bdy = b.y - p.y;\r\n\tvar cdx = c.x - p.x;\r\n\tvar cdy = c.y - p.y;\r\n\tvar abdet = adx * bdy - bdx * ady;\r\n\tvar bcdet = bdx * cdy - cdx * bdy;\r\n\tvar cadet = cdx * ady - adx * cdy;\r\n\tvar alift = adx * adx + ady * ady;\r\n\tvar blift = bdx * bdx + bdy * bdy;\r\n\tvar clift = cdx * cdx + cdy * cdy;\r\n\tvar disc = alift * bcdet + blift * cadet + clift * abdet;\r\n\treturn disc > 0;\r\n};\r\nTrianglePredicate.isInCircleDDSlow = function (a, b, c, p) {\r\n\tvar px = DD.valueOf(p.x);\r\n\tvar py = DD.valueOf(p.y);\r\n\tvar ax = DD.valueOf(a.x);\r\n\tvar ay = DD.valueOf(a.y);\r\n\tvar bx = DD.valueOf(b.x);\r\n\tvar by = DD.valueOf(b.y);\r\n\tvar cx = DD.valueOf(c.x);\r\n\tvar cy = DD.valueOf(c.y);\r\n\tvar aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py));\r\n\tvar bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py));\r\n\tvar cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py));\r\n\tvar pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy));\r\n\tvar sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);\r\n\tvar isInCircle = sum.doubleValue() > 0;\r\n\treturn isInCircle;\r\n};\r\nTrianglePredicate.isInCircleNonRobust = function (a, b, c, p) {\r\n\tvar isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0;\r\n\treturn isInCircle;\r\n};\r\nTrianglePredicate.isInCircleRobust = function (a, b, c, p) {\r\n\treturn TrianglePredicate.isInCircleNormalized(a, b, c, p);\r\n};\r\nTrianglePredicate.triAreaDDSlow = function (ax, ay, bx, by, cx, cy) {\r\n\treturn bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)));\r\n};\r\nTrianglePredicate.triAreaDDFast = function (a, b, c) {\r\n\tvar t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y));\r\n\tvar t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));\r\n\treturn t1.selfSubtract(t2);\r\n};\r\n","import NotRepresentableException from '../../algorithm/NotRepresentableException';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport TrianglePredicate from './TrianglePredicate';\r\nimport extend from '../../../../../extend';\r\nimport System from '../../../../../java/lang/System';\r\nimport HCoordinate from '../../algorithm/HCoordinate';\r\nexport default function Vertex() {\r\n\tthis.p = null;\r\n\tif (arguments.length === 1) {\r\n\t\tlet _p = arguments[0];\r\n\t\tthis.p = new Coordinate(_p);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet _x = arguments[0], _y = arguments[1];\r\n\t\tthis.p = new Coordinate(_x, _y);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet _x = arguments[0], _y = arguments[1], _z = arguments[2];\r\n\t\tthis.p = new Coordinate(_x, _y, _z);\r\n\t}\r\n}\r\nextend(Vertex.prototype, {\r\n\tcircleCenter: function (b, c) {\r\n\t\tvar a = new Vertex(this.getX(), this.getY());\r\n\t\tvar cab = this.bisector(a, b);\r\n\t\tvar cbc = this.bisector(b, c);\r\n\t\tvar hcc = new HCoordinate(cab, cbc);\r\n\t\tvar cc = null;\r\n\t\ttry {\r\n\t\t\tcc = new Vertex(hcc.getX(), hcc.getY());\r\n\t\t} catch (nre) {\r\n\t\t\tif (nre instanceof NotRepresentableException) {\r\n\t\t\t\tSystem.err.println(\"a: \" + a + \"  b: \" + b + \"  c: \" + c);\r\n\t\t\t\tSystem.err.println(nre);\r\n\t\t\t} else throw nre;\r\n\t\t} finally {}\r\n\t\treturn cc;\r\n\t},\r\n\tdot: function (v) {\r\n\t\treturn this.p.x * v.getX() + this.p.y * v.getY();\r\n\t},\r\n\tmagn: function () {\r\n\t\treturn Math.sqrt(this.p.x * this.p.x + this.p.y * this.p.y);\r\n\t},\r\n\tgetZ: function () {\r\n\t\treturn this.p.z;\r\n\t},\r\n\tbisector: function (a, b) {\r\n\t\tvar dx = b.getX() - a.getX();\r\n\t\tvar dy = b.getY() - a.getY();\r\n\t\tvar l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0);\r\n\t\tvar l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0);\r\n\t\treturn new HCoordinate(l1, l2);\r\n\t},\r\n\tequals: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet _x = arguments[0];\r\n\t\t\tif (this.p.x === _x.getX() && this.p.y === _x.getY()) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet _x = arguments[0], tolerance = arguments[1];\r\n\t\t\tif (this.p.distance(_x.getCoordinate()) < tolerance) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.p;\r\n\t},\r\n\tisInCircle: function (a, b, c) {\r\n\t\treturn TrianglePredicate.isInCircleRobust(a.p, b.p, c.p, this.p);\r\n\t},\r\n\tinterpolateZValue: function (v0, v1, v2) {\r\n\t\tvar x0 = v0.getX();\r\n\t\tvar y0 = v0.getY();\r\n\t\tvar a = v1.getX() - x0;\r\n\t\tvar b = v2.getX() - x0;\r\n\t\tvar c = v1.getY() - y0;\r\n\t\tvar d = v2.getY() - y0;\r\n\t\tvar det = a * d - b * c;\r\n\t\tvar dx = this.getX() - x0;\r\n\t\tvar dy = this.getY() - y0;\r\n\t\tvar t = (d * dx - b * dy) / det;\r\n\t\tvar u = (-c * dx + a * dy) / det;\r\n\t\tvar z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ());\r\n\t\treturn z;\r\n\t},\r\n\tmidPoint: function (a) {\r\n\t\tvar xm = (this.p.x + a.getX()) / 2.0;\r\n\t\tvar ym = (this.p.y + a.getY()) / 2.0;\r\n\t\tvar zm = (this.p.z + a.getZ()) / 2.0;\r\n\t\treturn new Vertex(xm, ym, zm);\r\n\t},\r\n\trightOf: function (e) {\r\n\t\treturn this.isCCW(e.dest(), e.orig());\r\n\t},\r\n\tisCCW: function (b, c) {\r\n\t\treturn (b.p.x - this.p.x) * (c.p.y - this.p.y) - (b.p.y - this.p.y) * (c.p.x - this.p.x) > 0;\r\n\t},\r\n\tgetX: function () {\r\n\t\treturn this.p.x;\r\n\t},\r\n\tcrossProduct: function (v) {\r\n\t\treturn this.p.x * v.getY() - this.p.y * v.getX();\r\n\t},\r\n\tsetZ: function (_z) {\r\n\t\tthis.p.z = _z;\r\n\t},\r\n\ttimes: function (c) {\r\n\t\treturn new Vertex(c * this.p.x, c * this.p.y);\r\n\t},\r\n\tcross: function () {\r\n\t\treturn new Vertex(this.p.y, -this.p.x);\r\n\t},\r\n\tleftOf: function (e) {\r\n\t\treturn this.isCCW(e.orig(), e.dest());\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn \"POINT (\" + this.p.x + \" \" + this.p.y + \")\";\r\n\t},\r\n\tsub: function (v) {\r\n\t\treturn new Vertex(this.p.x - v.getX(), this.p.y - v.getY());\r\n\t},\r\n\tgetY: function () {\r\n\t\treturn this.p.y;\r\n\t},\r\n\tclassify: function (p0, p1) {\r\n\t\tvar p2 = this;\r\n\t\tvar a = p1.sub(p0);\r\n\t\tvar b = p2.sub(p0);\r\n\t\tvar sa = a.crossProduct(b);\r\n\t\tif (sa > 0.0) return Vertex.LEFT;\r\n\t\tif (sa < 0.0) return Vertex.RIGHT;\r\n\t\tif (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND;\r\n\t\tif (a.magn() < b.magn()) return Vertex.BEYOND;\r\n\t\tif (p0.equals(p2)) return Vertex.ORIGIN;\r\n\t\tif (p1.equals(p2)) return Vertex.DESTINATION;\r\n\t\treturn Vertex.BETWEEN;\r\n\t},\r\n\tsum: function (v) {\r\n\t\treturn new Vertex(this.p.x + v.getX(), this.p.y + v.getY());\r\n\t},\r\n\tdistance: function (v1, v2) {\r\n\t\treturn Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0));\r\n\t},\r\n\tcircumRadiusRatio: function (b, c) {\r\n\t\tvar x = this.circleCenter(b, c);\r\n\t\tvar radius = this.distance(x, b);\r\n\t\tvar edgeLength = this.distance(this, b);\r\n\t\tvar el = this.distance(b, c);\r\n\t\tif (el < edgeLength) {\r\n\t\t\tedgeLength = el;\r\n\t\t}\r\n\t\tel = this.distance(c, this);\r\n\t\tif (el < edgeLength) {\r\n\t\t\tedgeLength = el;\r\n\t\t}\r\n\t\treturn radius / edgeLength;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Vertex;\r\n\t}\r\n});\r\nVertex.interpolateZ = function () {\r\n\tif (arguments.length === 3) {\r\n\t\tlet p = arguments[0], p0 = arguments[1], p1 = arguments[2];\r\n\t\tvar segLen = p0.distance(p1);\r\n\t\tvar ptLen = p.distance(p0);\r\n\t\tvar dz = p1.z - p0.z;\r\n\t\tvar pz = p0.z + dz * (ptLen / segLen);\r\n\t\treturn pz;\r\n\t} else if (arguments.length === 4) {\r\n\t\tlet p = arguments[0], v0 = arguments[1], v1 = arguments[2], v2 = arguments[3];\r\n\t\tvar x0 = v0.x;\r\n\t\tvar y0 = v0.y;\r\n\t\tvar a = v1.x - x0;\r\n\t\tvar b = v2.x - x0;\r\n\t\tvar c = v1.y - y0;\r\n\t\tvar d = v2.y - y0;\r\n\t\tvar det = a * d - b * c;\r\n\t\tvar dx = p.x - x0;\r\n\t\tvar dy = p.y - y0;\r\n\t\tvar t = (d * dx - b * dy) / det;\r\n\t\tvar u = (-c * dx + a * dy) / det;\r\n\t\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\r\n\t\treturn z;\r\n\t}\r\n};\r\nVertex.LEFT = 0;\r\nVertex.RIGHT = 1;\r\nVertex.BEYOND = 2;\r\nVertex.BEHIND = 3;\r\nVertex.BETWEEN = 4;\r\nVertex.ORIGIN = 5;\r\nVertex.DESTINATION = 6;\r\n","import extend from '../../../../extend';\r\nimport Vertex from './quadedge/Vertex';\r\nimport inherits from '../../../../inherits';\r\nexport default function ConstraintVertex() {\r\n\tthis._isOnConstraint = null;\r\n\tthis.constraint = null;\r\n\tlet p = arguments[0];\r\n\tVertex.call(this, p);\r\n}\r\ninherits(ConstraintVertex, Vertex);\r\nextend(ConstraintVertex.prototype, {\r\n\tgetConstraint: function () {\r\n\t\treturn this.constraint;\r\n\t},\r\n\tsetOnConstraint: function (isOnConstraint) {\r\n\t\tthis._isOnConstraint = isOnConstraint;\r\n\t},\r\n\tmerge: function (other) {\r\n\t\tif (other._isOnConstraint) {\r\n\t\t\tthis._isOnConstraint = true;\r\n\t\t\tthis.constraint = other.constraint;\r\n\t\t}\r\n\t},\r\n\tisOnConstraint: function () {\r\n\t\treturn this._isOnConstraint;\r\n\t},\r\n\tsetConstraint: function (constraint) {\r\n\t\tthis._isOnConstraint = true;\r\n\t\tthis.constraint = constraint;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ConstraintVertex;\r\n\t}\r\n});\r\n","import WKTWriter from '../../io/WKTWriter';\r\nimport extend from '../../../../../extend';\r\nimport LineSegment from '../../geom/LineSegment';\r\nexport default function QuadEdge() {\r\n\tthis._rot = null;\r\n\tthis.vertex = null;\r\n\tthis.next = null;\r\n\tthis.data = null;\r\n}\r\nextend(QuadEdge.prototype, {\r\n\tequalsNonOriented: function (qe) {\r\n\t\tif (this.equalsOriented(qe)) return true;\r\n\t\tif (this.equalsOriented(qe.sym())) return true;\r\n\t\treturn false;\r\n\t},\r\n\ttoLineSegment: function () {\r\n\t\treturn new LineSegment(this.vertex.getCoordinate(), this.dest().getCoordinate());\r\n\t},\r\n\tdest: function () {\r\n\t\treturn this.sym().orig();\r\n\t},\r\n\toNext: function () {\r\n\t\treturn this.next;\r\n\t},\r\n\tequalsOriented: function (qe) {\r\n\t\tif (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true;\r\n\t\treturn false;\r\n\t},\r\n\tdNext: function () {\r\n\t\treturn this.sym().oNext().sym();\r\n\t},\r\n\tlPrev: function () {\r\n\t\treturn this.next.sym();\r\n\t},\r\n\trPrev: function () {\r\n\t\treturn this.sym().oNext();\r\n\t},\r\n\trot: function () {\r\n\t\treturn this._rot;\r\n\t},\r\n\toPrev: function () {\r\n\t\treturn this._rot.next._rot;\r\n\t},\r\n\tsym: function () {\r\n\t\treturn this._rot._rot;\r\n\t},\r\n\tsetOrig: function (o) {\r\n\t\tthis.vertex = o;\r\n\t},\r\n\tlNext: function () {\r\n\t\treturn this.invRot().oNext().rot();\r\n\t},\r\n\tgetLength: function () {\r\n\t\treturn this.orig().getCoordinate().distance(this.dest().getCoordinate());\r\n\t},\r\n\tinvRot: function () {\r\n\t\treturn this._rot.sym();\r\n\t},\r\n\tsetDest: function (d) {\r\n\t\tthis.sym().setOrig(d);\r\n\t},\r\n\tsetData: function (data) {\r\n\t\tthis.data = data;\r\n\t},\r\n\tgetData: function () {\r\n\t\treturn this.data;\r\n\t},\r\n\tdelete: function () {\r\n\t\tthis._rot = null;\r\n\t},\r\n\torig: function () {\r\n\t\treturn this.vertex;\r\n\t},\r\n\trNext: function () {\r\n\t\treturn this._rot.next.invRot();\r\n\t},\r\n\ttoString: function () {\r\n\t\tvar p0 = this.vertex.getCoordinate();\r\n\t\tvar p1 = this.dest().getCoordinate();\r\n\t\treturn WKTWriter.toLineString(p0, p1);\r\n\t},\r\n\tisLive: function () {\r\n\t\treturn this._rot !== null;\r\n\t},\r\n\tgetPrimary: function () {\r\n\t\tif (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this; else return this.sym();\r\n\t},\r\n\tdPrev: function () {\r\n\t\treturn this.invRot().oNext().invRot();\r\n\t},\r\n\tsetNext: function (next) {\r\n\t\tthis.next = next;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn QuadEdge;\r\n\t}\r\n});\r\nQuadEdge.makeEdge = function (o, d) {\r\n\tvar q0 = new QuadEdge();\r\n\tvar q1 = new QuadEdge();\r\n\tvar q2 = new QuadEdge();\r\n\tvar q3 = new QuadEdge();\r\n\tq0._rot = q1;\r\n\tq1._rot = q2;\r\n\tq2._rot = q3;\r\n\tq3._rot = q0;\r\n\tq0.setNext(q0);\r\n\tq1.setNext(q3);\r\n\tq2.setNext(q2);\r\n\tq3.setNext(q1);\r\n\tvar base = q0;\r\n\tbase.setOrig(o);\r\n\tbase.setDest(d);\r\n\treturn base;\r\n};\r\nQuadEdge.swap = function (e) {\r\n\tvar a = e.oPrev();\r\n\tvar b = e.sym().oPrev();\r\n\tQuadEdge.splice(e, a);\r\n\tQuadEdge.splice(e.sym(), b);\r\n\tQuadEdge.splice(e, a.lNext());\r\n\tQuadEdge.splice(e.sym(), b.lNext());\r\n\te.setOrig(a.dest());\r\n\te.setDest(b.dest());\r\n};\r\nQuadEdge.splice = function (a, b) {\r\n\tvar alpha = a.oNext().rot();\r\n\tvar beta = b.oNext().rot();\r\n\tvar t1 = b.oNext();\r\n\tvar t2 = a.oNext();\r\n\tvar t3 = beta.oNext();\r\n\tvar t4 = alpha.oNext();\r\n\ta.setNext(t1);\r\n\tb.setNext(t2);\r\n\talpha.setNext(t3);\r\n\tbeta.setNext(t4);\r\n};\r\nQuadEdge.connect = function (a, b) {\r\n\tvar e = QuadEdge.makeEdge(a.dest(), b.orig());\r\n\tQuadEdge.splice(e, a.lNext());\r\n\tQuadEdge.splice(e.sym(), b);\r\n\treturn e;\r\n};\r\n","import QuadEdge from './quadedge/QuadEdge';\r\nimport extend from '../../../../extend';\r\nexport default function IncrementalDelaunayTriangulator() {\r\n\tthis.subdiv = null;\r\n\tthis.isUsingTolerance = false;\r\n\tlet subdiv = arguments[0];\r\n\tthis.subdiv = subdiv;\r\n\tthis.isUsingTolerance = subdiv.getTolerance() > 0.0;\r\n}\r\nextend(IncrementalDelaunayTriangulator.prototype, {\r\n\tinsertSite: function (v) {\r\n\t\tvar e = this.subdiv.locate(v);\r\n\t\tif (this.subdiv.isVertexOfEdge(e, v)) {\r\n\t\t\treturn e;\r\n\t\t} else if (this.subdiv.isOnEdge(e, v.getCoordinate())) {\r\n\t\t\te = e.oPrev();\r\n\t\t\tthis.subdiv.delete(e.oNext());\r\n\t\t}\r\n\t\tvar base = this.subdiv.makeEdge(e.orig(), v);\r\n\t\tQuadEdge.splice(base, e);\r\n\t\tvar startEdge = base;\r\n\t\tdo {\r\n\t\t\tbase = this.subdiv.connect(e, base.sym());\r\n\t\t\te = base.oPrev();\r\n\t\t} while (e.lNext() !== startEdge);\r\n\t\tdo {\r\n\t\t\tvar t = e.oPrev();\r\n\t\t\tif (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\r\n\t\t\t\tQuadEdge.swap(e);\r\n\t\t\t\te = e.oPrev();\r\n\t\t\t} else if (e.oNext() === startEdge) {\r\n\t\t\t\treturn base;\r\n\t\t\t} else {\r\n\t\t\t\te = e.oNext().lPrev();\r\n\t\t\t}\r\n\t\t} while (true);\r\n\t},\r\n\tinsertSites: function (vertices) {\r\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\r\n\t\t\tvar v = i.next();\r\n\t\t\tthis.insertSite(v);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn IncrementalDelaunayTriangulator;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nexport default function QuadEdgeLocator() {}\r\nextend(QuadEdgeLocator.prototype, {\r\n\tlocate: function (v) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn QuadEdgeLocator;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport QuadEdgeLocator from './QuadEdgeLocator';\r\nexport default function LastFoundQuadEdgeLocator() {\r\n\tthis.subdiv = null;\r\n\tthis.lastEdge = null;\r\n\tlet subdiv = arguments[0];\r\n\tthis.subdiv = subdiv;\r\n\tthis.init();\r\n}\r\nextend(LastFoundQuadEdgeLocator.prototype, {\r\n\tinit: function () {\r\n\t\tthis.lastEdge = this.findEdge();\r\n\t},\r\n\tlocate: function (v) {\r\n\t\tif (!this.lastEdge.isLive()) {\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t\tvar e = this.subdiv.locateFromEdge(v, this.lastEdge);\r\n\t\tthis.lastEdge = e;\r\n\t\treturn e;\r\n\t},\r\n\tfindEdge: function () {\r\n\t\tvar edges = this.subdiv.getEdges();\r\n\t\treturn edges.iterator().next();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [QuadEdgeLocator];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LastFoundQuadEdgeLocator;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nimport LineSegment from '../../geom/LineSegment';\r\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\r\nimport inherits from '../../../../../inherits';\r\nexport default function LocateFailureException() {\r\n\tthis.seg = null;\r\n\tif (arguments.length === 1) {\r\n\t\tif (typeof arguments[0] === \"string\") {\r\n\t\t\tlet msg = arguments[0];\r\n\t\t\tRuntimeException.call(this, msg);\r\n\t\t} else if (arguments[0] instanceof LineSegment) {\r\n\t\t\tlet seg = arguments[0];\r\n\t\t\tRuntimeException.call(this, \"Locate failed to converge (at edge: \" + seg + \").  Possible causes include invalid Subdivision topology or very close sites\");\r\n\t\t\tthis.seg = new LineSegment(seg);\r\n\t\t}\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet msg = arguments[0], seg = arguments[1];\r\n\t\tRuntimeException.call(this, LocateFailureException.msgWithSpatial(msg, seg));\r\n\t\tthis.seg = new LineSegment(seg);\r\n\t}\r\n}\r\ninherits(LocateFailureException, RuntimeException);\r\nextend(LocateFailureException.prototype, {\r\n\tgetSegment: function () {\r\n\t\treturn this.seg;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn LocateFailureException;\r\n\t}\r\n});\r\nLocateFailureException.msgWithSpatial = function (msg, seg) {\r\n\tif (seg !== null) return msg + \" [ \" + seg + \" ]\";\r\n\treturn msg;\r\n};\r\n","import extend from '../../../../../extend';\r\nexport default function TriangleVisitor() {}\r\nextend(TriangleVisitor.prototype, {\r\n\tvisit: function (triEdges) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TriangleVisitor;\r\n\t}\r\n});\r\n","import QuadEdge from './QuadEdge';\r\nimport CoordinateList from '../../geom/CoordinateList';\r\nimport HashSet from '../../../../../java/util/HashSet';\r\nimport WKTWriter from '../../io/WKTWriter';\r\nimport GeometryFactory from '../../geom/GeometryFactory';\r\nimport Coordinate from '../../geom/Coordinate';\r\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\r\nimport Stack from '../../../../../java/util/Stack';\r\nimport extend from '../../../../../extend';\r\nimport LastFoundQuadEdgeLocator from './LastFoundQuadEdgeLocator';\r\nimport LocateFailureException from './LocateFailureException';\r\nimport Vertex from './Vertex';\r\nimport System from '../../../../../java/lang/System';\r\nimport LineSegment from '../../geom/LineSegment';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport Envelope from '../../geom/Envelope';\r\nimport Triangle from '../../geom/Triangle';\r\nimport TriangleVisitor from './TriangleVisitor';\r\nexport default function QuadEdgeSubdivision() {\r\n\tthis.visitedKey = 0;\r\n\tthis.quadEdges = new ArrayList();\r\n\tthis.startingEdge = null;\r\n\tthis.tolerance = null;\r\n\tthis.edgeCoincidenceTolerance = null;\r\n\tthis.frameVertex = new Array(3).fill(null);\r\n\tthis.frameEnv = null;\r\n\tthis.locator = null;\r\n\tthis.seg = new LineSegment();\r\n\tthis.triEdges = new Array(3).fill(null);\r\n\tlet env = arguments[0], tolerance = arguments[1];\r\n\tthis.tolerance = tolerance;\r\n\tthis.edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;\r\n\tthis.createFrame(env);\r\n\tthis.startingEdge = this.initSubdiv();\r\n\tthis.locator = new LastFoundQuadEdgeLocator(this);\r\n}\r\nextend(QuadEdgeSubdivision.prototype, {\r\n\tgetTriangleVertices: function (includeFrame) {\r\n\t\tvar visitor = new TriangleVertexListVisitor();\r\n\t\tthis.visitTriangles(visitor, includeFrame);\r\n\t\treturn visitor.getTriangleVertices();\r\n\t},\r\n\tisFrameVertex: function (v) {\r\n\t\tif (v.equals(this.frameVertex[0])) return true;\r\n\t\tif (v.equals(this.frameVertex[1])) return true;\r\n\t\tif (v.equals(this.frameVertex[2])) return true;\r\n\t\treturn false;\r\n\t},\r\n\tisVertexOfEdge: function (e, v) {\r\n\t\tif (v.equals(e.orig(), this.tolerance) || v.equals(e.dest(), this.tolerance)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tconnect: function (a, b) {\r\n\t\tvar q = QuadEdge.connect(a, b);\r\n\t\tthis.quadEdges.add(q);\r\n\t\treturn q;\r\n\t},\r\n\tgetVoronoiCellPolygon: function (qe, geomFact) {\r\n\t\tvar cellPts = new ArrayList();\r\n\t\tvar startQE = qe;\r\n\t\tdo {\r\n\t\t\tvar cc = qe.rot().orig().getCoordinate();\r\n\t\t\tcellPts.add(cc);\r\n\t\t\tqe = qe.oPrev();\r\n\t\t} while (qe !== startQE);\r\n\t\tvar coordList = new CoordinateList();\r\n\t\tcoordList.addAll(cellPts, false);\r\n\t\tcoordList.closeRing();\r\n\t\tif (coordList.size() < 4) {\r\n\t\t\tSystem.out.println(coordList);\r\n\t\t\tcoordList.add(coordList.get(coordList.size() - 1), true);\r\n\t\t}\r\n\t\tvar pts = coordList.toCoordinateArray();\r\n\t\tvar cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts), null);\r\n\t\tvar v = startQE.orig();\r\n\t\tcellPoly.setUserData(v.getCoordinate());\r\n\t\treturn cellPoly;\r\n\t},\r\n\tsetLocator: function (locator) {\r\n\t\tthis.locator = locator;\r\n\t},\r\n\tinitSubdiv: function () {\r\n\t\tvar ea = this.makeEdge(this.frameVertex[0], this.frameVertex[1]);\r\n\t\tvar eb = this.makeEdge(this.frameVertex[1], this.frameVertex[2]);\r\n\t\tQuadEdge.splice(ea.sym(), eb);\r\n\t\tvar ec = this.makeEdge(this.frameVertex[2], this.frameVertex[0]);\r\n\t\tQuadEdge.splice(eb.sym(), ec);\r\n\t\tQuadEdge.splice(ec.sym(), ea);\r\n\t\treturn ea;\r\n\t},\r\n\tisFrameBorderEdge: function (e) {\r\n\t\tvar leftTri = new Array(3).fill(null);\r\n\t\tQuadEdgeSubdivision.getTriangleEdges(e, leftTri);\r\n\t\tvar rightTri = new Array(3).fill(null);\r\n\t\tQuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri);\r\n\t\tvar vLeftTriOther = e.lNext().dest();\r\n\t\tif (this.isFrameVertex(vLeftTriOther)) return true;\r\n\t\tvar vRightTriOther = e.sym().lNext().dest();\r\n\t\tif (this.isFrameVertex(vRightTriOther)) return true;\r\n\t\treturn false;\r\n\t},\r\n\tmakeEdge: function (o, d) {\r\n\t\tvar q = QuadEdge.makeEdge(o, d);\r\n\t\tthis.quadEdges.add(q);\r\n\t\treturn q;\r\n\t},\r\n\tvisitTriangles: function (triVisitor, includeFrame) {\r\n\t\tthis.visitedKey++;\r\n\t\tvar edgeStack = new Stack();\r\n\t\tedgeStack.push(this.startingEdge);\r\n\t\tvar visitedEdges = new HashSet();\r\n\t\twhile (!edgeStack.empty()) {\r\n\t\t\tvar edge = edgeStack.pop();\r\n\t\t\tif (!visitedEdges.contains(edge)) {\r\n\t\t\t\tvar triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges);\r\n\t\t\t\tif (triEdges !== null) triVisitor.visit(triEdges);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisFrameEdge: function (e) {\r\n\t\tif (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true;\r\n\t\treturn false;\r\n\t},\r\n\tisOnEdge: function (e, p) {\r\n\t\tthis.seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate());\r\n\t\tvar dist = this.seg.distance(p);\r\n\t\treturn dist < this.edgeCoincidenceTolerance;\r\n\t},\r\n\tgetEnvelope: function () {\r\n\t\treturn new Envelope(this.frameEnv);\r\n\t},\r\n\tcreateFrame: function (env) {\r\n\t\tvar deltaX = env.getWidth();\r\n\t\tvar deltaY = env.getHeight();\r\n\t\tvar offset = 0.0;\r\n\t\tif (deltaX > deltaY) {\r\n\t\t\toffset = deltaX * 10.0;\r\n\t\t} else {\r\n\t\t\toffset = deltaY * 10.0;\r\n\t\t}\r\n\t\tthis.frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset);\r\n\t\tthis.frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset);\r\n\t\tthis.frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset);\r\n\t\tthis.frameEnv = new Envelope(this.frameVertex[0].getCoordinate(), this.frameVertex[1].getCoordinate());\r\n\t\tthis.frameEnv.expandToInclude(this.frameVertex[2].getCoordinate());\r\n\t},\r\n\tgetTriangleCoordinates: function (includeFrame) {\r\n\t\tvar visitor = new TriangleCoordinatesVisitor();\r\n\t\tthis.visitTriangles(visitor, includeFrame);\r\n\t\treturn visitor.getTriangles();\r\n\t},\r\n\tgetVertices: function (includeFrame) {\r\n\t\tvar vertices = new HashSet();\r\n\t\tfor (var i = this.quadEdges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar qe = i.next();\r\n\t\t\tvar v = qe.orig();\r\n\t\t\tif (includeFrame || !this.isFrameVertex(v)) vertices.add(v);\r\n\t\t\tvar vd = qe.dest();\r\n\t\t\tif (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd);\r\n\t\t}\r\n\t\treturn vertices;\r\n\t},\r\n\tfetchTriangleToVisit: function (edge, edgeStack, includeFrame, visitedEdges) {\r\n\t\tvar curr = edge;\r\n\t\tvar edgeCount = 0;\r\n\t\tvar isFrame = false;\r\n\t\tdo {\r\n\t\t\tthis.triEdges[edgeCount] = curr;\r\n\t\t\tif (this.isFrameEdge(curr)) isFrame = true;\r\n\t\t\tvar sym = curr.sym();\r\n\t\t\tif (!visitedEdges.contains(sym)) edgeStack.push(sym);\r\n\t\t\tvisitedEdges.add(curr);\r\n\t\t\tedgeCount++;\r\n\t\t\tcurr = curr.lNext();\r\n\t\t} while (curr !== edge);\r\n\t\tif (isFrame && !includeFrame) return null;\r\n\t\treturn this.triEdges;\r\n\t},\r\n\tgetEdges: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn this.quadEdges;\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet geomFact = arguments[0];\r\n\t\t\tvar quadEdges = this.getPrimaryEdges(false);\r\n\t\t\tvar edges = new Array(quadEdges.size()).fill(null);\r\n\t\t\tvar i = 0;\r\n\t\t\tfor (var it = quadEdges.iterator(); it.hasNext(); ) {\r\n\t\t\t\tvar qe = it.next();\r\n\t\t\t\tedges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()]);\r\n\t\t\t}\r\n\t\t\treturn geomFact.createMultiLineString(edges);\r\n\t\t}\r\n\t},\r\n\tgetVertexUniqueEdges: function (includeFrame) {\r\n\t\tvar edges = new ArrayList();\r\n\t\tvar visitedVertices = new HashSet();\r\n\t\tfor (var i = this.quadEdges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar qe = i.next();\r\n\t\t\tvar v = qe.orig();\r\n\t\t\tif (!visitedVertices.contains(v)) {\r\n\t\t\t\tvisitedVertices.add(v);\r\n\t\t\t\tif (includeFrame || !this.isFrameVertex(v)) {\r\n\t\t\t\t\tedges.add(qe);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar qd = qe.sym();\r\n\t\t\tvar vd = qd.orig();\r\n\t\t\tif (!visitedVertices.contains(vd)) {\r\n\t\t\t\tvisitedVertices.add(vd);\r\n\t\t\t\tif (includeFrame || !this.isFrameVertex(vd)) {\r\n\t\t\t\t\tedges.add(qd);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn edges;\r\n\t},\r\n\tgetTriangleEdges: function (includeFrame) {\r\n\t\tvar visitor = new TriangleEdgesListVisitor();\r\n\t\tthis.visitTriangles(visitor, includeFrame);\r\n\t\treturn visitor.getTriangleEdges();\r\n\t},\r\n\tgetPrimaryEdges: function (includeFrame) {\r\n\t\tthis.visitedKey++;\r\n\t\tvar edges = new ArrayList();\r\n\t\tvar edgeStack = new Stack();\r\n\t\tedgeStack.push(this.startingEdge);\r\n\t\tvar visitedEdges = new HashSet();\r\n\t\twhile (!edgeStack.empty()) {\r\n\t\t\tvar edge = edgeStack.pop();\r\n\t\t\tif (!visitedEdges.contains(edge)) {\r\n\t\t\t\tvar priQE = edge.getPrimary();\r\n\t\t\t\tif (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE);\r\n\t\t\t\tedgeStack.push(edge.oNext());\r\n\t\t\t\tedgeStack.push(edge.sym().oNext());\r\n\t\t\t\tvisitedEdges.add(edge);\r\n\t\t\t\tvisitedEdges.add(edge.sym());\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn edges;\r\n\t},\r\n\tdelete: function (e) {\r\n\t\tQuadEdge.splice(e, e.oPrev());\r\n\t\tQuadEdge.splice(e.sym(), e.sym().oPrev());\r\n\t\tvar eSym = e.sym();\r\n\t\tvar eRot = e.rot();\r\n\t\tvar eRotSym = e.rot().sym();\r\n\t\tthis.quadEdges.remove(e);\r\n\t\tthis.quadEdges.remove(eSym);\r\n\t\tthis.quadEdges.remove(eRot);\r\n\t\tthis.quadEdges.remove(eRotSym);\r\n\t\te.delete();\r\n\t\teSym.delete();\r\n\t\teRot.delete();\r\n\t\teRotSym.delete();\r\n\t},\r\n\tlocateFromEdge: function (v, startEdge) {\r\n\t\tvar iter = 0;\r\n\t\tvar maxIter = this.quadEdges.size();\r\n\t\tvar e = startEdge;\r\n\t\twhile (true) {\r\n\t\t\titer++;\r\n\t\t\tif (iter > maxIter) {\r\n\t\t\t\tthrow new LocateFailureException(e.toLineSegment());\r\n\t\t\t}\r\n\t\t\tif (v.equals(e.orig()) || v.equals(e.dest())) {\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (v.rightOf(e)) {\r\n\t\t\t\te = e.sym();\r\n\t\t\t} else if (!v.rightOf(e.oNext())) {\r\n\t\t\t\te = e.oNext();\r\n\t\t\t} else if (!v.rightOf(e.dPrev())) {\r\n\t\t\t\te = e.dPrev();\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn e;\r\n\t},\r\n\tgetTolerance: function () {\r\n\t\treturn this.tolerance;\r\n\t},\r\n\tgetVoronoiCellPolygons: function (geomFact) {\r\n\t\tthis.visitTriangles(new TriangleCircumcentreVisitor(), true);\r\n\t\tvar cells = new ArrayList();\r\n\t\tvar edges = this.getVertexUniqueEdges(false);\r\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\r\n\t\t\tvar qe = i.next();\r\n\t\t\tcells.add(this.getVoronoiCellPolygon(qe, geomFact));\r\n\t\t}\r\n\t\treturn cells;\r\n\t},\r\n\tgetVoronoiDiagram: function (geomFact) {\r\n\t\tvar vorCells = this.getVoronoiCellPolygons(geomFact);\r\n\t\treturn geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells));\r\n\t},\r\n\tgetTriangles: function (geomFact) {\r\n\t\tvar triPtsList = this.getTriangleCoordinates(false);\r\n\t\tvar tris = new Array(triPtsList.size()).fill(null);\r\n\t\tvar i = 0;\r\n\t\tfor (var it = triPtsList.iterator(); it.hasNext(); ) {\r\n\t\t\tvar triPt = it.next();\r\n\t\t\ttris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt), null);\r\n\t\t}\r\n\t\treturn geomFact.createGeometryCollection(tris);\r\n\t},\r\n\tinsertSite: function (v) {\r\n\t\tvar e = this.locate(v);\r\n\t\tif (v.equals(e.orig(), this.tolerance) || v.equals(e.dest(), this.tolerance)) {\r\n\t\t\treturn e;\r\n\t\t}\r\n\t\tvar base = this.makeEdge(e.orig(), v);\r\n\t\tQuadEdge.splice(base, e);\r\n\t\tvar startEdge = base;\r\n\t\tdo {\r\n\t\t\tbase = this.connect(e, base.sym());\r\n\t\t\te = base.oPrev();\r\n\t\t} while (e.lNext() !== startEdge);\r\n\t\treturn startEdge;\r\n\t},\r\n\tlocate: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (arguments[0] instanceof Vertex) {\r\n\t\t\t\tlet v = arguments[0];\r\n\t\t\t\treturn this.locator.locate(v);\r\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\t\tlet p = arguments[0];\r\n\t\t\t\treturn this.locator.locate(new Vertex(p));\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\r\n\t\t\tvar e = this.locator.locate(new Vertex(p0));\r\n\t\t\tif (e === null) return null;\r\n\t\t\tvar base = e;\r\n\t\t\tif (e.dest().getCoordinate().equals2D(p0)) base = e.sym();\r\n\t\t\tvar locEdge = base;\r\n\t\t\tdo {\r\n\t\t\t\tif (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge;\r\n\t\t\t\tlocEdge = locEdge.oNext();\r\n\t\t\t} while (locEdge !== base);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn QuadEdgeSubdivision;\r\n\t}\r\n});\r\nQuadEdgeSubdivision.getTriangleEdges = function (startQE, triEdge) {\r\n\ttriEdge[0] = startQE;\r\n\ttriEdge[1] = triEdge[0].lNext();\r\n\ttriEdge[2] = triEdge[1].lNext();\r\n\tif (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException(\"Edges do not form a triangle\");\r\n};\r\nfunction TriangleCircumcentreVisitor() {}\r\nextend(TriangleCircumcentreVisitor.prototype, {\r\n\tvisit: function (triEdges) {\r\n\t\tvar a = triEdges[0].orig().getCoordinate();\r\n\t\tvar b = triEdges[1].orig().getCoordinate();\r\n\t\tvar c = triEdges[2].orig().getCoordinate();\r\n\t\tvar cc = Triangle.circumcentre(a, b, c);\r\n\t\tvar ccVertex = new Vertex(cc);\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\ttriEdges[i].rot().setOrig(ccVertex);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [TriangleVisitor];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TriangleCircumcentreVisitor;\r\n\t}\r\n});\r\nfunction TriangleEdgesListVisitor() {\r\n\tthis.triList = new ArrayList();\r\n}\r\nextend(TriangleEdgesListVisitor.prototype, {\r\n\tgetTriangleEdges: function () {\r\n\t\treturn this.triList;\r\n\t},\r\n\tvisit: function (triEdges) {\r\n\t\tthis.triList.add(triEdges.clone());\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [TriangleVisitor];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TriangleEdgesListVisitor;\r\n\t}\r\n});\r\nfunction TriangleVertexListVisitor() {\r\n\tthis.triList = new ArrayList();\r\n}\r\nextend(TriangleVertexListVisitor.prototype, {\r\n\tvisit: function (triEdges) {\r\n\t\tthis.triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()]);\r\n\t},\r\n\tgetTriangleVertices: function () {\r\n\t\treturn this.triList;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [TriangleVisitor];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TriangleVertexListVisitor;\r\n\t}\r\n});\r\nfunction TriangleCoordinatesVisitor() {\r\n\tthis.coordList = new CoordinateList();\r\n\tthis.triCoords = new ArrayList();\r\n}\r\nextend(TriangleCoordinatesVisitor.prototype, {\r\n\tcheckTriangleSize: function (pts) {\r\n\t\tvar loc = \"\";\r\n\t\tif (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]); else {\r\n\t\t\tif (pts.length >= 1) loc = WKTWriter.toPoint(pts[0]);\r\n\t\t}\r\n\t},\r\n\tvisit: function (triEdges) {\r\n\t\tthis.coordList.clear();\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\tvar v = triEdges[i].orig();\r\n\t\t\tthis.coordList.add(v.getCoordinate());\r\n\t\t}\r\n\t\tif (this.coordList.size() > 0) {\r\n\t\t\tthis.coordList.closeRing();\r\n\t\t\tvar pts = this.coordList.toCoordinateArray();\r\n\t\t\tif (pts.length !== 4) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tthis.triCoords.add(pts);\r\n\t\t}\r\n\t},\r\n\tgetTriangles: function () {\r\n\t\treturn this.triCoords;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [TriangleVisitor];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn TriangleCoordinatesVisitor;\r\n\t}\r\n});\r\nQuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor;\r\nQuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor;\r\nQuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor;\r\nQuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor;\r\nQuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000;\r\n","import Coordinate from '../geom/Coordinate';\r\nimport extend from '../../../../extend';\r\nimport LineSegment from '../geom/LineSegment';\r\nexport default function Segment() {\r\n\tthis.ls = null;\r\n\tthis.data = null;\r\n\tif (arguments.length === 2) {\r\n\t\tlet p0 = arguments[0], p1 = arguments[1];\r\n\t\tthis.ls = new LineSegment(p0, p1);\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet p0 = arguments[0], p1 = arguments[1], data = arguments[2];\r\n\t\tthis.ls = new LineSegment(p0, p1);\r\n\t\tthis.data = data;\r\n\t} else if (arguments.length === 6) {\r\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5];\r\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2));\r\n\t} else if (arguments.length === 7) {\r\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5], data = arguments[6];\r\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2), data);\r\n\t}\r\n}\r\nextend(Segment.prototype, {\r\n\tgetLineSegment: function () {\r\n\t\treturn this.ls;\r\n\t},\r\n\tgetEndZ: function () {\r\n\t\tvar p = this.ls.getCoordinate(1);\r\n\t\treturn p.z;\r\n\t},\r\n\tgetStartZ: function () {\r\n\t\tvar p = this.ls.getCoordinate(0);\r\n\t\treturn p.z;\r\n\t},\r\n\tintersection: function (s) {\r\n\t\treturn this.ls.intersection(s.getLineSegment());\r\n\t},\r\n\tgetStart: function () {\r\n\t\treturn this.ls.getCoordinate(0);\r\n\t},\r\n\tgetEnd: function () {\r\n\t\treturn this.ls.getCoordinate(1);\r\n\t},\r\n\tgetEndY: function () {\r\n\t\tvar p = this.ls.getCoordinate(1);\r\n\t\treturn p.y;\r\n\t},\r\n\tgetStartX: function () {\r\n\t\tvar p = this.ls.getCoordinate(0);\r\n\t\treturn p.x;\r\n\t},\r\n\tequalsTopo: function (s) {\r\n\t\treturn this.ls.equalsTopo(s.getLineSegment());\r\n\t},\r\n\tgetStartY: function () {\r\n\t\tvar p = this.ls.getCoordinate(0);\r\n\t\treturn p.y;\r\n\t},\r\n\tsetData: function (data) {\r\n\t\tthis.data = data;\r\n\t},\r\n\tgetData: function () {\r\n\t\treturn this.data;\r\n\t},\r\n\tgetEndX: function () {\r\n\t\tvar p = this.ls.getCoordinate(1);\r\n\t\treturn p.x;\r\n\t},\r\n\ttoString: function () {\r\n\t\treturn this.ls.toString();\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn Segment;\r\n\t}\r\n});\r\n","import extend from '../../../../../extend';\r\nexport default function KdNodeVisitor() {}\r\nextend(KdNodeVisitor.prototype, {\r\n\tvisit: function (node) {},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn KdNodeVisitor;\r\n\t}\r\n});\r\n","import Coordinate from '../../geom/Coordinate';\r\nimport extend from '../../../../../extend';\r\nexport default function KdNode() {\r\n\tthis.p = null;\r\n\tthis.data = null;\r\n\tthis.left = null;\r\n\tthis.right = null;\r\n\tthis.count = null;\r\n\tif (arguments.length === 2) {\r\n\t\tlet p = arguments[0], data = arguments[1];\r\n\t\tthis.p = new Coordinate(p);\r\n\t\tthis.left = null;\r\n\t\tthis.right = null;\r\n\t\tthis.count = 1;\r\n\t\tthis.data = data;\r\n\t} else if (arguments.length === 3) {\r\n\t\tlet _x = arguments[0], _y = arguments[1], data = arguments[2];\r\n\t\tthis.p = new Coordinate(_x, _y);\r\n\t\tthis.left = null;\r\n\t\tthis.right = null;\r\n\t\tthis.count = 1;\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\nextend(KdNode.prototype, {\r\n\tisRepeated: function () {\r\n\t\treturn this.count > 1;\r\n\t},\r\n\tgetRight: function () {\r\n\t\treturn this.right;\r\n\t},\r\n\tgetCoordinate: function () {\r\n\t\treturn this.p;\r\n\t},\r\n\tsetLeft: function (_left) {\r\n\t\tthis.left = _left;\r\n\t},\r\n\tgetX: function () {\r\n\t\treturn this.p.x;\r\n\t},\r\n\tgetData: function () {\r\n\t\treturn this.data;\r\n\t},\r\n\tgetCount: function () {\r\n\t\treturn this.count;\r\n\t},\r\n\tgetLeft: function () {\r\n\t\treturn this.left;\r\n\t},\r\n\tgetY: function () {\r\n\t\treturn this.p.y;\r\n\t},\r\n\tincrement: function () {\r\n\t\tthis.count = this.count + 1;\r\n\t},\r\n\tsetRight: function (_right) {\r\n\t\tthis.right = _right;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn KdNode;\r\n\t}\r\n});\r\n","import CoordinateList from '../../geom/CoordinateList';\r\nimport hasInterface from '../../../../../hasInterface';\r\nimport extend from '../../../../../extend';\r\nimport ArrayList from '../../../../../java/util/ArrayList';\r\nimport KdNodeVisitor from './KdNodeVisitor';\r\nimport Envelope from '../../geom/Envelope';\r\nimport List from '../../../../../java/util/List';\r\nimport KdNode from './KdNode';\r\nexport default function KdTree() {\r\n\tthis.root = null;\r\n\tthis.numberOfNodes = null;\r\n\tthis.tolerance = null;\r\n\tif (arguments.length === 0) {\r\n\t\tKdTree.call(this, 0.0);\r\n\t} else if (arguments.length === 1) {\r\n\t\tlet tolerance = arguments[0];\r\n\t\tthis.tolerance = tolerance;\r\n\t}\r\n}\r\nextend(KdTree.prototype, {\r\n\tinsert: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet p = arguments[0];\r\n\t\t\treturn this.insert(p, null);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet p = arguments[0], data = arguments[1];\r\n\t\t\tif (this.root === null) {\r\n\t\t\t\tthis.root = new KdNode(p, data);\r\n\t\t\t\treturn this.root;\r\n\t\t\t}\r\n\t\t\tif (this.tolerance > 0) {\r\n\t\t\t\tvar matchNode = this.findBestMatchNode(p);\r\n\t\t\t\tif (matchNode !== null) {\r\n\t\t\t\t\tmatchNode.increment();\r\n\t\t\t\t\treturn matchNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.insertExact(p, data);\r\n\t\t}\r\n\t},\r\n\tquery: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet queryEnv = arguments[0];\r\n\t\t\tvar result = new ArrayList();\r\n\t\t\tthis.query(queryEnv, result);\r\n\t\t\treturn result;\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tif (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\r\n\t\t\t\tlet queryEnv = arguments[0], result = arguments[1];\r\n\t\t\t\tthis.queryNode(this.root, queryEnv, true, {\r\n\t\t\t\t\tinterfaces_: function () {\r\n\t\t\t\t\t\treturn [KdNodeVisitor];\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvisit: function (node) {\r\n\t\t\t\t\t\tresult.add(node);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\r\n\t\t\t\tlet queryEnv = arguments[0], visitor = arguments[1];\r\n\t\t\t\tthis.queryNode(this.root, queryEnv, true, visitor);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tqueryNode: function (currentNode, queryEnv, odd, visitor) {\r\n\t\tif (currentNode === null) return null;\r\n\t\tvar min = null;\r\n\t\tvar max = null;\r\n\t\tvar discriminant = null;\r\n\t\tif (odd) {\r\n\t\t\tmin = queryEnv.getMinX();\r\n\t\t\tmax = queryEnv.getMaxX();\r\n\t\t\tdiscriminant = currentNode.getX();\r\n\t\t} else {\r\n\t\t\tmin = queryEnv.getMinY();\r\n\t\t\tmax = queryEnv.getMaxY();\r\n\t\t\tdiscriminant = currentNode.getY();\r\n\t\t}\r\n\t\tvar searchLeft = min < discriminant;\r\n\t\tvar searchRight = discriminant <= max;\r\n\t\tif (searchLeft) {\r\n\t\t\tthis.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor);\r\n\t\t}\r\n\t\tif (queryEnv.contains(currentNode.getCoordinate())) {\r\n\t\t\tvisitor.visit(currentNode);\r\n\t\t}\r\n\t\tif (searchRight) {\r\n\t\t\tthis.queryNode(currentNode.getRight(), queryEnv, !odd, visitor);\r\n\t\t}\r\n\t},\r\n\tfindBestMatchNode: function (p) {\r\n\t\tvar visitor = new BestMatchVisitor(p, this.tolerance);\r\n\t\tthis.query(visitor.queryEnvelope(), visitor);\r\n\t\treturn visitor.getNode();\r\n\t},\r\n\tisEmpty: function () {\r\n\t\tif (this.root === null) return true;\r\n\t\treturn false;\r\n\t},\r\n\tinsertExact: function (p, data) {\r\n\t\tvar currentNode = this.root;\r\n\t\tvar leafNode = this.root;\r\n\t\tvar isOddLevel = true;\r\n\t\tvar isLessThan = true;\r\n\t\twhile (currentNode !== null) {\r\n\t\t\tif (currentNode !== null) {\r\n\t\t\t\tvar isInTolerance = p.distance(currentNode.getCoordinate()) <= this.tolerance;\r\n\t\t\t\tif (isInTolerance) {\r\n\t\t\t\t\tcurrentNode.increment();\r\n\t\t\t\t\treturn currentNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (isOddLevel) {\r\n\t\t\t\tisLessThan = p.x < currentNode.getX();\r\n\t\t\t} else {\r\n\t\t\t\tisLessThan = p.y < currentNode.getY();\r\n\t\t\t}\r\n\t\t\tleafNode = currentNode;\r\n\t\t\tif (isLessThan) {\r\n\t\t\t\tcurrentNode = currentNode.getLeft();\r\n\t\t\t} else {\r\n\t\t\t\tcurrentNode = currentNode.getRight();\r\n\t\t\t}\r\n\t\t\tisOddLevel = !isOddLevel;\r\n\t\t}\r\n\t\tthis.numberOfNodes = this.numberOfNodes + 1;\r\n\t\tvar node = new KdNode(p, data);\r\n\t\tif (isLessThan) {\r\n\t\t\tleafNode.setLeft(node);\r\n\t\t} else {\r\n\t\t\tleafNode.setRight(node);\r\n\t\t}\r\n\t\treturn node;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn KdTree;\r\n\t}\r\n});\r\nKdTree.toCoordinates = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet kdnodes = arguments[0];\r\n\t\treturn KdTree.toCoordinates(kdnodes, false);\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet kdnodes = arguments[0], includeRepeated = arguments[1];\r\n\t\tvar coord = new CoordinateList();\r\n\t\tfor (var it = kdnodes.iterator(); it.hasNext(); ) {\r\n\t\t\tvar node = it.next();\r\n\t\t\tvar count = includeRepeated ? node.getCount() : 1;\r\n\t\t\tfor (var i = 0; i < count; i++) {\r\n\t\t\t\tcoord.add(node.getCoordinate(), true);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn coord.toCoordinateArray();\r\n\t}\r\n};\r\nfunction BestMatchVisitor() {\r\n\tthis.tolerance = null;\r\n\tthis.matchNode = null;\r\n\tthis.matchDist = 0.0;\r\n\tthis.p = null;\r\n\tlet p = arguments[0], tolerance = arguments[1];\r\n\tthis.p = p;\r\n\tthis.tolerance = tolerance;\r\n}\r\nextend(BestMatchVisitor.prototype, {\r\n\tvisit: function (node) {\r\n\t\tvar dist = this.p.distance(node.getCoordinate());\r\n\t\tvar isInTolerance = dist <= this.tolerance;\r\n\t\tif (!isInTolerance) return null;\r\n\t\tvar update = false;\r\n\t\tif (this.matchNode === null || dist < this.matchDist || this.matchNode !== null && dist === this.matchDist && node.getCoordinate().compareTo(this.matchNode.getCoordinate()) < 1) update = true;\r\n\t\tif (update) {\r\n\t\t\tthis.matchNode = node;\r\n\t\t\tthis.matchDist = dist;\r\n\t\t}\r\n\t},\r\n\tqueryEnvelope: function () {\r\n\t\tvar queryEnv = new Envelope(this.p);\r\n\t\tqueryEnv.expandBy(this.tolerance);\r\n\t\treturn queryEnv;\r\n\t},\r\n\tgetNode: function () {\r\n\t\treturn this.matchNode;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [KdNodeVisitor];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn BestMatchVisitor;\r\n\t}\r\n});\r\nKdTree.BestMatchVisitor = BestMatchVisitor;\r\n","import GeometryFactory from '../geom/GeometryFactory';\r\nimport NonEncroachingSplitPointFinder from './NonEncroachingSplitPointFinder';\r\nimport ConstraintVertex from './ConstraintVertex';\r\nimport Coordinate from '../geom/Coordinate';\r\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\r\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\r\nimport Double from '../../../../java/lang/Double';\r\nimport extend from '../../../../extend';\r\nimport LastFoundQuadEdgeLocator from './quadedge/LastFoundQuadEdgeLocator';\r\nimport Segment from './Segment';\r\nimport ConvexHull from '../algorithm/ConvexHull';\r\nimport KdTree from '../index/kdtree/KdTree';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Envelope from '../geom/Envelope';\r\nexport default function ConformingDelaunayTriangulator() {\r\n\tthis.initialVertices = null;\r\n\tthis.segVertices = null;\r\n\tthis.segments = new ArrayList();\r\n\tthis.subdiv = null;\r\n\tthis.incDel = null;\r\n\tthis.convexHull = null;\r\n\tthis.splitFinder = new NonEncroachingSplitPointFinder();\r\n\tthis.kdt = null;\r\n\tthis.vertexFactory = null;\r\n\tthis.computeAreaEnv = null;\r\n\tthis.splitPt = null;\r\n\tthis.tolerance = null;\r\n\tlet initialVertices = arguments[0], tolerance = arguments[1];\r\n\tthis.initialVertices = new ArrayList(initialVertices);\r\n\tthis.tolerance = tolerance;\r\n\tthis.kdt = new KdTree(tolerance);\r\n}\r\nextend(ConformingDelaunayTriangulator.prototype, {\r\n\tgetInitialVertices: function () {\r\n\t\treturn this.initialVertices;\r\n\t},\r\n\tgetKDT: function () {\r\n\t\treturn this.kdt;\r\n\t},\r\n\tenforceConstraints: function () {\r\n\t\tthis.addConstraintVertices();\r\n\t\tvar count = 0;\r\n\t\tvar splits = 0;\r\n\t\tdo {\r\n\t\t\tsplits = this.enforceGabriel(this.segments);\r\n\t\t\tcount++;\r\n\t\t} while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER);\r\n\t},\r\n\tinsertSites: function (vertices) {\r\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\r\n\t\t\tvar v = i.next();\r\n\t\t\tthis.insertSite(v);\r\n\t\t}\r\n\t},\r\n\tgetVertexFactory: function () {\r\n\t\treturn this.vertexFactory;\r\n\t},\r\n\tgetPointArray: function () {\r\n\t\tvar pts = new Array(this.initialVertices.size() + this.segVertices.size()).fill(null);\r\n\t\tvar index = 0;\r\n\t\tfor (var i = this.initialVertices.iterator(); i.hasNext(); ) {\r\n\t\t\tvar v = i.next();\r\n\t\t\tpts[index++] = v.getCoordinate();\r\n\t\t}\r\n\t\tfor (var i2 = this.segVertices.iterator(); i2.hasNext(); ) {\r\n\t\t\tvar v = i2.next();\r\n\t\t\tpts[index++] = v.getCoordinate();\r\n\t\t}\r\n\t\treturn pts;\r\n\t},\r\n\tsetConstraints: function (segments, segVertices) {\r\n\t\tthis.segments = segments;\r\n\t\tthis.segVertices = segVertices;\r\n\t},\r\n\tcomputeConvexHull: function () {\r\n\t\tvar fact = new GeometryFactory();\r\n\t\tvar coords = this.getPointArray();\r\n\t\tvar hull = new ConvexHull(coords, fact);\r\n\t\tthis.convexHull = hull.getConvexHull();\r\n\t},\r\n\taddConstraintVertices: function () {\r\n\t\tthis.computeConvexHull();\r\n\t\tthis.insertSites(this.segVertices);\r\n\t},\r\n\tfindNonGabrielPoint: function (seg) {\r\n\t\tvar p = seg.getStart();\r\n\t\tvar q = seg.getEnd();\r\n\t\tvar midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0);\r\n\t\tvar segRadius = p.distance(midPt);\r\n\t\tvar env = new Envelope(midPt);\r\n\t\tenv.expandBy(segRadius);\r\n\t\tvar result = this.kdt.query(env);\r\n\t\tvar closestNonGabriel = null;\r\n\t\tvar minDist = Double.MAX_VALUE;\r\n\t\tfor (var i = result.iterator(); i.hasNext(); ) {\r\n\t\t\tvar nextNode = i.next();\r\n\t\t\tvar testPt = nextNode.getCoordinate();\r\n\t\t\tif (testPt.equals2D(p) || testPt.equals2D(q)) continue;\r\n\t\t\tvar testRadius = midPt.distance(testPt);\r\n\t\t\tif (testRadius < segRadius) {\r\n\t\t\t\tvar testDist = testRadius;\r\n\t\t\t\tif (closestNonGabriel === null || testDist < minDist) {\r\n\t\t\t\t\tclosestNonGabriel = testPt;\r\n\t\t\t\t\tminDist = testDist;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn closestNonGabriel;\r\n\t},\r\n\tgetConstraintSegments: function () {\r\n\t\treturn this.segments;\r\n\t},\r\n\tsetSplitPointFinder: function (splitFinder) {\r\n\t\tthis.splitFinder = splitFinder;\r\n\t},\r\n\tgetConvexHull: function () {\r\n\t\treturn this.convexHull;\r\n\t},\r\n\tgetTolerance: function () {\r\n\t\treturn this.tolerance;\r\n\t},\r\n\tenforceGabriel: function (segsToInsert) {\r\n\t\tvar newSegments = new ArrayList();\r\n\t\tvar splits = 0;\r\n\t\tvar segsToRemove = new ArrayList();\r\n\t\tfor (var i = segsToInsert.iterator(); i.hasNext(); ) {\r\n\t\t\tvar seg = i.next();\r\n\t\t\tvar encroachPt = this.findNonGabrielPoint(seg);\r\n\t\t\tif (encroachPt === null) continue;\r\n\t\t\tthis.splitPt = this.splitFinder.findSplitPoint(seg, encroachPt);\r\n\t\t\tvar splitVertex = this.createVertex(this.splitPt, seg);\r\n\t\t\tvar insertedVertex = this.insertSite(splitVertex);\r\n\t\t\tvar s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData());\r\n\t\t\tvar s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData());\r\n\t\t\tnewSegments.add(s1);\r\n\t\t\tnewSegments.add(s2);\r\n\t\t\tsegsToRemove.add(seg);\r\n\t\t\tsplits = splits + 1;\r\n\t\t}\r\n\t\tsegsToInsert.removeAll(segsToRemove);\r\n\t\tsegsToInsert.addAll(newSegments);\r\n\t\treturn splits;\r\n\t},\r\n\tcreateVertex: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet p = arguments[0];\r\n\t\t\tvar v = null;\r\n\t\t\tif (this.vertexFactory !== null) v = this.vertexFactory.createVertex(p, null); else v = new ConstraintVertex(p);\r\n\t\t\treturn v;\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet p = arguments[0], seg = arguments[1];\r\n\t\t\tvar v = null;\r\n\t\t\tif (this.vertexFactory !== null) v = this.vertexFactory.createVertex(p, seg); else v = new ConstraintVertex(p);\r\n\t\t\tv.setOnConstraint(true);\r\n\t\t\treturn v;\r\n\t\t}\r\n\t},\r\n\tgetSubdivision: function () {\r\n\t\treturn this.subdiv;\r\n\t},\r\n\tcomputeBoundingBox: function () {\r\n\t\tvar vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this.initialVertices);\r\n\t\tvar segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this.segVertices);\r\n\t\tvar allPointsEnv = new Envelope(vertexEnv);\r\n\t\tallPointsEnv.expandToInclude(segEnv);\r\n\t\tvar deltaX = allPointsEnv.getWidth() * 0.2;\r\n\t\tvar deltaY = allPointsEnv.getHeight() * 0.2;\r\n\t\tvar delta = Math.max(deltaX, deltaY);\r\n\t\tthis.computeAreaEnv = new Envelope(allPointsEnv);\r\n\t\tthis.computeAreaEnv.expandBy(delta);\r\n\t},\r\n\tsetVertexFactory: function (vertexFactory) {\r\n\t\tthis.vertexFactory = vertexFactory;\r\n\t},\r\n\tformInitialDelaunay: function () {\r\n\t\tthis.computeBoundingBox();\r\n\t\tthis.subdiv = new QuadEdgeSubdivision(this.computeAreaEnv, this.tolerance);\r\n\t\tthis.subdiv.setLocator(new LastFoundQuadEdgeLocator(this.subdiv));\r\n\t\tthis.incDel = new IncrementalDelaunayTriangulator(this.subdiv);\r\n\t\tthis.insertSites(this.initialVertices);\r\n\t},\r\n\tinsertSite: function () {\r\n\t\tif (arguments[0] instanceof ConstraintVertex) {\r\n\t\t\tlet v = arguments[0];\r\n\t\t\tvar kdnode = this.kdt.insert(v.getCoordinate(), v);\r\n\t\t\tif (!kdnode.isRepeated()) {\r\n\t\t\t\tthis.incDel.insertSite(v);\r\n\t\t\t} else {\r\n\t\t\t\tvar snappedV = kdnode.getData();\r\n\t\t\t\tsnappedV.merge(v);\r\n\t\t\t\treturn snappedV;\r\n\t\t\t}\r\n\t\t\treturn v;\r\n\t\t} else if (arguments[0] instanceof Coordinate) {\r\n\t\t\tlet p = arguments[0];\r\n\t\t\tthis.insertSite(this.createVertex(p));\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ConformingDelaunayTriangulator;\r\n\t}\r\n});\r\nConformingDelaunayTriangulator.computeVertexEnvelope = function (vertices) {\r\n\tvar env = new Envelope();\r\n\tfor (var i = vertices.iterator(); i.hasNext(); ) {\r\n\t\tvar v = i.next();\r\n\t\tenv.expandToInclude(v.getCoordinate());\r\n\t}\r\n\treturn env;\r\n};\r\nConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99;\r\n","import CoordinateList from '../geom/CoordinateList';\r\nimport Geometry from '../geom/Geometry';\r\nimport Arrays from '../../../../java/util/Arrays';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport Collection from '../../../../java/util/Collection';\r\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\r\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\r\nimport extend from '../../../../extend';\r\nimport Vertex from './quadedge/Vertex';\r\nimport CoordinateArrays from '../geom/CoordinateArrays';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport Envelope from '../geom/Envelope';\r\nexport default function DelaunayTriangulationBuilder() {\r\n\tthis.siteCoords = null;\r\n\tthis.tolerance = 0.0;\r\n\tthis.subdiv = null;\r\n}\r\nextend(DelaunayTriangulationBuilder.prototype, {\r\n\tcreate: function () {\r\n\t\tif (this.subdiv !== null) return null;\r\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this.siteCoords);\r\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this.siteCoords);\r\n\t\tthis.subdiv = new QuadEdgeSubdivision(siteEnv, this.tolerance);\r\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this.subdiv);\r\n\t\ttriangulator.insertSites(vertices);\r\n\t},\r\n\tsetTolerance: function (tolerance) {\r\n\t\tthis.tolerance = tolerance;\r\n\t},\r\n\tsetSites: function () {\r\n\t\tif (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geom = arguments[0];\r\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\r\n\t\t} else if (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet coords = arguments[0];\r\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\r\n\t\t}\r\n\t},\r\n\tgetEdges: function (geomFact) {\r\n\t\tthis.create();\r\n\t\treturn this.subdiv.getEdges(geomFact);\r\n\t},\r\n\tgetSubdivision: function () {\r\n\t\tthis.create();\r\n\t\treturn this.subdiv;\r\n\t},\r\n\tgetTriangles: function (geomFact) {\r\n\t\tthis.create();\r\n\t\treturn this.subdiv.getTriangles(geomFact);\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn DelaunayTriangulationBuilder;\r\n\t}\r\n});\r\nDelaunayTriangulationBuilder.extractUniqueCoordinates = function (geom) {\r\n\tif (geom === null) return new CoordinateList();\r\n\tvar coords = geom.getCoordinates();\r\n\treturn DelaunayTriangulationBuilder.unique(coords);\r\n};\r\nDelaunayTriangulationBuilder.envelope = function (coords) {\r\n\tvar env = new Envelope();\r\n\tfor (var i = coords.iterator(); i.hasNext(); ) {\r\n\t\tvar coord = i.next();\r\n\t\tenv.expandToInclude(coord);\r\n\t}\r\n\treturn env;\r\n};\r\nDelaunayTriangulationBuilder.unique = function (coords) {\r\n\tvar coordsCopy = CoordinateArrays.copyDeep(coords);\r\n\tArrays.sort(coordsCopy);\r\n\tvar coordList = new CoordinateList(coordsCopy, false);\r\n\treturn coordList;\r\n};\r\nDelaunayTriangulationBuilder.toVertices = function (coords) {\r\n\tvar verts = new ArrayList();\r\n\tfor (var i = coords.iterator(); i.hasNext(); ) {\r\n\t\tvar coord = i.next();\r\n\t\tverts.add(new Vertex(coord));\r\n\t}\r\n\treturn verts;\r\n};\r\n","import ConformingDelaunayTriangulator from './ConformingDelaunayTriangulator';\r\nimport ConstraintVertex from './ConstraintVertex';\r\nimport extend from '../../../../extend';\r\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\r\nimport Segment from './Segment';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\r\nimport TreeMap from '../../../../java/util/TreeMap';\r\nexport default function ConformingDelaunayTriangulationBuilder() {\r\n\tthis.siteCoords = null;\r\n\tthis.constraintLines = null;\r\n\tthis.tolerance = 0.0;\r\n\tthis.subdiv = null;\r\n\tthis.constraintVertexMap = new TreeMap();\r\n}\r\nextend(ConformingDelaunayTriangulationBuilder.prototype, {\r\n\tcreateSiteVertices: function (coords) {\r\n\t\tvar verts = new ArrayList();\r\n\t\tfor (var i = coords.iterator(); i.hasNext(); ) {\r\n\t\t\tvar coord = i.next();\r\n\t\t\tif (this.constraintVertexMap.containsKey(coord)) continue;\r\n\t\t\tverts.add(new ConstraintVertex(coord));\r\n\t\t}\r\n\t\treturn verts;\r\n\t},\r\n\tcreate: function () {\r\n\t\tif (this.subdiv !== null) return null;\r\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this.siteCoords);\r\n\t\tvar segments = new ArrayList();\r\n\t\tif (this.constraintLines !== null) {\r\n\t\t\tsiteEnv.expandToInclude(this.constraintLines.getEnvelopeInternal());\r\n\t\t\tthis.createVertices(this.constraintLines);\r\n\t\t\tsegments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this.constraintLines);\r\n\t\t}\r\n\t\tvar sites = this.createSiteVertices(this.siteCoords);\r\n\t\tvar cdt = new ConformingDelaunayTriangulator(sites, this.tolerance);\r\n\t\tcdt.setConstraints(segments, new ArrayList(this.constraintVertexMap.values()));\r\n\t\tcdt.formInitialDelaunay();\r\n\t\tcdt.enforceConstraints();\r\n\t\tthis.subdiv = cdt.getSubdivision();\r\n\t},\r\n\tsetTolerance: function (tolerance) {\r\n\t\tthis.tolerance = tolerance;\r\n\t},\r\n\tsetConstraints: function (constraintLines) {\r\n\t\tthis.constraintLines = constraintLines;\r\n\t},\r\n\tsetSites: function (geom) {\r\n\t\tthis.siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\r\n\t},\r\n\tgetEdges: function (geomFact) {\r\n\t\tthis.create();\r\n\t\treturn this.subdiv.getEdges(geomFact);\r\n\t},\r\n\tgetSubdivision: function () {\r\n\t\tthis.create();\r\n\t\treturn this.subdiv;\r\n\t},\r\n\tgetTriangles: function (geomFact) {\r\n\t\tthis.create();\r\n\t\treturn this.subdiv.getTriangles(geomFact);\r\n\t},\r\n\tcreateVertices: function (geom) {\r\n\t\tvar coords = geom.getCoordinates();\r\n\t\tfor (var i = 0; i < coords.length; i++) {\r\n\t\t\tvar v = new ConstraintVertex(coords[i]);\r\n\t\t\tthis.constraintVertexMap.put(coords[i], v);\r\n\t\t}\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn ConformingDelaunayTriangulationBuilder;\r\n\t}\r\n});\r\nConformingDelaunayTriangulationBuilder.createConstraintSegments = function () {\r\n\tif (arguments.length === 1) {\r\n\t\tlet geom = arguments[0];\r\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\r\n\t\tvar constraintSegs = new ArrayList();\r\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\r\n\t\t\tvar line = i.next();\r\n\t\t\tConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs);\r\n\t\t}\r\n\t\treturn constraintSegs;\r\n\t} else if (arguments.length === 2) {\r\n\t\tlet line = arguments[0], constraintSegs = arguments[1];\r\n\t\tvar coords = line.getCoordinates();\r\n\t\tfor (var i = 1; i < coords.length; i++) {\r\n\t\t\tconstraintSegs.add(new Segment(coords[i - 1], coords[i]));\r\n\t\t}\r\n\t}\r\n};\r\n","import Geometry from '../geom/Geometry';\r\nimport hasInterface from '../../../../hasInterface';\r\nimport GeometryFactory from '../geom/GeometryFactory';\r\nimport Collection from '../../../../java/util/Collection';\r\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\r\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\r\nimport extend from '../../../../extend';\r\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\r\nimport CoordinateArrays from '../geom/CoordinateArrays';\r\nimport ArrayList from '../../../../java/util/ArrayList';\r\nexport default function VoronoiDiagramBuilder() {\r\n\tthis.siteCoords = null;\r\n\tthis.tolerance = 0.0;\r\n\tthis.subdiv = null;\r\n\tthis.clipEnv = null;\r\n\tthis.diagramEnv = null;\r\n}\r\nextend(VoronoiDiagramBuilder.prototype, {\r\n\tcreate: function () {\r\n\t\tif (this.subdiv !== null) return null;\r\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this.siteCoords);\r\n\t\tthis.diagramEnv = siteEnv;\r\n\t\tvar expandBy = Math.max(this.diagramEnv.getWidth(), this.diagramEnv.getHeight());\r\n\t\tthis.diagramEnv.expandBy(expandBy);\r\n\t\tif (this.clipEnv !== null) this.diagramEnv.expandToInclude(this.clipEnv);\r\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this.siteCoords);\r\n\t\tthis.subdiv = new QuadEdgeSubdivision(siteEnv, this.tolerance);\r\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this.subdiv);\r\n\t\ttriangulator.insertSites(vertices);\r\n\t},\r\n\tgetDiagram: function (geomFact) {\r\n\t\tthis.create();\r\n\t\tvar polys = this.subdiv.getVoronoiDiagram(geomFact);\r\n\t\treturn VoronoiDiagramBuilder.clipGeometryCollection(polys, this.diagramEnv);\r\n\t},\r\n\tsetTolerance: function (tolerance) {\r\n\t\tthis.tolerance = tolerance;\r\n\t},\r\n\tsetSites: function () {\r\n\t\tif (arguments[0] instanceof Geometry) {\r\n\t\t\tlet geom = arguments[0];\r\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\r\n\t\t} else if (hasInterface(arguments[0], Collection)) {\r\n\t\t\tlet coords = arguments[0];\r\n\t\t\tthis.siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\r\n\t\t}\r\n\t},\r\n\tsetClipEnvelope: function (clipEnv) {\r\n\t\tthis.clipEnv = clipEnv;\r\n\t},\r\n\tgetSubdivision: function () {\r\n\t\tthis.create();\r\n\t\treturn this.subdiv;\r\n\t},\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn VoronoiDiagramBuilder;\r\n\t}\r\n});\r\nVoronoiDiagramBuilder.clipGeometryCollection = function (geom, clipEnv) {\r\n\tvar clipPoly = geom.getFactory().toGeometry(clipEnv);\r\n\tvar clipped = new ArrayList();\r\n\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\r\n\t\tvar g = geom.getGeometryN(i);\r\n\t\tvar result = null;\r\n\t\tif (clipEnv.contains(g.getEnvelopeInternal())) result = g; else if (clipEnv.intersects(g.getEnvelopeInternal())) {\r\n\t\t\tresult = clipPoly.intersection(g);\r\n\t\t\tresult.setUserData(g.getUserData());\r\n\t\t}\r\n\t\tif (result !== null && !result.isEmpty()) {\r\n\t\t\tclipped.add(result);\r\n\t\t}\r\n\t}\r\n\treturn geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped));\r\n};\r\n","import SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\r\nimport extend from '../../../../../extend';\r\nimport OverlayOp from '../overlay/OverlayOp';\r\nexport default function UnionOp() {}\r\nextend(UnionOp.prototype, {\r\n\tinterfaces_: function () {\r\n\t\treturn [];\r\n\t},\r\n\tgetClass: function () {\r\n\t\treturn UnionOp;\r\n\t}\r\n});\r\nUnionOp.union = function (g, other) {\r\n\tif (g.isEmpty() || other.isEmpty()) {\r\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory());\r\n\t\tif (g.isEmpty()) return other.copy();\r\n\t\tif (other.isEmpty()) return g.copy();\r\n\t}\r\n\tg.checkNotGeometryCollection(g);\r\n\tg.checkNotGeometryCollection(other);\r\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION);\r\n};\r\n","/* Polyfill service v3.13.0\r\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\r\n *\r\n * - Array.prototype.fill, License: CC0 */\r\n\r\nif (!('fill' in Array.prototype)) {\r\n  Object.defineProperty(Array.prototype, 'fill', {\r\n    configurable: true,\r\n    value: function fill(value) {\r\n      if (this === undefined || this === null) {\r\n        throw new TypeError(this + ' is not an object');\r\n      }\r\n\r\n      var arrayLike = Object(this);\r\n\r\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\r\n\r\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\r\n\r\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\r\n\r\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\r\n\r\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\r\n\r\n      while (relativeStart < relativeEnd) {\r\n        arrayLike[relativeStart] = value;\r\n\r\n        ++relativeStart;\r\n      }\r\n\r\n      return arrayLike;\r\n    },\r\n    writable: true\r\n  });\r\n}\r\n","Number.isFinite = Number.isFinite || function (value) {\r\n  return typeof value === 'number' && isFinite(value)\r\n}\r\n\r\nNumber.isInteger = Number.isInteger || function (val) {\r\n  return typeof val === 'number' &&\r\n  isFinite(val) &&\r\n  Math.floor(val) === val\r\n}\r\n\r\nNumber.parseFloat = Number.parseFloat || parseFloat\r\n\r\nNumber.isNaN = Number.isNaN || function (value) {\r\n  return value !== value // eslint-disable-line\r\n}\r\n","Math.trunc = Math.trunc || function(x) {\r\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\r\n}\r\n","export default function (target, source) {\r\n  for (let key in source) {\r\n    if (source.hasOwnProperty(key)) target[key] = source[key]\r\n  }\r\n}\r\n","export default function (c, p) {\r\n  c.prototype = Object.create(p.prototype)\r\n  c.prototype.constructor = c\r\n}\r\n","export default function (o, i) {\r\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\r\n}\r\n","import Arrays from './Arrays'\r\nimport ArrayList from './ArrayList'\r\n\r\nconst Collections = {\r\n  reverseOrder: function () {\r\n    return {\r\n      compare (a, b) {\r\n        return b.compareTo(a)\r\n      }\r\n    }\r\n  },\r\n  min: function (l) {\r\n    Collections.sort(l)\r\n    return l.get(0)\r\n  },\r\n  sort: function (l, c) {\r\n    const a = l.toArray()\r\n    if (c) {\r\n      Arrays.sort(a, c)\r\n    } else {\r\n      Arrays.sort(a)\r\n    }\r\n    const i = l.iterator()\r\n    for (let pos = 0, alen = a.length; pos < alen; pos++) {\r\n      i.next()\r\n      i.set(a[pos])\r\n    }\r\n  },\r\n  singletonList: function (o) {\r\n    const arrayList = new ArrayList()\r\n    arrayList.add(o)\r\n    return arrayList\r\n  }\r\n}\r\n\r\nexport default Collections\r\n","import WKTWriter from './io/WKTWriter';\r\nimport GeometryCollectionMapper from './geom/util/GeometryCollectionMapper';\r\nimport IsValidOp from './operation/valid/IsValidOp';\r\nimport InteriorPointArea from './algorithm/InteriorPointArea';\r\nimport UnaryUnionOp from './operation/union/UnaryUnionOp';\r\nimport UnionOp from './operation/union/UnionOp';\r\nimport SnapIfNeededOverlayOp from './operation/overlay/snap/SnapIfNeededOverlayOp';\r\nimport InteriorPointLine from './algorithm/InteriorPointLine';\r\nimport IsSimpleOp from './operation/IsSimpleOp';\r\nimport BufferOp from './operation/buffer/BufferOp';\r\nimport ConvexHull from './algorithm/ConvexHull';\r\nimport Centroid from './algorithm/Centroid';\r\nimport Comparable from '../../../java/lang/Comparable';\r\nimport RelateOp from './operation/relate/RelateOp';\r\nimport InteriorPointPoint from './algorithm/InteriorPointPoint';\r\nimport Cloneable from '../../../java/lang/Cloneable';\r\nimport Serializable from '../../../java/io/Serializable';\r\nimport DistanceOp from './operation/distance/DistanceOp';\r\nimport Envelope from './geom/Envelope';\r\nimport RectangleContains from './operation/predicate/RectangleContains';\r\nimport Assert from './util/Assert';\r\nimport RectangleIntersects from './operation/predicate/RectangleIntersects';\r\nimport OverlayOp from './operation/overlay/OverlayOp';\r\n\r\nimport Geometry from './geom/Geometry';\r\nimport GeometryCollection from './geom/GeometryCollection';\r\n\r\nimport extend from '../../../extend';\r\n\r\nextend(Geometry.prototype, {\r\n\tequalsTopo: function (g) {\r\n\t\tif (!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())) return false;\r\n\t\treturn RelateOp.relate(this, g).isEquals(this.getDimension(), g.getDimension());\r\n\t},\r\n\tunion: function () {\r\n\t\tif (arguments.length === 0) {\r\n\t\t\treturn UnaryUnionOp.union(this);\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tlet other = arguments[0];\r\n\t\t\treturn UnionOp.union(this, other);\r\n\t\t}\r\n\t},\r\n\tisValid: function () {\r\n\t\treturn IsValidOp.isValid(this);\r\n\t},\r\n\tintersection: function (other) {\r\n\t\tif (this.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, this, other, this.factory);\r\n\t\tif (this.isGeometryCollection()) {\r\n\t\t\tvar g2 = other;\r\n\t\t\treturn GeometryCollectionMapper.map(this, {\r\n\t\t\t\tinterfaces_: function () {\r\n\t\t\t\t\treturn [MapOp];\r\n\t\t\t\t},\r\n\t\t\t\tmap: function (g) {\r\n\t\t\t\t\treturn g.intersection(g2);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.checkNotGeometryCollection(this);\r\n\t\tthis.checkNotGeometryCollection(other);\r\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.INTERSECTION);\r\n\t},\r\n\tcovers: function (g) {\r\n\t\treturn RelateOp.covers(this, g);\r\n\t},\r\n\tcoveredBy: function (g) {\r\n\t\treturn RelateOp.coveredBy(this, g);\r\n\t},\r\n\ttouches: function (g) {\r\n\t\treturn RelateOp.touches(this, g);\r\n\t},\r\n\tintersects: function (g) {\r\n\t\treturn RelateOp.intersects(this, g);\r\n\t},\r\n\twithin: function (g) {\r\n\t\treturn RelateOp.within(this, g);\r\n\t},\r\n\toverlaps: function (g) {\r\n\t\treturn RelateOp.overlaps(this, g);\r\n\t},\r\n\tdisjoint: function (g) {\r\n\t\treturn RelateOp.disjoint(this, g);\r\n\t},\r\n\tcrosses: function (g) {\r\n\t\treturn RelateOp.crosses(this, g);\r\n\t},\r\n\tbuffer: function () {\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tlet distance = arguments[0];\r\n\t\t\treturn BufferOp.bufferOp(this, distance);\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tlet distance = arguments[0], quadrantSegments = arguments[1];\r\n\t\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments);\r\n\t\t} else if (arguments.length === 3) {\r\n\t\t\tlet distance = arguments[0], quadrantSegments = arguments[1], endCapStyle = arguments[2];\r\n\t\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments, endCapStyle);\r\n\t\t}\r\n\t},\r\n\tconvexHull: function () {\r\n\t\treturn new ConvexHull(this).getConvexHull();\r\n\t},\r\n\trelate: function (...args) {\r\n\t\treturn RelateOp.relate(this, ...args);\r\n\t},\r\n\tgetCentroid: function () {\r\n\t\tif (this.isEmpty()) return this.factory.createPoint();\r\n\t\tvar centPt = Centroid.getCentroid(this);\r\n\t\treturn this.createPointFromInternalCoord(centPt, this);\r\n\t},\r\n\tgetInteriorPoint: function () {\r\n\t\tif (this.isEmpty()) return this.factory.createPoint();\r\n\t\tvar interiorPt = null;\r\n\t\tvar dim = this.getDimension();\r\n\t\tif (dim === 0) {\r\n\t\t\tvar intPt = new InteriorPointPoint(this);\r\n\t\t\tinteriorPt = intPt.getInteriorPoint();\r\n\t\t} else if (dim === 1) {\r\n\t\t\tvar intPt = new InteriorPointLine(this);\r\n\t\t\tinteriorPt = intPt.getInteriorPoint();\r\n\t\t} else {\r\n\t\t\tvar intPt = new InteriorPointArea(this);\r\n\t\t\tinteriorPt = intPt.getInteriorPoint();\r\n\t\t}\r\n\t\treturn this.createPointFromInternalCoord(interiorPt, this);\r\n\t},\r\n\tsymDifference: function (other) {\r\n\t\tif (this.isEmpty() || other.isEmpty()) {\r\n\t\t\tif (this.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, this, other, this.factory);\r\n\t\t\tif (this.isEmpty()) return other.copy();\r\n\t\t\tif (other.isEmpty()) return this.copy();\r\n\t\t}\r\n\t\tthis.checkNotGeometryCollection(this);\r\n\t\tthis.checkNotGeometryCollection(other);\r\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.SYMDIFFERENCE);\r\n\t},\r\n\tcreatePointFromInternalCoord: function (coord, exemplar) {\r\n\t\texemplar.getPrecisionModel().makePrecise(coord);\r\n\t\treturn exemplar.getFactory().createPoint(coord);\r\n\t},\r\n\ttoText: function () {\r\n\t\tvar writer = new WKTWriter();\r\n\t\treturn writer.write(this);\r\n\t},\r\n\ttoString: function() {\r\n\t\tthis.toText();\r\n\t},\r\n\tcontains: function (g) {\r\n\t\treturn RelateOp.contains(this, g);\r\n\t},\r\n\tdifference: function (other) {\r\n\t\tif (this.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, this, other, this.factory);\r\n\t\tif (other.isEmpty()) return this.copy();\r\n\t\tthis.checkNotGeometryCollection(this);\r\n\t\tthis.checkNotGeometryCollection(other);\r\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.DIFFERENCE);\r\n\t},\r\n\tisSimple: function () {\r\n\t\tvar op = new IsSimpleOp(this);\r\n\t\treturn op.isSimple();\r\n\t},\r\n\tisWithinDistance: function (geom, distance) {\r\n\t\tvar envDist = this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());\r\n\t\tif (envDist > distance) return false;\r\n\t\treturn DistanceOp.isWithinDistance(this, geom, distance);\r\n\t},\r\n\tdistance: function (g) {\r\n\t\treturn DistanceOp.distance(this, g);\r\n\t},\r\n\tisEquivalentClass: function (other) {\r\n\t\treturn this.getClass() === other.getClass();\r\n\t}\r\n})\r\n","import './Array'\r\nimport './Number'\r\nimport './Math'\r\n\r\nimport * as geom from './org/locationtech/jts/geom'\r\nimport * as algorithm from './org/locationtech/jts/algorithm'\r\nimport * as densify from './org/locationtech/jts/densify'\r\nimport * as dissolve from './org/locationtech/jts/dissolve'\r\nimport * as geomgraph from './org/locationtech/jts/geomgraph'\r\nimport * as index from './org/locationtech/jts/index'\r\nimport * as io from './org/locationtech/jts/io'\r\nimport * as noding from './org/locationtech/jts/noding'\r\nimport * as operation from './org/locationtech/jts/operation'\r\nimport * as precision from './org/locationtech/jts/precision'\r\nimport * as simplify from './org/locationtech/jts/simplify'\r\nimport * as triangulate from './org/locationtech/jts/triangulate'\r\n\r\nimport './org/locationtech/jts/monkey'\r\n\r\nconst version = 'npm_package_version (git_hash)'\r\nexport {\r\n  version,\r\n  algorithm,\r\n  densify,\r\n  dissolve,\r\n  geom,\r\n  geomgraph,\r\n  index,\r\n  io,\r\n  noding,\r\n  operation,\r\n  precision,\r\n  simplify,\r\n  triangulate\r\n}\r\n"]}